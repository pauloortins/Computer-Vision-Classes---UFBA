#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

PYTHON_VERSIONS = $(shell pyversions -vr)

configure: configure-stamp
configure-stamp:
	dh_testdir
	# Nothing to be done
	touch $@

build: build-stamp
build-stamp: configure-stamp  
	dh_testdir

	set -e -x ; \
	for py in $(PYTHON_VERSIONS); do \
		mkdir source-output$$py ; \
		cp -r source source-output$$py/source ; \
		PYTHON=`which python$$py` $(MAKE) -C source-output$$py/source ; \
		PYTHON=`which python$$py` $(MAKE) -C source-output$$py/source/crs ; \
		mv source-output$$py/source/crs/_orngCRS.so source-output$$py ; \
		rm -rf source-output$$py/source ; \
	done

	touch $@

clean: 
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	$(MAKE) -C source clean
	$(MAKE) -C source/crs clean
	
	rm -f _orngCRS.so

	set -e -x ; \
	for py in $(PYTHON_VERSIONS); do \
		rm -rf source-output$$py ; \
	done

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_prep

	rm -f COPYING doc/COPYING
	rm -f INSTALL.linux.txt doc/INSTALL.linux.txt

	# Documentation for orange-canvas
	mkdir -p $(CURDIR)/debian/tmp/usr/share/doc/orange-canvas/
	cp LICENSES $(CURDIR)/debian/tmp/usr/share/doc/orange-canvas/
	cp doc/style.css $(CURDIR)/debian/tmp/usr/share/doc/orange-canvas/
	cp -r doc/widgets/ $(CURDIR)/debian/tmp/usr/share/doc/orange-canvas/

	# Install icon
	mkdir -p $(CURDIR)/debian/tmp/usr/share/pixmaps/
	mv $(CURDIR)/debian/tmp/usr/share/doc/orange-canvas/widgets/icon.xpm $(CURDIR)/debian/tmp/usr/share/pixmaps/orange.xpm

	# Documentation for python-orange
	mkdir -p $(CURDIR)/debian/tmp/usr/share/doc/python-orange/
	cp LICENSES $(CURDIR)/debian/tmp/usr/share/doc/python-orange/
	cp -r doc/* $(CURDIR)/debian/tmp/usr/share/doc/python-orange/
	rm -rf $(CURDIR)/debian/tmp/usr/share/doc/python-orange/widgets/

	# Files for both orange-canvas and python-orange
	set -e -x ; \
	for py in $(PYTHON_VERSIONS); do \
		mkdir -p $(CURDIR)/debian/tmp/usr/lib/python$$py/dist-packages/orange/ ; \
		find . -mindepth 1 -maxdepth 1 -not -name debian -not -name 'source-output*' -exec cp -r {} $(CURDIR)/debian/tmp/usr/lib/python$$py/dist-packages/orange/ ';' ; \
		cp -r source-output$$py/* $(CURDIR)/debian/tmp/usr/lib/python$$py/dist-packages/orange/ ; \
	done
	
	# Cleans up
	set -e -x ; \
	for py in $(PYTHON_VERSIONS); do \
		cd $(CURDIR)/debian/tmp/usr/lib/python$$py/dist-packages/orange/ ; \
		rm -rf COPYING LICENSES doc/ source/ debian/ ; \
		rm -rf c45.dll liborange_include.a updateOrange.py ; \
	done

	# Installation registration
	set -e -x ; \
	for py in $(PYTHON_VERSIONS); do \
		echo "orange" > $(CURDIR)/debian/tmp/usr/lib/python$$py/dist-packages/orange.pth ; \
		echo "datasetsPath=\"/usr/share/doc/python-orange/datasets/\"" > $(CURDIR)/debian/tmp/usr/lib/python$$py/dist-packages/orange/orngConfiguration.py ; \
	done

	# Generates executable
	mkdir -p $(CURDIR)/debian/tmp/usr/bin/
	set -e -x ; \
	for py in $(PYTHON_VERSIONS); do \
		echo "#!/bin/bash" > $(CURDIR)/debian/tmp/usr/bin/orange-py$$py ; \
		echo "exec -a \"\$$0\" /usr/bin/python$$py" /usr/lib/python$$py/dist-packages/orange/OrangeCanvas/orngCanvas.pyw "\"\$$@\"" >> $(CURDIR)/debian/tmp/usr/bin/orange-py$$py ; \
		chmod +x $(CURDIR)/debian/tmp/usr/bin/orange-py$$py ; \
	done

	echo "#!/bin/bash" > $(CURDIR)/debian/tmp/usr/bin/orange
	echo "PYVER=\`pyversions -vd\`" >> $(CURDIR)/debian/tmp/usr/bin/orange
	echo "PYEXE=\$$(which \`pyversions -d\`)" >> $(CURDIR)/debian/tmp/usr/bin/orange
	echo "exec -a \"\$$0\" \$$PYEXE /usr/lib/python\$$PYVER/dist-packages/orange/OrangeCanvas/orngCanvas.pyw \"\$$@\"" >> $(CURDIR)/debian/tmp/usr/bin/orange
	chmod +x $(CURDIR)/debian/tmp/usr/bin/orange

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
# Order between orange-canvas and python-orange is important so that dh_install moves files correctly
binary-arch: python-orange orange-canvas

python-orange orange-canvas: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs -p$@
	dh_installdocs -p$@
#	dh_installexamples -p$@

	# We temporary rename file so that it is left for orange-canvas
	set -e -x ; \
	if [ "$@" = "python-orange" ]; then \
		rename 's/\.so$$/-so/' $(CURDIR)/debian/tmp/usr/lib/python*/*-packages/orange/orangeqt.so ; \
	fi

	dh_install -p$@ --sourcedir=debian/tmp --exclude=build-stamp --exclude=configure-stamp
	cd debian/tmp ; rm -rf `cat ../$@.install`

	# We rename it back
	set -e -x ; \
	if [ "$@" = "python-orange" ]; then \
		rename 's/-so$$/.so/' $(CURDIR)/debian/tmp/usr/lib/python*/*-packages/orange/orangeqt-so ; \
	fi

	dh_installmenu -p$@
#	dh_installdebconf -p$@
#	dh_installlogrotate -p$@
#	dh_installemacsen -p$@
#	dh_installpam -p$@
#	dh_installmime -p$@
#	dh_installinit -p$@
#	dh_installcron -p$@
#	dh_installinfo -p$@
	dh_installman -p$@
	dh_link -p$@
	dh_strip -p$@
	dh_compress -p$@ -X.tab -X.csv
	dh_fixperms -p$@
#	dh_perl -p$@
	dh_python2 -p$@
	dh_makeshlibs -p$@
	dh_installdeb -p$@
	dh_shlibdeps -p$@

	# We make dependencies less strict
	perl -i -p -e 's/(, )?python \(>= ([^.\)]+\.[^.)]+)\.[^)]+\)/$$1python (>= $$2)/g' $(CURDIR)/debian/$@.substvars

	# Require at least one version of libpython, not all of them; we move all of them to Recommends
	perl -n -e 'if (/^shlibs:Depends=.*?(libpython[^,]+(?:, libpython[^,]+)*)/) { print "shlibs:Recommends=$$1\n" }' $(CURDIR)/debian/$@.substvars >> $(CURDIR)/debian/$@.substvars
	perl -i -p -e '1 while s/^(shlibs:Depends=.*?)(libpython[^,]+), (libpython[^,]+)/$$1$$2 | $$3/g' $(CURDIR)/debian/$@.substvars

	dh_gencontrol -p$@
	dh_md5sums -p$@
	dh_builddeb -p$@

binary: binary-indep binary-arch

.PHONY: build clean binary-indep binary-arch binary install configure
