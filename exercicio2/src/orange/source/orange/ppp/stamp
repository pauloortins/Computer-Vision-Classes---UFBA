(dp0
S'TComputeDomainContingency_ImputeWithClassifier'
p1
(i__main__
ClassDefinition
p2
(dp3
S'extended'
p4
I1
sS'imported'
p5
I0
sS'name'
p6
g1
sS'parent'
p7
S'TComputeDomainContingency'
p8
sS'abstract'
p9
I00
sS'components'
p10
(lp11
sS'properties'
p12
(lp13
(S'TLearner'
p14
S'learnerForDiscrete'
p15
S'learner_for_discrete'
p16
S'constructs a classifier for imputation of discrete values'
p17
I0
I0
I00
Ntp18
a(S'TLearner'
p19
S'learnerForContinuous'
p20
S'learner_for_continuous'
p21
S'constructs a classifier for imputation of continuous values'
p22
I0
I0
I00
Ntp23
a(S'bool'
p24
S'classIsOuter'
p25
S'class_is_outer'
p26
S'tells whether the class is the outer variable in contingencies'
p27
I0
I0
I01
Ntp28
asS'constants'
p29
(dp30
sbsS'TRuleDataStoppingCriteria_NoPositives'
p31
(i__main__
ClassDefinition
p32
(dp33
g4
I1
sg5
I0
sg6
g31
sg7
S'TRuleDataStoppingCriteria'
p34
sg9
I00
sg10
(lp35
sg12
(lp36
sg29
(dp37
sbsS'TLearner_Python'
p38
(i__main__
ClassDefinition
p39
(dp40
g4
I1
sg5
I0
sg6
g38
sg7
S'TLearner'
p41
sg9
I00
sg10
(lp42
sg12
(lp43
(S'int'
p44
S'needs'
p45
g45
S'the kind of data that learner needs'
p46
I01
I0
I01
Ntp47
asg29
(dp48
sbsS'TConditionalProbabilityEstimator_FromDistribution'
p49
(i__main__
ClassDefinition
p50
(dp51
g4
I1
sg5
I0
sg6
g49
sg7
S'TConditionalProbabilityEstimator'
p52
sg9
I00
sg10
(lp53
sg12
(lp54
(S'TContingency'
p55
S'probabilities'
p56
g56
S'Contingency that stores conditional probabilities'
p57
I0
I0
I00
Ntp58
a(S'bool'
p59
S'supportsDiscrete'
p60
S'supports_discrete'
p61
S'can estimate probabilities of discrete attributes'
p62
I01
I0
I01
Ntp63
a(S'bool'
p64
S'supportsContinuous'
p65
S'supports_continuous'
p66
S'can estimate probabilities of continuous attributes'
p67
I01
I0
I01
Ntp68
asg29
(dp69
sbsS'TFeatureInducer'
p70
(i__main__
ClassDefinition
p71
(dp72
g4
I1
sg5
I0
sg6
g70
sg7
S'TOrange'
p73
sg9
I01
sg10
(lp74
sg12
(lp75
sg29
(dp76
sbsS'TIMByRowsConstructor'
p77
(i__main__
ClassDefinition
p78
(dp79
g4
I1
sg5
I0
sg6
g77
sg7
S'TOrange'
p80
sg9
I01
sg10
(lp81
sg12
(lp82
sg29
(dp83
sbsS'TExamplesDistanceConstructor_Lp'
p84
(i__main__
ClassDefinition
p85
(dp86
g4
I1
sg5
I0
sg6
g84
sg7
S'TExamplesDistanceConstructor_Normalized'
p87
sg9
I00
sg10
(lp88
sg12
(lp89
(S'float'
p90
S'p'
p91
g91
g91
I0
I0
I01
Ntp92
a(S'bool'
p93
S'normalize'
p94
g94
S'tells whether to normalize distances between attributes'
p95
I0
I0
I01
Ntp96
a(S'bool'
p97
S'ignoreUnknowns'
p98
S'ignore_unknowns'
p99
S'if true (default: false) unknown values are ignored in computation'
p100
I0
I0
I01
Ntp101
a(S'bool'
p102
S'ignoreClass'
p103
S'ignore_class'
p104
S'if true (default), class value is ignored when computing distances'
p105
I0
I0
I01
Ntp106
asg29
(dp107
sbsS'TFilteredGenerator'
p108
(i__main__
ClassDefinition
p109
(dp110
g4
I1
sg5
I0
sg6
g108
sg7
S'TAdapterGenerator'
p111
sg9
I00
sg10
(lp112
sg12
(lp113
(S'TFilter'
p114
S'filter'
p115
g115
S'decides which examples are skipped'
p116
I0
I0
I00
Ntp117
a(S'TDomain'
p118
S'domain'
p119
g119
S'domain'
p120
I0
I0
I00
Ntp121
a(S'int'
p122
S'version'
p123
g123
S'unique version identifier'
p124
I01
I0
I01
Ntp125
asg29
(dp126
sbsS'TExamplesDistance_Maximal'
p127
(i__main__
ClassDefinition
p128
(dp129
g4
I1
sg5
I0
sg6
g127
sg7
S'TExamplesDistance_Normalized'
p130
sg9
I00
sg10
(lp131
sg12
(lp132
(S'TAttributedFloatList'
p133
S'normalizers'
p134
g134
S'normalizing factors for attributes'
p135
I0
I0
I00
Ntp136
a(S'TAttributedFloatList'
p137
S'bases'
p138
g138
S'lowest values for attributes'
p139
I0
I0
I00
Ntp140
a(S'TAttributedFloatList'
p141
S'averages'
p142
g142
S'average values for continuous attribute values'
p143
I0
I0
I00
Ntp144
a(S'TAttributedFloatList'
p145
S'variances'
p146
g146
S'variations for continuous attribute values'
p147
I0
I0
I00
Ntp148
a(S'int'
p149
S'domainVersion'
p150
S'domain_version'
p151
S'version of domain on which the ranges were computed'
p152
I0
I0
I01
Ntp153
a(S'bool'
p154
S'normalize'
p155
g155
S'tells whether to normalize distances between attributes'
p156
I0
I0
I01
Ntp157
a(S'bool'
p158
S'ignoreUnknowns'
p159
S'ignore_unknowns'
p160
S'if true (default: false) unknown values are ignored in computation'
p161
I0
I0
I01
Ntp162
asg29
(dp163
sbsS'TSubsetsGenerator_withRestrictions_iterator'
p164
(i__main__
ClassDefinition
p165
(dp166
g4
I1
sg5
I0
sg6
g164
sg7
S'TSubsetsGenerator_iterator'
p167
sg9
I00
sg10
(lp168
sg12
(lp169
(S'TSubsetsGenerator_iterator'
p170
S'subGenerator_iterator'
p171
S'sub_generator_iterator'
p172
S'subset generator'
p173
I0
I0
I00
Ntp174
a(S'TVarList'
p175
S'required'
p176
g176
S'set of required attributes'
p177
I0
I0
I00
Ntp178
a(S'TVarList'
p179
S'forbidden'
p180
g180
S'set of forbidden attributes'
p181
I0
I0
I00
Ntp182
a(S'TVarListList'
p183
S'forbiddenSubSubsets'
p184
S'forbidden_sub_subsets'
p185
S'set of forbidden subsets (attributes that must not occur together)'
p186
I0
I0
I00
Ntp187
a(S'TVarList'
p188
S'varList'
p189
S'var_list'
p190
S'a set of attributes from which subsets are generated'
p191
I0
I0
I00
Ntp192
asg29
(dp193
sbsS'TPreprocessor_discretize'
p194
(i__main__
ClassDefinition
p195
(dp196
g4
I1
sg5
I0
sg6
g194
sg7
S'TPreprocessor'
p197
sg9
I00
sg10
(lp198
sg12
(lp199
(S'TVarList'
p200
S'attributes'
p201
g201
S'attributes to be discretized (all, if not defined or empty)'
p202
I0
I0
I00
Ntp203
a(S'bool'
p204
S'discretizeClass'
p205
S'discretize_class'
p206
S'also discretize the class attribute (default: false)'
p207
I0
I0
I01
Ntp208
a(S'TDiscretization'
p209
S'method'
p210
g210
S'discretization method'
p211
I0
I0
I00
Ntp212
asg29
(dp213
sbsS'TProgressCallback_Python'
p214
(i__main__
ClassDefinition
p215
(dp216
g4
I1
sg5
I0
sg6
g214
sg7
S'TProgressCallback'
p217
sg9
I00
sg10
(lp218
sg12
(lp219
sg29
(dp220
sbsS'TAssociationRulesSparseInducer'
p221
(i__main__
ClassDefinition
p222
(dp223
g4
I1
sg5
I0
sg6
g221
sg7
S'TOrange'
p224
sg9
I00
sg10
(lp225
sg12
(lp226
(S'int'
p227
S'maxItemSets'
p228
S'max_item_sets'
p229
S'maximal number of itemsets (increase if you want)'
p230
I0
I0
I01
Ntp231
a(S'float'
p232
S'confidence'
p233
g233
S'required confidence'
p234
I0
I0
I01
Ntp235
a(S'float'
p236
S'support'
p237
g237
S'required support'
p238
I0
I0
I01
Ntp239
a(S'bool'
p240
S'storeExamples'
p241
S'store_examples'
p242
S'stores examples corresponding to rules'
p243
I0
I0
I01
Ntp244
asg29
(dp245
sbsS'TFilter_sameExample'
p246
(i__main__
ClassDefinition
p247
(dp248
g4
I1
sg5
I0
sg6
g246
sg7
S'TFilter'
p249
sg9
I00
sg10
(lp250
sg12
(lp251
(S'TExample'
p252
S'example'
p253
g253
S'example with which examples are compared'
p254
I0
I0
I00
Ntp255
a(S'bool'
p256
S'negate'
p257
g257
S'if true, filter output should be negated.'
p258
I0
I0
I01
Ntp259
a(S'TDomain'
p260
S'domain'
p261
g261
S'domain to which the examples are converted (if needed)'
p262
I0
I0
I00
Ntp263
asg29
(dp264
sbsS'TRuleClassifierConstructor'
p265
(i__main__
ClassDefinition
p266
(dp267
g4
I1
sg5
I0
sg6
g265
sg7
S'TOrange'
p268
sg9
I01
sg10
(lp269
sg12
(lp270
sg29
(dp271
sbsS'TMakeRandomIndicesMultiple'
p272
(i__main__
ClassDefinition
p273
(dp274
g4
I1
sg5
I0
sg6
g272
sg7
S'TMakeRandomIndices'
p275
sg9
I00
sg10
(lp276
sg12
(lp277
(S'int'
p278
S'stratified'
p279
g279
S' requests stratified distributions'
p280
I0
I0
I01
S'MakeRandomIndices_Stratification'
p281
tp282
a(S'int'
p283
S'randseed'
p284
g284
S'a seed for random generator'
p285
I0
I0
I01
Ntp286
a(S'TRandomGenerator'
p287
S'randomGenerator'
p288
S'random_generator'
p289
S'a random generator'
p290
I0
I0
I00
Ntp291
asg29
(dp292
sbsS'TLearnerFD'
p293
(i__main__
ClassDefinition
p294
(dp295
g4
I1
sg5
I0
sg6
g293
sg7
S'TLearner'
p296
sg9
I00
sg10
(lp297
sg12
(lp298
(S'TDomain'
p299
S'domain'
p300
g300
S'domain'
p301
I0
I0
I00
Ntp302
ag47
asg29
(dp303
sbsS'TMapIntValue'
p304
(i__main__
ClassDefinition
p305
(dp306
g4
I1
sg5
I0
sg6
g304
sg7
S'TTransformValue'
p307
sg9
I00
sg10
(lp308
sg12
(lp309
(S'TIntList'
p310
S'mapping'
p311
g311
S'a lookup table'
p312
I0
I0
I00
Ntp313
a(S'TTransformValue'
p314
S'subTransform'
p315
S'sub_transform'
p316
S'transformation executed prior to this'
p317
I0
I0
I00
Ntp318
asg29
(dp319
sbsS'TEVDistGetter_Standard'
p320
(i__main__
ClassDefinition
p321
(dp322
g4
I1
sg5
I0
sg6
g320
sg7
S'TEVDistGetter'
p323
sg9
I00
sg10
(lp324
sg12
(lp325
(S'TEVDistList'
p326
S'dists'
p327
g327
S'EVC distribution (sorted by rule length, 0 = for rules without conditions)'
p328
I0
I0
I00
Ntp329
asg29
(dp330
sbsS'TFeatureByIM'
p331
(i__main__
ClassDefinition
p332
(dp333
g4
I1
sg5
I0
sg6
g331
sg7
S'TFeatureInducer'
p334
sg9
I00
sg10
(lp335
sg12
(lp336
(S'TIMConstructor'
p337
S'IMconstructor'
p338
g338
S'incompatibility matrix constructor'
p339
I0
I0
I00
Ntp340
a(S'TClustersFromIM'
p341
S'clustersFromIM'
p342
S'clusters_from_IM'
p343
S'clustering algorithm'
p344
I0
I0
I00
Ntp345
a(S'int'
p346
S'completion'
p347
g347
S' decides how to determine the class for points not covered by any cluster'
p348
I0
I0
I01
S'FeatureByIM_Completion'
p349
tp350
asg29
(dp351
S'Completion'
p352
(lp353
(S'NoCompletion'
p354
S'completion_no'
p355
tp356
a(S'CompletionByDefault'
p357
S'completion_default'
p358
tp359
a(S'CompletionByBayes'
p360
S'completion_bayes'
p361
tp362
assbsS'TRuleBeamRefiner'
p363
(i__main__
ClassDefinition
p364
(dp365
g4
I1
sg5
I0
sg6
g363
sg7
S'TOrange'
p366
sg9
I01
sg10
(lp367
sg12
(lp368
sg29
(dp369
sbsS'TSubsetsGenerator_iterator'
p370
(i__main__
ClassDefinition
p371
(dp372
g4
I1
sg5
I0
sg6
g370
sg7
S'TOrange'
p373
sg9
I01
sg10
(lp374
sg12
(lp375
g192
asg29
(dp376
sbsS'TEquiDistDiscretizer'
p377
(i__main__
ClassDefinition
p378
(dp379
g4
I1
sg5
I0
sg6
g377
sg7
S'TDiscretizer'
p380
sg9
I00
sg10
(lp381
sg12
(lp382
(S'int'
p383
S'numberOfIntervals'
p384
(g384
S'n'
p385
tp386
S' number of intervals'
p387
I0
I0
I01
Ntp388
a(S'float'
p389
S'firstCut'
p390
S'first_cut'
p391
S'the first cut-off point'
p392
I0
I0
I01
Ntp393
a(S'float'
p394
S'step'
p395
g395
S'step (width of interval)'
p396
I0
I0
I01
Ntp397
ag318
asg29
(dp398
sbsS'TFindNearest_BruteForce'
p399
(i__main__
ClassDefinition
p400
(dp401
g4
I1
sg5
I0
sg6
g399
sg7
S'TFindNearest'
p402
sg9
I00
sg10
(lp403
sg12
(lp404
(S'TExamplesDistance'
p405
S'distance'
p406
g406
S'metrics'
p407
I0
I0
I00
Ntp408
a(S'TExampleGenerator'
p409
S'examples'
p410
g410
S'a list of stored examples'
p411
I0
I0
I00
Ntp412
a(S'int'
p413
S'weightID'
p414
S'weight_ID'
p415
S'weight to use when counting examples'
p416
I0
I0
I01
Ntp417
a(S'int'
p418
S'distanceID'
p419
S'distance_ID'
p420
S'id of meta attribute where the distance should be stored (0 = no storing)'
p421
I0
I0
I01
Ntp422
a(S'bool'
p423
S'includeSame'
p424
S'include_same'
p425
S'tells whether to include examples that are same as the reference example'
p426
I0
I0
I01
Ntp427
asg29
(dp428
sbsS'TRuleBeamInitializer'
p429
(i__main__
ClassDefinition
p430
(dp431
g4
I1
sg5
I0
sg6
g429
sg7
S'TOrange'
p432
sg9
I01
sg10
(lp433
sg12
(lp434
sg29
(dp435
sbsS'TMeasureAttribute_relevance'
p436
(i__main__
ClassDefinition
p437
(dp438
g4
I1
sg5
I0
sg6
g436
sg7
S'TMeasureAttributeFromProbabilities'
p439
sg9
I00
sg10
(lp440
sg12
(lp441
(S'TProbabilityEstimatorConstructor'
p442
S'estimatorConstructor'
p443
S'estimator_constructor'
p444
S'probability estimator (none by default)'
p445
I0
I0
I00
Ntp446
a(S'TConditionalProbabilityEstimatorConstructor'
p447
S'conditionalEstimatorConstructor'
p448
S'conditional_estimator_constructor'
p449
S'conditional probability estimator (none by default)'
p450
I0
I0
I00
Ntp451
a(S'int'
p452
S'unknownsTreatment'
p453
S'unknowns_treatment'
p454
S' treatment of unknown values'
p455
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p456
tp457
a(S'int'
p458
S'needs'
p459
g459
S' describes what kind of data is needed for computation'
p460
I0
I0
I01
S'MeasureAttribute_Needs'
p461
tp462
a(S'bool'
p463
S'handlesDiscrete'
p464
S'handles_discrete'
p465
S'tells whether the measure can handle discrete attributes'
p466
I0
I0
I01
Ntp467
a(S'bool'
p468
S'handlesContinuous'
p469
S'handles_continuous'
p470
S'tells whether the measure can handle continuous attributes'
p471
I0
I0
I01
Ntp472
a(S'bool'
p473
S'computesThresholds'
p474
S'computes_thresholds'
p475
S'tells whether the measure can compute threshold functions/maxima for continuous attributes'
p476
I0
I0
I01
Ntp477
asg29
(dp478
sbsS'TBayesLearner'
p479
(i__main__
ClassDefinition
p480
(dp481
g4
I1
sg5
I0
sg6
g479
sg7
S'TLearner'
p482
sg9
I00
sg10
(lp483
sg12
(lp484
(S'TProbabilityEstimatorConstructor'
p485
S'estimatorConstructor'
p486
S'estimator_constructor'
p487
S'constructs a probability estimator for P(C)'
p488
I0
I0
I00
Ntp489
a(S'TConditionalProbabilityEstimatorConstructor'
p490
S'conditionalEstimatorConstructor'
p491
S'conditional_estimator_constructor'
p492
S'constructs a probability estimator for P(C|A) '
p493
I0
I0
I00
Ntp494
a(S'TConditionalProbabilityEstimatorConstructor'
p495
S'conditionalEstimatorConstructorContinuous'
p496
S'conditional_estimator_constructor_continuous'
p497
S'constructs a probability estimator for P(C|A) for continuous attributes'
p498
I0
I0
I00
Ntp499
a(S'bool'
p500
S'normalizePredictions'
p501
S'normalize_predictions'
p502
S'instructs learner to construct a classifier that normalizes probabilities'
p503
I0
I0
I01
Ntp504
a(S'bool'
p505
S'adjustThreshold'
p506
S'adjust_threshold'
p507
S'adjust probability thresholds (for binary classes only)'
p508
I0
I0
I01
Ntp509
ag47
asg29
(dp510
sbsS'TConditionalProbabilityEstimator'
p511
(i__main__
ClassDefinition
p512
(dp513
g4
I1
sg5
I0
sg6
g511
sg7
S'TOrange'
p514
sg9
I01
sg10
(lp515
sg12
(lp516
g63
ag68
asg29
(dp517
sbsS'TColumnAssessor_Laplace'
p518
(i__main__
ClassDefinition
p519
(dp520
g4
I1
sg5
I0
sg6
g518
sg7
S'TColumnAssessor'
p521
sg9
I00
sg10
(lp522
sg12
(lp523
sg29
(dp524
sbsS'TFilter_compatibleExample'
p525
(i__main__
ClassDefinition
p526
(dp527
g4
I1
sg5
I0
sg6
g525
sg7
S'TFilter'
p528
sg9
I00
sg10
(lp529
sg12
(lp530
(S'TExample'
p531
S'example'
p532
g532
S'example with which examples are compared'
p533
I0
I0
I00
Ntp534
ag259
ag263
asg29
(dp535
sbsS'TRemoveRedundant'
p536
(i__main__
ClassDefinition
p537
(dp538
g4
I1
sg5
I0
sg6
g536
sg7
S'TOrange'
p539
sg9
I01
sg10
(lp540
sg12
(lp541
(S'bool'
p542
S'keepValues'
p543
S'keep_values'
p544
S'keep an attribute if number values is only smaller, not one'
p545
I0
I0
I01
Ntp546
asg29
(dp547
sbsS'TExamplesDistanceConstructor_Hamming'
p548
(i__main__
ClassDefinition
p549
(dp550
g4
I1
sg5
I0
sg6
g548
sg7
S'TExamplesDistanceConstructor'
p551
sg9
I00
sg10
(lp552
sg12
(lp553
(S'bool'
p554
S'ignoreClass'
p555
S'ignore_class'
p556
S'if true (default), class value is ignored when computing distances'
p557
I0
I0
I01
Ntp558
a(S'bool'
p559
S'ignoreUnknowns'
p560
S'ignore_unknowns'
p561
S'if true (default: false) unknown values are ignored in computation'
p562
I0
I0
I01
Ntp563
ag106
asg29
(dp564
sbsS'TRuleClassifierConstructor_firstRule'
p565
(i__main__
ClassDefinition
p566
(dp567
g4
I1
sg5
I0
sg6
g565
sg7
S'TRuleClassifierConstructor'
p568
sg9
I00
sg10
(lp569
sg12
(lp570
sg29
(dp571
sbsS'TStopDistributionClustering_noProfit'
p572
(i__main__
ClassDefinition
p573
(dp574
g4
I1
sg5
I0
sg6
g572
sg7
S'TStopDistributionClustering'
p575
sg9
I00
sg10
(lp576
sg12
(lp577
(S'float'
p578
S'minProfitProportion'
p579
S'min_profit_proportion'
p580
S'minimal allowable profit proportion'
p581
I0
I0
I01
Ntp582
asg29
(dp583
sbsS'TColoredIG'
p584
(i__main__
ClassDefinition
p585
(dp586
g4
I1
sg5
I0
sg6
g584
sg7
S'TGeneralExampleClustering'
p587
sg9
I00
sg10
(lp588
sg12
(lp589
(S'TIG'
p590
S'ig'
p591
g591
S'incompatibility graph'
p592
I0
I0
I00
Ntp593
a(S'TIntList'
p594
S'colors'
p595
g595
S'colors (one element corresponding to each ig node)'
p596
I0
I0
I00
Ntp597
asg29
(dp598
sbsS'TMeasureAttribute'
p599
(i__main__
ClassDefinition
p600
(dp601
g4
I1
sg5
I0
sg6
g599
sg7
S'TOrange'
p602
sg9
I00
sg10
(lp603
sg12
(lp604
g462
ag467
ag472
ag477
asg29
(dp605
S'Needs'
p606
(lp607
(S'Contingency_Class'
p608
I0
tp609
a(S'DomainContingency'
p610
I1
tp611
a(S'Generator'
p612
I2
tp613
asS'UnknownsTreatment'
p614
(lp615
(S'IgnoreUnknowns'
p616
I0
tp617
a(S'ReduceByUnknowns'
p618
I1
tp619
a(S'UnknownsToCommon'
p620
I2
tp621
a(S'UnknownsAsValue'
p622
I3
tp623
assbsS'TRuleEvaluator'
p624
(i__main__
ClassDefinition
p625
(dp626
g4
I1
sg5
I0
sg6
g624
sg7
S'TOrange'
p627
sg9
I01
sg10
(lp628
sg12
(lp629
sg29
(dp630
sbsS'TStringVariable'
p631
(i__main__
ClassDefinition
p632
(dp633
g4
I1
sg5
I0
sg6
g631
sg7
S'TVariable'
p634
sg9
I00
sg10
(lp635
sg12
(lp636
(S'int'
p637
S'varType'
p638
S'var_type'
p639
S' variable type'
p640
I0
I0
I01
S'Variable_Type'
p641
tp642
a(S'bool'
p643
S'ordered'
p644
g644
S'variable values are ordered'
p645
I0
I0
I01
Ntp646
a(S'bool'
p647
S'distributed'
p648
g648
S'variable values are distributions'
p649
I0
I0
I01
Ntp650
a(S'int'
p651
S'defaultMetaId'
p652
S'default_meta_id'
p653
S'default (proposed, suggested...) meta id for this variable'
p654
I0
I0
I01
Ntp655
a(S'TRandomGenerator'
p656
S'randomGenerator'
p657
S'random_generator'
p658
S'random generator for random values (initialized when first needed)'
p659
I0
I0
I00
Ntp660
a(S'TVariable'
p661
S'sourceVariable'
p662
S'source_variable'
p663
S'The attribute that this attribute is computed from (when applicable)'
p664
I0
I0
I00
Ntp665
a(S'TClassifier'
p666
S'getValueFrom'
p667
S'get_value_from'
p668
S'Function to compute the value from values of other variables'
p669
I0
I0
I00
Ntp670
asg29
(dp671
sbsS'TGraphAsTree'
p672
(i__main__
ClassDefinition
p673
(dp674
g4
I1
sg5
I0
sg6
g672
sg7
S'TGraph'
p675
sg9
I00
sg10
(lp676
sg12
(lp677
(S'int'
p678
S'nVertices'
p679
S'n_vertices'
p680
S'the number of vertices'
p681
I01
I0
I01
Ntp682
a(S'int'
p683
S'nEdgeTypes'
p684
S'n_edge_types'
p685
S'the number of edge types'
p686
I01
I0
I01
Ntp687
a(S'bool'
p688
S'directed'
p689
g689
S'directed'
p690
I01
I0
I01
Ntp691
asg29
(dp692
sbsS'TTreeExampleSplitter_IgnoreUnknowns'
p693
(i__main__
ClassDefinition
p694
(dp695
g4
I1
sg5
I0
sg6
g693
sg7
S'TTreeExampleSplitter'
p696
sg9
I00
sg10
(lp697
sg12
(lp698
sg29
(dp699
sbsS'TProbabilityEstimator_FromDistribution'
p700
(i__main__
ClassDefinition
p701
(dp702
g4
I1
sg5
I0
sg6
g700
sg7
S'TProbabilityEstimator'
p703
sg9
I00
sg10
(lp704
sg12
(lp705
(S'TDistribution'
p706
S'probabilities'
p707
g707
S'probabilities'
p708
I0
I0
I00
Ntp709
a(S'bool'
p710
S'supportsDiscrete'
p711
S'supports_discrete'
p712
S'can estimate probabilities of discrete attributes'
p713
I01
I0
I01
Ntp714
a(S'bool'
p715
S'supportsContinuous'
p716
S'supports_continuous'
p717
S'can estimate probabilities of continuous attributes'
p718
I01
I0
I01
Ntp719
asg29
(dp720
sbsS'TExamplesDistance'
p721
(i__main__
ClassDefinition
p722
(dp723
g4
I1
sg5
I0
sg6
g721
sg7
S'TOrange'
p724
sg9
I01
sg10
(lp725
sg12
(lp726
sg29
(dp727
sbsS'TFileExampleGenerator'
p728
(i__main__
ClassDefinition
p729
(dp730
g4
I1
sg5
I0
sg6
g728
sg7
S'TExampleGenerator'
p731
sg9
I01
sg10
(lp732
sg12
(lp733
(S'string'
p734
S'filename'
p735
g735
S'filename'
p736
I0
I0
I01
Ntp737
a(S'int'
p738
S'startDataPos'
p739
S'start_data_pos'
p740
S'starting position of the data in file'
p741
I0
I0
I01
Ntp742
a(S'int'
p743
S'startDataLine'
p744
S'start_data_line'
p745
S'line in the file where the data starts'
p746
I0
I0
I01
Ntp747
ag121
ag125
asg29
(dp748
sbsS'TClassifierByLookupTable2'
p749
(i__main__
ClassDefinition
p750
(dp751
g4
I1
sg5
I0
sg6
g749
sg7
S'TClassifierByLookupTable'
p752
sg9
I00
sg10
(lp753
sg12
(lp754
(S'TVariable'
p755
S'variable1'
p756
g756
S'the first attribute used for classification'
p757
I01
I0
I00
Ntp758
a(S'TVariable'
p759
S'variable2'
p760
g760
S'the second attribute used for classification'
p761
I01
I0
I00
Ntp762
a(S'int'
p763
S'noOfValues1'
p764
S'no_of_values1'
p765
S'number of values of the first attribute'
p766
I01
I0
I01
Ntp767
a(S'int'
p768
S'noOfValues2'
p769
S'no_of_values2'
p770
S'number of values of the second attribute'
p771
I01
I0
I01
Ntp772
a(S'TEFMDataDescription'
p773
S'dataDescription'
p774
S'data_description'
p775
S'data description'
p776
I0
I0
I00
Ntp777
a(S'TValueList'
p778
S'lookupTable'
p779
S'lookup_table'
p780
S'a list of class values, one for each attribute value'
p781
I01
I0
I00
Ntp782
a(S'TDistributionList'
p783
S'distributions'
p784
g784
S'a list of class distributions, one for each attribute value'
p785
I01
I0
I00
Ntp786
a(S'TVariable'
p787
S'classVar'
p788
S'class_var'
p789
S'class variable'
p790
I0
I0
I00
Ntp791
a(S'bool'
p792
S'computesProbabilities'
p793
S'computes_probabilities'
p794
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p795
I0
I0
I01
Ntp796
asg29
(dp797
sbsS'TMeasureAttribute_gainRatio'
p798
(i__main__
ClassDefinition
p799
(dp800
g4
I1
sg5
I0
sg6
g798
sg7
S'TMeasureAttributeFromProbabilities'
p801
sg9
I00
sg10
(lp802
sg12
(lp803
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp804
sbsS'TContingencyClassAttr'
p805
(i__main__
ClassDefinition
p806
(dp807
g4
I1
sg5
I0
sg6
g805
sg7
S'TContingencyClass'
p808
sg9
I00
sg10
(lp809
sg12
(lp810
(S'TVariable'
p811
S'outerVariable'
p812
S'outer_variable'
p813
S'outer attribute'
p814
I0
I0
I00
Ntp815
a(S'TVariable'
p816
S'innerVariable'
p817
S'inner_variable'
p818
S'inner attribute'
p819
I0
I0
I00
Ntp820
a(S'int'
p821
S'varType'
p822
S'var_type'
p823
S' outer attribute type'
p824
I0
I0
I01
S'Variable_Type'
p825
tp826
a(S'TDistribution'
p827
S'outerDistribution'
p828
S'outer_distribution'
p829
S'distribution of values of outer attributes'
p830
I0
I0
I00
Ntp831
a(S'TDistribution'
p832
S'innerDistribution'
p833
S'inner_distribution'
p834
S'distribution of values of inner attributes'
p835
I0
I0
I00
Ntp836
a(S'TDistribution'
p837
S'innerDistributionUnknown'
p838
S'inner_distribution_unknown'
p839
S'distribution of inner variable for examples where the outer value was unknown'
p840
I0
I0
I00
Ntp841
asg29
(dp842
sbsS'TColumnAssessor_Measure'
p843
(i__main__
ClassDefinition
p844
(dp845
g4
I1
sg5
I0
sg6
g843
sg7
S'TColumnAssessor'
p846
sg9
I00
sg10
(lp847
sg12
(lp848
(S'TMeasureAttribute'
p849
S'measure'
p850
g850
S'attribute quality measure'
p851
I0
I0
I00
Ntp852
asg29
(dp853
sbsS'TLogRegClassifier'
p854
(i__main__
ClassDefinition
p855
(dp856
g4
I1
sg5
I0
sg6
g854
sg7
S'TClassifierFD'
p857
sg9
I00
sg10
(lp858
sg12
(lp859
(S'TDomain'
p860
S'continuizedDomain'
p861
S'continuized_domain'
p862
S'if absent, there is no continuous attributes in original domain'
p863
I0
I0
I00
Ntp864
a(S'TEFMDataDescription'
p865
S'dataDescription'
p866
S'data_description'
p867
S'Data needed for classification in presence of undefined values'
p868
I0
I0
I00
Ntp869
a(S'TAttributedFloatList'
p870
S'beta'
p871
g871
S'estimated beta coefficients for logistic regression'
p872
I0
I0
I00
Ntp873
a(S'TAttributedFloatList'
p874
S'beta_se'
p875
g875
S'estimated standard errors for beta coefficients'
p876
I0
I0
I00
Ntp877
a(S'TAttributedFloatList'
p878
S'wald_Z'
p879
g879
S'Wald Z statstic for beta coefficients'
p880
I0
I0
I00
Ntp881
a(S'TAttributedFloatList'
p882
S'P'
p883
g883
S'estimated significances for beta coefficients'
p884
I0
I0
I00
Ntp885
a(S'float'
p886
S'likelihood'
p887
g887
S"Likelihood: The likelihood function is the function which specifies the probability of the sample observed on the basis of a known model, as a function of the model's parameters. "
p888
I0
I0
I01
Ntp889
a(S'int'
p890
S'fit_status'
p891
g891
S"Tells how the model fitting ended - either regularly (LogRegFitter.OK), or it was interrupted due to one of beta coefficients escaping towards infinity (LogRegFitter.Infinity) or since the values didn't converge (LogRegFitter.Divergence)."
p892
I0
I0
I01
Ntp893
a(S'TImputer'
p894
S'imputer'
p895
g895
S'if present, it imputes unknown values'
p896
I0
I0
I00
Ntp897
a(S'TDomain'
p898
S'domain'
p899
g899
S'domain'
p900
I0
I0
I00
Ntp901
ag791
ag796
asg29
(dp902
sbsS'TClassifierRandomGenerator'
p903
(i__main__
ClassDefinition
p904
(dp905
g4
I1
sg5
I0
sg6
g903
sg7
S'TExampleGenerator'
p906
sg9
I00
sg10
(lp907
sg12
(lp908
(S'TClassifier'
p909
S'classify'
p910
g910
S'classifier'
p911
I0
I0
I00
Ntp912
a(S'int'
p913
S'noOfEx'
p914
S'no_of_ex'
p915
S'number of examples'
p916
I0
I0
I01
Ntp917
ag121
ag125
asg29
(dp918
sbsS'TPreprocessor_select'
p919
(i__main__
ClassDefinition
p920
(dp921
g4
I1
sg5
I0
sg6
g919
sg7
S'TPreprocessor'
p922
sg9
I00
sg10
(lp923
sg12
(lp924
(S'TVarList'
p925
S'attributes'
p926
g926
S'tells which attributes to select'
p927
I0
I0
I00
Ntp928
asg29
(dp929
sbsS'TBasicAttrStat'
p930
(i__main__
ClassDefinition
p931
(dp932
g4
I1
sg5
I0
sg6
g930
sg7
S'TOrange'
p933
sg9
I00
sg10
(lp934
sg12
(lp935
(S'float'
p936
S'sum'
p937
g937
S'sum of values'
p938
I0
I0
I01
Ntp939
a(S'float'
p940
S'sum2'
p941
g941
S'sum of squares of values'
p942
I0
I0
I01
Ntp943
a(S'float'
p944
g385
g385
S'number of examples for which the attribute is defined'
p945
I0
I0
I01
Ntp946
a(S'float'
p947
S'min'
p948
g948
S'the lowest value of the attribute'
p949
I0
I0
I01
Ntp950
a(S'float'
p951
S'max'
p952
g952
S'the highest value of the attribute'
p953
I0
I0
I01
Ntp954
a(S'float'
p955
S'avg'
p956
g956
S'the average value of the attribute'
p957
I0
I0
I01
Ntp958
a(S'float'
p959
S'dev'
p960
g960
S'the deviation of the value of the attribute'
p961
I0
I0
I01
Ntp962
a(S'TVariable'
p963
S'variable'
p964
g964
S'the attribute to which the data applies'
p965
I0
I0
I00
Ntp966
a(S'bool'
p967
S'holdRecomputation'
p968
S'hold_recomputation'
p969
S'temporarily disables recomputation of avg and dev while adding values'
p970
I0
I0
I01
Ntp971
asg29
(dp972
sbsS'TMeasureAttribute_gini'
p973
(i__main__
ClassDefinition
p974
(dp975
g4
I1
sg5
I0
sg6
g973
sg7
S'TMeasureAttributeFromProbabilities'
p976
sg9
I00
sg10
(lp977
sg12
(lp978
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp979
sbsS'TIMByRowsByRelief'
p980
(i__main__
ClassDefinition
p981
(dp982
g4
I1
sg5
I0
sg6
g980
sg7
S'TIMByRowsConstructor'
p983
sg9
I00
sg10
(lp984
sg12
(lp985
(S'float'
p986
S'k'
p987
g987
S'number of neighbours'
p988
I0
I0
I01
Ntp989
a(S'float'
p990
S'm'
p991
g991
S'number of reference examples'
p992
I0
I0
I01
Ntp993
a(S'float'
p994
S'kFromColumns'
p995
S'k_from_columns'
p996
S'if positive, number of neighbours is #columns*kFromColumns'
p997
I0
I0
I01
Ntp998
a(S'bool'
p999
S'ignoreSameExample'
p1000
S'ignore_same_example'
p1001
S'does not put reference example into M'
p1002
I0
I0
I01
Ntp1003
a(S'bool'
p1004
S'convertToBinary'
p1005
S'convert_to_binary'
p1006
S'convert to binary class (hit-miss)'
p1007
I0
I0
I01
Ntp1008
a(S'bool'
p1009
S'correctClassFirst'
p1010
S'correct_class_first'
p1011
S'puts the correct class proportion to the first place'
p1012
I0
I0
I01
Ntp1013
a(S'bool'
p1014
S'allExamples'
p1015
S'all_examples'
p1016
S'uses all examples for reference examples'
p1017
I0
I0
I01
Ntp1018
a(S'bool'
p1019
S'allSameNeighbours'
p1020
S'all_same_neighbours'
p1021
S'uses all the examples same to the reference as neighbours'
p1022
I0
I0
I01
Ntp1023
asg29
(dp1024
sbsS'TFindNearestConstructor'
p1025
(i__main__
ClassDefinition
p1026
(dp1027
g4
I1
sg5
I0
sg6
g1025
sg7
S'TOrange'
p1028
sg9
I01
sg10
(lp1029
sg12
(lp1030
(S'TExamplesDistanceConstructor'
p1031
S'distanceConstructor'
p1032
S'distance_constructor'
p1033
S'metrics'
p1034
I0
I0
I00
Ntp1035
a(S'bool'
p1036
S'includeSame'
p1037
S'include_same'
p1038
S'tells whether to include examples that are same as the reference example'
p1039
I0
I0
I01
Ntp1040
asg29
(dp1041
sbsS'TTableAverager'
p1042
(i__main__
ClassDefinition
p1043
(dp1044
g4
I1
sg5
I0
sg6
g1042
sg7
S'TOrange'
p1045
sg9
I00
sg10
(lp1046
sg12
(lp1047
sg29
(dp1048
sbsS'TIntervalDiscretizer'
p1049
(i__main__
ClassDefinition
p1050
(dp1051
g4
I1
sg5
I0
sg6
g1049
sg7
S'TDiscretizer'
p1052
sg9
I00
sg10
(lp1053
sg12
(lp1054
(S'TFloatList'
p1055
S'points'
p1056
g1056
S'cut-off points'
p1057
I0
I0
I00
Ntp1058
ag318
asg29
(dp1059
sbsS'TImputer_asValue'
p1060
(i__main__
ClassDefinition
p1061
(dp1062
g4
I1
sg5
I0
sg6
g1060
sg7
S'TImputer'
p1063
sg9
I00
sg10
(lp1064
sg12
(lp1065
(S'TDomain'
p1066
S'domain'
p1067
g1067
S'domain to which the values are converted'
p1068
I0
I0
I00
Ntp1069
a(S'TExample'
p1070
S'defaults'
p1071
g1071
S'values to impute instead of missing ones - for continuous attributes only!'
p1072
I0
I0
I00
Ntp1073
asg29
(dp1074
sbsS'TDomainContinuizer'
p1075
(i__main__
ClassDefinition
p1076
(dp1077
g4
I1
sg5
I0
sg6
g1075
sg7
S'TOrange'
p1078
sg9
I00
sg10
(lp1079
sg12
(lp1080
(S'bool'
p1081
S'zeroBased'
p1082
S'zero_based'
p1083
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p1084
I0
I0
I01
Ntp1085
a(S'int'
p1086
S'continuousTreatment'
p1087
S'continuous_treatment'
p1088
S' 0-leave as they are, 1-divide by span, 1-normalize'
p1089
I0
I0
I01
S'DomainContinuizer_ContinuousTreatment'
p1090
tp1091
a(S'int'
p1092
S'multinomialTreatment'
p1093
S'multinomial_treatment'
p1094
S' 0-lowest value, 1-most frequent (or baseValue), 2-n binary, 3-ignore, 4-ignore all discrete, 5-error, 6-convert as ordinal, 7-ordinal,normalized'
p1095
I0
I0
I01
S'DomainContinuizer_MultinomialTreatment'
p1096
tp1097
a(S'int'
p1098
S'classTreatment'
p1099
S'class_treatment'
p1100
S' 3-leave as is unless target is given, 5-error if not continuous nor binary nor target given, 6-convert as ordinal (unless target given)'
p1101
I0
I0
I01
S'DomainContinuizer_ClassTreatment'
p1102
tp1103
asg29
(dp1104
S'MultinomialTreatment'
p1105
(lp1106
(S'LowestIsBase'
p1107
I0
tp1108
a(S'FrequentIsBase'
p1109
I1
tp1110
a(S'NValues'
p1111
I2
tp1112
a(S'Ignore'
p1113
I3
tp1114
a(S'IgnoreAllDiscrete'
p1115
I4
tp1116
a(S'ReportError'
p1117
I5
tp1118
a(S'AsOrdinal'
p1119
I6
tp1120
a(S'AsNormalizedOrdinal'
p1121
I7
tp1122
asS'ClassTreatment'
p1123
(lp1124
(S'LeaveUnlessTarget'
p1125
S'3'
p1126
tp1127
a(S'ErrorIfCannotHandle'
p1128
S'5'
p1129
tp1130
a(S'AsOrdinal'
p1131
S'6'
p1132
tp1133
asS'ContinuousTreatment'
p1134
(lp1135
(S'Leave'
p1136
I0
tp1137
a(S'NormalizeBySpan'
p1138
I1
tp1139
a(S'NormalizeByVariance'
p1140
I2
tp1141
assbsS'TSimpleTreeClassifier'
p1142
(i__main__
ClassDefinition
p1143
(dp1144
g4
I1
sg5
I0
sg6
g1142
sg7
S'TClassifier'
p1145
sg9
I00
sg10
(lp1146
sg12
(lp1147
g791
ag796
asg29
(dp1148
sbsS'TExamplesDistanceConstructor_Euclidean'
p1149
(i__main__
ClassDefinition
p1150
(dp1151
g4
I1
sg5
I0
sg6
g1149
sg7
S'TExamplesDistanceConstructor_Normalized'
p1152
sg9
I00
sg10
(lp1153
sg12
(lp1154
g96
ag101
ag106
asg29
(dp1155
sbsS'TContingencyAttrAttr'
p1156
(i__main__
ClassDefinition
p1157
(dp1158
g4
I1
sg5
I0
sg6
g1156
sg7
S'TContingency'
p1159
sg9
I00
sg10
(lp1160
sg12
(lp1161
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp1162
sbsS'TRuleBeamRefiner_Selector'
p1163
(i__main__
ClassDefinition
p1164
(dp1165
g4
I1
sg5
I0
sg6
g1163
sg7
S'TRuleBeamRefiner'
p1166
sg9
I00
sg10
(lp1167
sg12
(lp1168
(S'TDiscretization'
p1169
S'discretization'
p1170
g1170
S'discretization for continuous attributes'
p1171
I0
I0
I00
Ntp1172
asg29
(dp1173
sbsS'TExamplesDistance_Relief'
p1174
(i__main__
ClassDefinition
p1175
(dp1176
g4
I1
sg5
I0
sg6
g1174
sg7
S'TExamplesDistance'
p1177
sg9
I00
sg10
(lp1178
sg12
(lp1179
(S'TDomainDistributions'
p1180
S'distributions'
p1181
g1181
S"distributions of attributes' values"
p1182
I0
I0
I00
Ntp1183
a(S'TAttributedFloatList'
p1184
S'averages'
p1185
g1185
S'average values of attributes'
p1186
I0
I0
I00
Ntp1187
a(S'TAttributedFloatList'
p1188
S'normalizations'
p1189
g1189
S"ranges of attributes' values"
p1190
I0
I0
I00
Ntp1191
a(S'TAttributedFloatList'
p1192
S'bothSpecial'
p1193
S'both_special'
p1194
S'distance if both values of both attributes are undefined'
p1195
I0
I0
I00
Ntp1196
asg29
(dp1197
sbsS'TExamplesDistance_Manhattan'
p1198
(i__main__
ClassDefinition
p1199
(dp1200
g4
I1
sg5
I0
sg6
g1198
sg7
S'TExamplesDistance_Normalized'
p1201
sg9
I00
sg10
(lp1202
sg12
(lp1203
g136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp1204
sbsS'TTreeDescender'
p1205
(i__main__
ClassDefinition
p1206
(dp1207
g4
I1
sg5
I0
sg6
g1205
sg7
S'TOrange'
p1208
sg9
I01
sg10
(lp1209
sg12
(lp1210
sg29
(dp1211
sbsS'TIMBlurer'
p1212
(i__main__
ClassDefinition
p1213
(dp1214
g4
I1
sg5
I0
sg6
g1212
sg7
S'TIMByRowsPreprocessor'
p1215
sg9
I00
sg10
(lp1216
sg12
(lp1217
(S'float'
p1218
S'weight'
p1219
g1219
S'weight of neighbours'
p1220
I0
I0
I01
Ntp1221
a(S'float'
p1222
S'origWeight'
p1223
S'orig_weight'
p1224
S'weight of original row'
p1225
I0
I0
I01
Ntp1226
a(S'TFloatList'
p1227
S'attrWeights'
p1228
S'attr_weights'
p1229
S'weights by individual (different) attributes'
p1230
I0
I0
I00
Ntp1231
a(S'bool'
p1232
S'adjustOrigWeight'
p1233
S'adjust_orig_weight'
p1234
S'uses 1-weight(s) for weight of original row'
p1235
I0
I0
I01
Ntp1236
a(S'bool'
p1237
S'onlyEmpty'
p1238
S'only_empty'
p1239
S'blurs only empty cells'
p1240
I0
I0
I01
Ntp1241
asg29
(dp1242
sbsS'TFeatureByMinComplexity'
p1243
(i__main__
ClassDefinition
p1244
(dp1245
g4
I1
sg5
I0
sg6
g1243
sg7
S'TFeatureInducer'
p1246
sg9
I00
sg10
(lp1247
sg12
(lp1248
(S'TColorIG'
p1249
S'colorIG'
p1250
S'color_IG'
p1251
S'graph coloring algorithm'
p1252
I0
I0
I00
Ntp1253
a(S'int'
p1254
S'completion'
p1255
g1255
S' decides how to determine the class for points not covered by any cluster'
p1256
I0
I0
I01
S'FeatureByMinComplexity_Completion'
p1257
tp1258
asg29
(dp1259
S'Completion'
p1260
(lp1261
(S'NoCompletion'
p1262
S'completion_no'
p1263
tp1264
a(S'CompletionByDefault'
p1265
S'completion_default'
p1266
tp1267
a(S'CompletionByBayes'
p1268
S'completion_bayes'
p1269
tp1270
assbsS'TPreprocessor_dropMissingClasses'
p1271
(i__main__
ClassDefinition
p1272
(dp1273
g4
I1
sg5
I0
sg6
g1271
sg7
S'TPreprocessor'
p1274
sg9
I00
sg10
(lp1275
sg12
(lp1276
sg29
(dp1277
sbsS'TChangeExampleGenerator'
p1278
(i__main__
ClassDefinition
p1279
(dp1280
g4
I1
sg5
I0
sg6
g1278
sg7
S'TAdapterGenerator'
p1281
sg9
I01
sg10
(lp1282
sg12
(lp1283
g121
ag125
asg29
(dp1284
sbsS'TkNNClassifier'
p1285
(i__main__
ClassDefinition
p1286
(dp1287
g4
I1
sg5
I0
sg6
g1285
sg7
S'TClassifierFD'
p1288
sg9
I00
sg10
(lp1289
sg12
(lp1290
(S'TFindNearest'
p1291
S'findNearest'
p1292
S'find_nearest'
p1293
S''
p1294
I0
I0
I00
Ntp1295
a(S'float'
p1296
g987
g987
S'number of neighbours (0 for sqrt of #examples)'
p1297
I0
I0
I01
Ntp1298
a(S'bool'
p1299
S'rankWeight'
p1300
S'rank_weight'
p1301
S'enable weighting by ranks'
p1302
I0
I0
I01
Ntp1303
a(S'int'
p1304
S'weightID'
p1305
S'weight_ID'
p1306
S'id of meta-attribute with weight'
p1307
I0
I0
I01
Ntp1308
a(S'int'
p1309
S'nExamples'
p1310
S'n_examples'
p1311
S'the number of learning examples '
p1312
I0
I0
I01
Ntp1313
ag901
ag791
ag796
asg29
(dp1314
sbsS'TMeasureAttribute_info'
p1315
(i__main__
ClassDefinition
p1316
(dp1317
g4
I1
sg5
I0
sg6
g1315
sg7
S'TMeasureAttributeFromProbabilities'
p1318
sg9
I00
sg10
(lp1319
sg12
(lp1320
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp1321
sbsS'TOrange'
p1322
(i__main__
ClassDefinition
p1323
(dp1324
g4
I1
sg5
I0
sg6
g1322
sg7
Nsg9
I00
sg10
(lp1325
sg12
(lp1326
sg29
(dp1327
sbsS'TRuleValidator'
p1328
(i__main__
ClassDefinition
p1329
(dp1330
g4
I1
sg5
I0
sg6
g1328
sg7
S'TOrange'
p1331
sg9
I01
sg10
(lp1332
sg12
(lp1333
sg29
(dp1334
sbsS'TIMByRowsBySorting'
p1335
(i__main__
ClassDefinition
p1336
(dp1337
g4
I1
sg5
I0
sg6
g1335
sg7
S'TIMByRowsConstructor'
p1338
sg9
I00
sg10
(lp1339
sg12
(lp1340
sg29
(dp1341
sbsS'TRuleBeamInitializer_Python'
p1342
(i__main__
ClassDefinition
p1343
(dp1344
g4
I1
sg5
I0
sg6
g1342
sg7
S'TRuleBeamInitializer'
p1345
sg9
I00
sg10
(lp1346
sg12
(lp1347
sg29
(dp1348
sbsS'TRuleCovererAndRemover_Python'
p1349
(i__main__
ClassDefinition
p1350
(dp1351
g4
I1
sg5
I0
sg6
g1349
sg7
S'TRuleCovererAndRemover'
p1352
sg9
I00
sg10
(lp1353
sg12
(lp1354
sg29
(dp1355
sbsS'TMeasureAttribute_gainRatioA'
p1356
(i__main__
ClassDefinition
p1357
(dp1358
g4
I1
sg5
I0
sg6
g1356
sg7
S'TMeasureAttribute_gainRatio'
p1359
sg9
I00
sg10
(lp1360
sg12
(lp1361
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp1362
sbsS'TCartesianClassifier'
p1363
(i__main__
ClassDefinition
p1364
(dp1365
g4
I1
sg5
I0
sg6
g1363
sg7
S'TClassifierFD'
p1366
sg9
I00
sg10
(lp1367
sg12
(lp1368
g901
ag791
ag796
asg29
(dp1369
sbsS'TLinearClassifier'
p1370
(i__main__
ClassDefinition
p1371
(dp1372
g4
I1
sg5
I0
sg6
g1370
sg7
S'TClassifierFD'
p1373
sg9
I00
sg10
(lp1374
sg12
(lp1375
(S'TFloatListList'
p1376
S'weights'
p1377
g1377
S'Computed feature weights'
p1378
I0
I0
I00
Ntp1379
a(S'TExampleTable'
p1380
S'examples'
p1381
g1381
S'Examples used to train the classifier'
p1382
I0
I0
I00
Ntp1383
a(S'float'
p1384
S'bias'
p1385
g1385
S'bias'
p1386
I01
I0
I01
Ntp1387
ag901
ag791
ag796
asg29
(dp1388
sbsS'TRemoveRedundantByInduction'
p1389
(i__main__
ClassDefinition
p1390
(dp1391
g4
I1
sg5
I0
sg6
g1389
sg7
S'TRemoveRedundant'
p1392
sg9
I00
sg10
(lp1393
sg12
(lp1394
(S'TFeatureInducer'
p1395
S'featureReducer'
p1396
S'feature_reducer'
p1397
S'feature construction algorithm'
p1398
I0
I0
I00
Ntp1399
a(S'TMeasureAttribute'
p1400
S'measure'
p1401
g1401
S'measure for initial ordering of attributes'
p1402
I0
I0
I00
Ntp1403
a(S'TDiscretization'
p1404
S'discretization'
p1405
g1405
S'discretization method'
p1406
I0
I0
I00
Ntp1407
ag546
asg29
(dp1408
sbsS'TFilter_conjunction'
p1409
(i__main__
ClassDefinition
p1410
(dp1411
g4
I1
sg5
I0
sg6
g1409
sg7
S'TFilter'
p1412
sg9
I00
sg10
(lp1413
sg12
(lp1414
(S'TFilterList'
p1415
S'filters'
p1416
g1416
S'a list of filters;'
p1417
I0
I0
I00
Ntp1418
ag259
ag263
asg29
(dp1419
sbsS'TGraph'
p1420
(i__main__
ClassDefinition
p1421
(dp1422
g4
I1
sg5
I0
sg6
g1420
sg7
S'TOrange'
p1423
sg9
I01
sg10
(lp1424
sg12
(lp1425
g682
ag687
ag691
asg29
(dp1426
sbsS'TStopIMClusteringByAssessor'
p1427
(i__main__
ClassDefinition
p1428
(dp1429
g4
I1
sg5
I0
sg6
g1427
sg7
S'TOrange'
p1430
sg9
I01
sg10
(lp1431
sg12
(lp1432
sg29
(dp1433
sbsS'TClustersFromDistributions'
p1434
(i__main__
ClassDefinition
p1435
(dp1436
g4
I1
sg5
I0
sg6
g1434
sg7
S'TOrange'
p1437
sg9
I01
sg10
(lp1438
sg12
(lp1439
sg29
(dp1440
sbsS'TVariable'
p1441
(i__main__
ClassDefinition
p1442
(dp1443
g4
I1
sg5
I0
sg6
g1441
sg7
S'TOrange'
p1444
sg9
I01
sg10
(lp1445
sg12
(lp1446
g642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp1447
S'Type'
p1448
(lp1449
(S'None'
p1450
S'(int)TValue::NONE'
p1451
tp1452
a(S'Discrete'
p1453
S'(int)TValue::INTVAR'
p1454
tp1455
a(S'Continuous'
p1456
S'(int)TValue::FLOATVAR'
p1457
tp1458
a(S'Other'
p1459
S'(int)(TValue::FLOATVAR+1)'
p1460
tp1461
a(S'String'
p1462
S'(int)STRINGVAR'
p1463
tp1464
asS'MakeStatus'
p1465
(lp1466
(S'OK'
p1467
I0
tp1468
a(S'MissingValues'
p1469
I1
tp1470
a(S'NoRecognizedValues'
p1471
I2
tp1472
a(S'Incompatible'
p1473
I3
tp1474
a(S'NotFound'
p1475
I4
tp1476
assbsS'TImputerConstructor_average'
p1477
(i__main__
ClassDefinition
p1478
(dp1479
g4
I1
sg5
I0
sg6
g1477
sg7
S'TImputerConstructor'
p1480
sg9
I00
sg10
(lp1481
sg12
(lp1482
(S'bool'
p1483
S'imputeClass'
p1484
S'impute_class'
p1485
S'tells whether to impute the class value (default: true)'
p1486
I0
I0
I01
Ntp1487
asg29
(dp1488
sbsS'TStopDistributionClustering'
p1489
(i__main__
ClassDefinition
p1490
(dp1491
g4
I1
sg5
I0
sg6
g1489
sg7
S'TOrange'
p1492
sg9
I01
sg10
(lp1493
sg12
(lp1494
sg29
(dp1495
sbsS'TExampleTable'
p1496
(i__main__
ClassDefinition
p1497
(dp1498
g4
I1
sg5
I0
sg6
g1496
sg7
S'TExampleGenerator'
p1499
sg9
I00
sg10
(lp1500
sg12
(lp1501
(S'TRandomGenerator'
p1502
S'randomGenerator'
p1503
S'random_generator'
p1504
S'random generator used by randomExample'
p1505
I0
I0
I00
Ntp1506
a(S'TExampleGenerator'
p1507
S'lock'
p1508
(g1508
S'owner'
p1509
tp1510
S' the real owner of examples'
p1511
I01
I0
I00
Ntp1512
a(S'bool'
p1513
S'ownsExamples'
p1514
(g1514
S'owns_instances'
p1515
tp1516
S' if false, examples in this table are references to examples in another table'
p1517
I01
I0
I01
Ntp1518
ag121
ag125
asg29
(dp1519
sbsS'TMakeRandomIndicesN'
p1520
(i__main__
ClassDefinition
p1521
(dp1522
g4
I1
sg5
I0
sg6
g1520
sg7
S'TMakeRandomIndices'
p1523
sg9
I00
sg10
(lp1524
sg12
(lp1525
(S'TFloatList'
p1526
g91
g91
S'probabilities of indices (last is 1-sum(p))'
p1527
I0
I0
I00
Ntp1528
ag282
ag286
ag291
asg29
(dp1529
sbsS'TRemoveRedundantByQuality'
p1530
(i__main__
ClassDefinition
p1531
(dp1532
g4
I1
sg5
I0
sg6
g1530
sg7
S'TRemoveRedundant'
p1533
sg9
I00
sg10
(lp1534
sg12
(lp1535
(S'bool'
p1536
S'remeasure'
p1537
g1537
S'reapply the measure after removal'
p1538
I0
I0
I01
Ntp1539
a(S'float'
p1540
S'minQuality'
p1541
S'min_quality'
p1542
S'minimal acceptable quality'
p1543
I0
I0
I01
Ntp1544
a(S'int'
p1545
S'removeBut'
p1546
S'remove_but'
p1547
S'the desired number of attributes'
p1548
I0
I0
I01
Ntp1549
a(S'TMeasureAttribute'
p1550
S'measure'
p1551
g1551
S'attribute quality measure'
p1552
I0
I0
I00
Ntp1553
ag546
asg29
(dp1554
sbsS'TGraphAsList'
p1555
(i__main__
ClassDefinition
p1556
(dp1557
g4
I1
sg5
I0
sg6
g1555
sg7
S'TGraph'
p1558
sg9
I00
sg10
(lp1559
sg12
(lp1560
g682
ag687
ag691
asg29
(dp1561
sbsS'TDistanceMapConstructor'
p1562
(i__main__
ClassDefinition
p1563
(dp1564
g4
I1
sg5
I0
sg6
g1562
sg7
S'TOrange'
p1565
sg9
I00
sg10
(lp1566
sg12
(lp1567
(S'TSymMatrix'
p1568
S'distanceMatrix'
p1569
S'distance_matrix'
p1570
S'distance matrix'
p1571
I0
I0
I00
Ntp1572
a(S'TIntList'
p1573
S'order'
p1574
g1574
S'order of elements'
p1575
I0
I0
I00
Ntp1576
asg29
(dp1577
sbsS'TTransformValue'
p1578
(i__main__
ClassDefinition
p1579
(dp1580
g4
I1
sg5
I0
sg6
g1578
sg7
S'TOrange'
p1581
sg9
I01
sg10
(lp1582
sg12
(lp1583
g318
asg29
(dp1584
sbsS'TComputeDomainContingency_DomainTransformation'
p1585
(i__main__
ClassDefinition
p1586
(dp1587
g4
I1
sg5
I0
sg6
g1585
sg7
S'TComputeDomainContingency'
p1588
sg9
I00
sg10
(lp1589
sg12
(lp1590
(S'TDomainTransformerConstructor'
p1591
S'domainTransformerConstructor'
p1592
S'domain_transformer_constructor'
p1593
S'constructs a domain in which each attribute corresponds one of originals'
p1594
I0
I0
I00
Ntp1595
a(S'bool'
p1596
S'resultInOriginalDomain'
p1597
S'result_in_original_domain'
p1598
S'tells whether the resulting DomainContingency should consist of original attributes'
p1599
I0
I0
I01
Ntp1600
ag28
asg29
(dp1601
sbsS'TTreePruner'
p1602
(i__main__
ClassDefinition
p1603
(dp1604
g4
I1
sg5
I0
sg6
g1602
sg7
S'TOrange'
p1605
sg9
I01
sg10
(lp1606
sg12
(lp1607
sg29
(dp1608
sbsS'TImputer_Python'
p1609
(i__main__
ClassDefinition
p1610
(dp1611
g4
I1
sg5
I0
sg6
g1609
sg7
S'TImputer'
p1612
sg9
I00
sg10
(lp1613
sg12
(lp1614
sg29
(dp1615
sbsS'TPreprocessor_addGaussianClassNoise'
p1616
(i__main__
ClassDefinition
p1617
(dp1618
g4
I1
sg5
I0
sg6
g1616
sg7
S'TPreprocessor'
p1619
sg9
I00
sg10
(lp1620
sg12
(lp1621
(S'float'
p1622
S'deviation'
p1623
g1623
S'class deviation'
p1624
I0
I0
I01
Ntp1625
a(S'TRandomGenerator'
p1626
S'randomGenerator'
p1627
S'random_generator'
p1628
S'random number generator'
p1629
I0
I0
I00
Ntp1630
asg29
(dp1631
sbsS'TRuleEvaluator_Python'
p1632
(i__main__
ClassDefinition
p1633
(dp1634
g4
I1
sg5
I0
sg6
g1632
sg7
S'TRuleEvaluator'
p1635
sg9
I00
sg10
(lp1636
sg12
(lp1637
sg29
(dp1638
sbsS'TIGBySorting'
p1639
(i__main__
ClassDefinition
p1640
(dp1641
g4
I1
sg5
I0
sg6
g1639
sg7
S'TIGConstructor'
p1642
sg9
I00
sg10
(lp1643
sg12
(lp1644
sg29
(dp1645
sbsS'TConditionalProbabilityEstimator_ByRows'
p1646
(i__main__
ClassDefinition
p1647
(dp1648
g4
I1
sg5
I0
sg6
g1646
sg7
S'TConditionalProbabilityEstimator'
p1649
sg9
I00
sg10
(lp1650
sg12
(lp1651
(S'TProbabilityEstimatorList'
p1652
S'estimatorList'
p1653
S'estimator_list'
p1654
S'A list of probability estimators'
p1655
I0
I0
I00
Ntp1656
ag63
ag68
asg29
(dp1657
sbsS'TProgressCallback'
p1658
(i__main__
ClassDefinition
p1659
(dp1660
g4
I1
sg5
I0
sg6
g1658
sg7
S'TOrange'
p1661
sg9
I01
sg10
(lp1662
sg12
(lp1663
sg29
(dp1664
sbsS'THierarchicalClustering'
p1665
(i__main__
ClassDefinition
p1666
(dp1667
g4
I1
sg5
I0
sg6
g1665
sg7
S'TOrange'
p1668
sg9
I00
sg10
(lp1669
sg12
(lp1670
(S'int'
p1671
S'linkage'
p1672
g1672
S' linkage'
p1673
I0
I0
I01
S'HierarchicalClustering_Linkage'
p1674
tp1675
a(S'bool'
p1676
S'overwriteMatrix'
p1677
S'overwrite_matrix'
p1678
S'if true (default is false) it will use (and destroy) the distance matrix given as argument'
p1679
I0
I0
I01
Ntp1680
a(S'TProgressCallback'
p1681
S'progressCallback'
p1682
S'progress_callback'
p1683
S'progress callback function'
p1684
I0
I0
I00
Ntp1685
asg29
(dp1686
S'Linkage'
p1687
(lp1688
(S'Single'
p1689
I0
tp1690
a(S'Average'
p1691
I1
tp1692
a(S'Complete'
p1693
I2
tp1694
a(S'Ward'
p1695
I3
tp1696
assbsS'TTreeSplitConstructor_Python'
p1697
(i__main__
ClassDefinition
p1698
(dp1699
g4
I1
sg5
I0
sg6
g1697
sg7
S'TTreeSplitConstructor'
p1700
sg9
I00
sg10
(lp1701
sg12
(lp1702
(S'float'
p1703
S'minSubset'
p1704
S'min_subset'
p1705
S'minimal number of examples in a subset'
p1706
I0
I0
I01
Ntp1707
asg29
(dp1708
sbsS'TEarthLearner'
p1709
(i__main__
ClassDefinition
p1710
(dp1711
g4
I1
sg5
I0
sg6
g1709
sg7
S'TLearner'
p1712
sg9
I00
sg10
(lp1713
sg12
(lp1714
(S'int'
p1715
S'max_terms'
p1716
g1716
S'Maximum number of terms.'
p1717
I0
I0
I01
Ntp1718
a(S'int'
p1719
S'max_degree'
p1720
g1720
S'Maximum degree of terms.'
p1721
I0
I0
I01
Ntp1722
a(S'float'
p1723
S'penalty'
p1724
g1724
S'Penalty.'
p1725
I0
I0
I01
Ntp1726
a(S'float'
p1727
S'threshold'
p1728
g1728
S'Forward step threshold.'
p1729
I0
I0
I01
Ntp1730
a(S'bool'
p1731
S'prune'
p1732
g1732
S'Prune terms (do backward pass).'
p1733
I0
I0
I01
Ntp1734
a(S'float'
p1735
S'fast_beta'
p1736
g1736
S'Fast beta (aging coefficient).'
p1737
I0
I0
I01
Ntp1738
a(S'float'
p1739
S'trace'
p1740
g1740
S'Execution trace (for debugging only).'
p1741
I0
I0
I01
Ntp1742
a(S'int'
p1743
S'min_span'
p1744
g1744
S'Min. span (training instances) between knots.'
p1745
I0
I0
I01
Ntp1746
a(S'int'
p1747
S'fast_k'
p1748
g1748
S'Fast K.'
p1749
I0
I0
I01
Ntp1750
a(S'bool'
p1751
S'new_var_penalty'
p1752
g1752
S'Penalty for adding a new variable.'
p1753
I0
I0
I01
Ntp1754
a(S'bool'
p1755
S'use_beta_cache'
p1756
g1756
S'Use caching for betas.'
p1757
I0
I0
I01
Ntp1758
ag47
asg29
(dp1759
sbsS'TKernelFunc_Python'
p1760
(i__main__
ClassDefinition
p1761
(dp1762
g4
I1
sg5
I0
sg6
g1760
sg7
S'TKernelFunc'
p1763
sg9
I00
sg10
(lp1764
sg12
(lp1765
sg29
(dp1766
sbsS'TAdapterGenerator'
p1767
(i__main__
ClassDefinition
p1768
(dp1769
g4
I1
sg5
I0
sg6
g1767
sg7
S'TExampleGenerator'
p1770
sg9
I00
sg10
(lp1771
sg12
(lp1772
g121
ag125
asg29
(dp1773
sbsS'TIMFromExamples'
p1774
(i__main__
ClassDefinition
p1775
(dp1776
g4
I1
sg5
I0
sg6
g1774
sg7
S'TOrange'
p1777
sg9
I01
sg10
(lp1778
sg12
(lp1779
sg29
(dp1780
sbsS'TExamplesDistance_Lp'
p1781
(i__main__
ClassDefinition
p1782
(dp1783
g4
I1
sg5
I0
sg6
g1781
sg7
S'TExamplesDistance_Normalized'
p1784
sg9
I00
sg10
(lp1785
sg12
(lp1786
(S'float'
p1787
g91
g91
g91
I01
I0
I01
Ntp1788
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp1789
sbsS'TMakeRandomIndicesCV'
p1790
(i__main__
ClassDefinition
p1791
(dp1792
g4
I1
sg5
I0
sg6
g1790
sg7
S'TMakeRandomIndices'
p1793
sg9
I00
sg10
(lp1794
sg12
(lp1795
(S'int'
p1796
S'folds'
p1797
g1797
S'number of folds'
p1798
I0
I0
I01
Ntp1799
ag282
ag286
ag291
asg29
(dp1800
sbsS'TPreprocessor_removeDuplicates'
p1801
(i__main__
ClassDefinition
p1802
(dp1803
g4
I1
sg5
I0
sg6
g1801
sg7
S'TPreprocessor'
p1804
sg9
I00
sg10
(lp1805
sg12
(lp1806
sg29
(dp1807
sbsS'TTreeExampleSplitter_UnknownsAsBranchSizes'
p1808
(i__main__
ClassDefinition
p1809
(dp1810
g4
I1
sg5
I0
sg6
g1808
sg7
S'TTreeExampleSplitter'
p1811
sg9
I00
sg10
(lp1812
sg12
(lp1813
sg29
(dp1814
sbsS'TExamplesDistanceConstructor_Normalized'
p1815
(i__main__
ClassDefinition
p1816
(dp1817
g4
I1
sg5
I0
sg6
g1815
sg7
S'TExamplesDistanceConstructor'
p1818
sg9
I01
sg10
(lp1819
sg12
(lp1820
g96
ag101
ag106
asg29
(dp1821
sbsS'TCostWrapperLearner'
p1822
(i__main__
ClassDefinition
p1823
(dp1824
g4
I1
sg5
I0
sg6
g1822
sg7
S'TLearner'
p1825
sg9
I00
sg10
(lp1826
sg12
(lp1827
(S'TLearner'
p1828
S'basicLearner'
p1829
S'basic_learner'
p1830
S'basic learner'
p1831
I0
I0
I00
Ntp1832
a(S'TCostMatrix'
p1833
S'costMatrix'
p1834
S'cost_matrix'
p1835
S'cost matrix'
p1836
I0
I0
I00
Ntp1837
ag47
asg29
(dp1838
sbsS'TPearsonCorrelation'
p1839
(i__main__
ClassDefinition
p1840
(dp1841
g4
I1
sg5
I0
sg6
g1839
sg7
S'TOrange'
p1842
sg9
I00
sg10
(lp1843
sg12
(lp1844
(S'float'
p1845
S'r'
p1846
g1846
S'correlation coefficient'
p1847
I0
I0
I01
Ntp1848
a(S'float'
p1849
S't'
p1850
g1850
S't-statics significance'
p1851
I0
I0
I01
Ntp1852
a(S'int'
p1853
S'df'
p1854
g1854
S'degrees of freedom'
p1855
I0
I0
I01
Ntp1856
a(S'float'
p1857
g91
g91
S'significance'
p1858
I0
I0
I01
Ntp1859
asg29
(dp1860
sbsS'TDistributionAssessor_Laplace'
p1861
(i__main__
ClassDefinition
p1862
(dp1863
g4
I1
sg5
I0
sg6
g1861
sg7
S'TDistributionAssessor'
p1864
sg9
I00
sg10
(lp1865
sg12
(lp1866
sg29
(dp1867
sbsS'TColumnAssessor_Relief'
p1868
(i__main__
ClassDefinition
p1869
(dp1870
g4
I1
sg5
I0
sg6
g1868
sg7
S'TColumnAssessor'
p1871
sg9
I00
sg10
(lp1872
sg12
(lp1873
sg29
(dp1874
sbsS'TClassifierByLookupTable'
p1875
(i__main__
ClassDefinition
p1876
(dp1877
g4
I1
sg5
I0
sg6
g1875
sg7
S'TClassifier'
p1878
sg9
I01
sg10
(lp1879
sg12
(lp1880
g782
ag786
ag791
ag796
asg29
(dp1881
sbsS'TRuleBeamFinder'
p1882
(i__main__
ClassDefinition
p1883
(dp1884
g4
I1
sg5
I0
sg6
g1882
sg7
S'TRuleFinder'
p1885
sg9
I00
sg10
(lp1886
sg12
(lp1887
(S'TRuleBeamInitializer'
p1888
S'initializer'
p1889
g1889
g1294
I0
I0
I00
Ntp1890
a(S'TRuleBeamRefiner'
p1891
S'refiner'
p1892
g1892
g1294
I0
I0
I00
Ntp1893
a(S'TRuleBeamCandidateSelector'
p1894
S'candidateSelector'
p1895
S'candidate_selector'
p1896
g1294
I0
I0
I00
Ntp1897
a(S'TRuleBeamFilter'
p1898
S'ruleFilter'
p1899
S'rule_filter'
p1900
g1294
I0
I0
I00
Ntp1901
a(S'TRuleValidator'
p1902
S'ruleStoppingValidator'
p1903
S'rule_stopping_validator'
p1904
g1294
I0
I0
I00
Ntp1905
a(S'TRuleValidator'
p1906
S'validator'
p1907
g1907
g1294
I0
I0
I00
Ntp1908
a(S'TRuleEvaluator'
p1909
S'evaluator'
p1910
g1910
g1294
I0
I0
I00
Ntp1911
asg29
(dp1912
sbsS'TC45Classifier'
p1913
(i__main__
ClassDefinition
p1914
(dp1915
g4
I1
sg5
I0
sg6
g1913
sg7
S'TClassifierFD'
p1916
sg9
I00
sg10
(lp1917
sg12
(lp1918
(S'TC45TreeNode'
p1919
S'tree'
p1920
g1920
S'tree'
p1921
I0
I0
I00
Ntp1922
ag901
ag791
ag796
asg29
(dp1923
sbsS'TFilter_values'
p1924
(i__main__
ClassDefinition
p1925
(dp1926
g4
I1
sg5
I0
sg6
g1924
sg7
S'TFilter'
p1927
sg9
I00
sg10
(lp1928
sg12
(lp1929
(S'TValueFilterList'
p1930
S'conditions'
p1931
g1931
S'a list of filters'
p1932
I0
I0
I00
Ntp1933
a(S'bool'
p1934
S'conjunction'
p1935
g1935
S'if true, filter computes conjunction, otherwise disjunction'
p1936
I0
I0
I01
Ntp1937
ag259
ag263
asg29
(dp1938
S'Operator'
p1939
(lp1940
(S'None'
p1941
I0
tp1942
a(S'Equal'
p1943
I1
tp1944
a(S'NotEqual'
p1945
I2
tp1946
a(S'Less'
p1947
I3
tp1948
a(S'LessEqual'
p1949
I4
tp1950
a(S'Greater'
p1951
I5
tp1952
a(S'GreaterEqual'
p1953
I6
tp1954
a(S'Between'
p1955
I7
tp1956
a(S'Outside'
p1957
I8
tp1958
a(S'Contains'
p1959
I9
tp1960
a(S'NotContains'
p1961
I10
tp1962
a(S'BeginsWith'
p1963
I11
tp1964
a(S'EndsWith'
p1965
I12
tp1966
a(S'Listed'
p1967
I13
tp1968
assbsS'TRuleClassifier'
p1969
(i__main__
ClassDefinition
p1970
(dp1971
g4
I1
sg5
I0
sg6
g1969
sg7
S'TClassifier'
p1972
sg9
I01
sg10
(lp1973
sg12
(lp1974
(S'TRuleList'
p1975
S'rules'
p1976
g1976
g1294
I0
I0
I00
Ntp1977
a(S'TExampleTable'
p1978
S'examples'
p1979
g1979
g1294
I0
I0
I00
Ntp1980
a(S'int'
p1981
S'weightID'
p1982
S'weight_ID'
p1983
g1294
I0
I0
I01
Ntp1984
ag791
ag796
asg29
(dp1985
sbsS'TSymMatrix'
p1986
(i__main__
ClassDefinition
p1987
(dp1988
g4
I1
sg5
I0
sg6
g1986
sg7
S'TOrange'
p1989
sg9
I00
sg10
(lp1990
sg12
(lp1991
(S'int'
p1992
S'dim'
p1993
g1993
S'matrix dimension'
p1994
I01
I0
I01
Ntp1995
a(S'int'
p1996
S'matrixType'
p1997
S'matrix_type'
p1998
S' 0 lower, 1 upper, 2 symmetric, 3 lower_filled, 4 upper_filled'
p1999
I0
I0
I01
S'SymMatrix_Shape'
p2000
tp2001
asg29
(dp2002
S'Shape'
p2003
(lp2004
(S'Lower'
p2005
I0
tp2006
a(S'Upper'
p2007
I1
tp2008
a(S'Symmetric'
p2009
I2
tp2010
a(S'LowerFilled'
p2011
I3
tp2012
a(S'UpperFilled'
p2013
I4
tp2014
assbsS'TSVMLearner'
p2015
(i__main__
ClassDefinition
p2016
(dp2017
g4
I1
sg5
I0
sg6
g2015
sg7
S'TLearner'
p2018
sg9
I00
sg10
(lp2019
sg12
(lp2020
(S'int'
p2021
S'svm_type'
p2022
g2022
S'  SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p2023
I0
I0
I01
S'SVMLearner_SVMType'
p2024
tp2025
a(S'int'
p2026
S'kernel_type'
p2027
g2027
S'  kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p2028
I0
I0
I01
S'SVMLearner_Kernel'
p2029
tp2030
a(S'float'
p2031
S'degree'
p2032
g2032
S'polynomial kernel degree'
p2033
I0
I0
I01
Ntp2034
a(S'float'
p2035
S'gamma'
p2036
g2036
S'poly/rbf/sigm parameter'
p2037
I0
I0
I01
Ntp2038
a(S'float'
p2039
S'coef0'
p2040
g2040
S'poly/sigm parameter'
p2041
I0
I0
I01
Ntp2042
a(S'float'
p2043
S'cache_size'
p2044
g2044
S'cache size in MB'
p2045
I0
I0
I01
Ntp2046
a(S'float'
p2047
S'eps'
p2048
g2048
S'stopping criteria'
p2049
I0
I0
I01
Ntp2050
a(S'float'
p2051
S'C'
p2052
g2052
S'for C_SVC and C_SVR'
p2053
I0
I0
I01
Ntp2054
a(S'float'
p2055
S'nu'
p2056
g2056
S'for NU_SVC and ONE_CLASS'
p2057
I0
I0
I01
Ntp2058
a(S'float'
p2059
g91
g91
S'for C_SVR'
p2060
I0
I0
I01
Ntp2061
a(S'int'
p2062
S'shrinking'
p2063
g2063
S'shrinking'
p2064
I0
I0
I01
Ntp2065
a(S'int'
p2066
S'probability'
p2067
g2067
S'probability'
p2068
I0
I0
I01
Ntp2069
a(S'bool'
p2070
S'verbose'
p2071
g2071
S'verbose'
p2072
I0
I0
I01
Ntp2073
a(S'TKernelFunc'
p2074
S'kernelFunc'
p2075
S'kernel_func'
p2076
S'custom kernel function'
p2077
I0
I0
I00
Ntp2078
ag47
asg29
(dp2079
S'Kernel'
p2080
(lp2081
(S'Linear'
p2082
S'LINEAR'
p2083
tp2084
a(S'Polynomial'
p2085
S'POLY'
p2086
tp2087
a(S'RBF'
p2088
S'RBF'
p2089
tp2090
a(S'Sigmoid'
p2091
S'SIGMOID'
p2092
tp2093
a(S'Custom'
p2094
S'PRECOMPUTED'
p2095
tp2096
asS'LIBSVM_VERSION'
p2097
(lp2098
(S'VERSION'
p2099
S'LIBSVM_VERSION'
p2100
tp2101
asS'SVMType'
p2102
(lp2103
(S'C_SVC'
p2104
S'C_SVC'
p2105
tp2106
a(S'Nu_SVC'
p2107
S'NU_SVC'
p2108
tp2109
a(S'OneClass'
p2110
S'ONE_CLASS'
p2111
tp2112
a(S'Epsilon_SVR'
p2113
S'EPSILON_SVR'
p2114
tp2115
a(S'Nu_SVR'
p2116
S'NU_SVR'
p2117
tp2118
assbsS'TImputerConstructor_defaults'
p2119
(i__main__
ClassDefinition
p2120
(dp2121
g4
I1
sg5
I0
sg6
g2119
sg7
S'TImputerConstructor'
p2122
sg9
I00
sg10
(lp2123
sg12
(lp2124
(S'TExample'
p2125
S'defaults'
p2126
g2126
S'default values to be imputed instead missing ones'
p2127
I0
I0
I00
Ntp2128
ag1487
asg29
(dp2129
sbsS'TConditionalProbabilityEstimatorConstructor'
p2130
(i__main__
ClassDefinition
p2131
(dp2132
g4
I1
sg5
I0
sg6
g2130
sg7
S'TOrange'
p2133
sg9
I01
sg10
(lp2134
sg12
(lp2135
sg29
(dp2136
sbsS'TPreprocessor_takeMissingClasses'
p2137
(i__main__
ClassDefinition
p2138
(dp2139
g4
I1
sg5
I0
sg6
g2137
sg7
S'TPreprocessor'
p2140
sg9
I00
sg10
(lp2141
sg12
(lp2142
sg29
(dp2143
sbsS'TRuleValidator_LRS'
p2144
(i__main__
ClassDefinition
p2145
(dp2146
g4
I1
sg5
I0
sg6
g2144
sg7
S'TRuleValidator'
p2147
sg9
I00
sg10
(lp2148
sg12
(lp2149
(S'float'
p2150
S'alpha'
p2151
g2151
g1294
I0
I0
I01
Ntp2152
a(S'float'
p2153
S'min_coverage'
p2154
g2154
g1294
I0
I0
I01
Ntp2155
a(S'int'
p2156
S'max_rule_complexity'
p2157
g2157
g1294
I0
I0
I01
Ntp2158
a(S'float'
p2159
S'min_quality'
p2160
g2160
g1294
I0
I0
I01
Ntp2161
asg29
(dp2162
sbsS'TLogRegFitter_Python'
p2163
(i__main__
ClassDefinition
p2164
(dp2165
g4
I1
sg5
I0
sg6
g2163
sg7
S'TLogRegFitter'
p2166
sg9
I00
sg10
(lp2167
sg12
(lp2168
sg29
(dp2169
sbsS'TContDistribution'
p2170
(i__main__
ClassDefinition
p2171
(dp2172
g4
I1
sg5
I0
sg6
g2170
sg7
S'TDistribution'
p2173
sg9
I00
sg10
(lp2174
sg12
(lp2175
(S'TFloatList'
p2176
S'variances'
p2177
g2177
S'variances'
p2178
I0
I0
I00
Ntp2179
a(S'float'
p2180
S'sum'
p2181
g2181
S'weighted sum of elements (i.e. N*average)'
p2182
I01
I0
I01
Ntp2183
a(S'float'
p2184
S'sum2'
p2185
g2185
S'weighted sum of squares of elements'
p2186
I01
I0
I01
Ntp2187
a(S'TVariable'
p2188
S'variable'
p2189
g2189
S'attribute descriptor (optional)'
p2190
I0
I0
I00
Ntp2191
a(S'float'
p2192
S'unknowns'
p2193
g2193
S'number of unknown values'
p2194
I0
I0
I01
Ntp2195
a(S'float'
p2196
S'abs'
p2197
g2197
S'sum of frequencies (not including unknown values!)'
p2198
I0
I0
I01
Ntp2199
a(S'float'
p2200
S'cases'
p2201
g2201
S"number of cases; as abs, but doesn't change at *= and normalize()"
p2202
I0
I0
I01
Ntp2203
a(S'bool'
p2204
S'normalized'
p2205
g2205
S'distribution is normalized'
p2206
I0
I0
I01
Ntp2207
a(S'bool'
p2208
S'supportsDiscrete'
p2209
S'supports_discrete'
p2210
S'distribution supports discrete interface'
p2211
I01
I0
I01
Ntp2212
a(S'bool'
p2213
S'supportsContinuous'
p2214
S'supports_continuous'
p2215
S'distribution supports continuous interface'
p2216
I01
I0
I01
Ntp2217
a(S'TRandomGenerator'
p2218
S'randomGenerator'
p2219
S'random_generator'
p2220
S'random generator; initialized when needed, if not given earlier'
p2221
I0
I0
I00
Ntp2222
asg29
(dp2223
sbsS'TTreeDescender_UnknownMergeAsSelector'
p2224
(i__main__
ClassDefinition
p2225
(dp2226
g4
I1
sg5
I0
sg6
g2224
sg7
S'TTreeDescender'
p2227
sg9
I0
sg10
(lp2228
sg12
(lp2229
sg29
(dp2230
sbsS'TContingencyAttrClass'
p2231
(i__main__
ClassDefinition
p2232
(dp2233
g4
I1
sg5
I0
sg6
g2231
sg7
S'TContingencyClass'
p2234
sg9
I00
sg10
(lp2235
sg12
(lp2236
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp2237
sbsS'TPythonValueSpecial'
p2238
(i__main__
ClassDefinition
p2239
(dp2240
g4
I1
sg5
I0
sg6
g2238
sg7
S'TOrange'
p2241
sg9
I00
sg10
(lp2242
sg12
(lp2243
(S'int'
p2244
S'valueType'
p2245
S'value_type'
p2246
S'value type'
p2247
I0
I0
I01
Ntp2248
asg29
(dp2249
sbsS'TProbabilityEstimatorConstructor'
p2250
(i__main__
ClassDefinition
p2251
(dp2252
g4
I1
sg5
I0
sg6
g2250
sg7
S'TOrange'
p2253
sg9
I01
sg10
(lp2254
sg12
(lp2255
sg29
(dp2256
sbsS'TFloatVariable'
p2257
(i__main__
ClassDefinition
p2258
(dp2259
g4
I1
sg5
I0
sg6
g2257
sg7
S'TVariable'
p2260
sg9
I00
sg10
(lp2261
sg12
(lp2262
(S'float'
p2263
S'startValue'
p2264
S'start_value'
p2265
S'lowest value'
p2266
I0
I0
I01
Ntp2267
a(S'float'
p2268
S'endValue'
p2269
S'end_value'
p2270
S'highest value'
p2271
I0
I0
I01
Ntp2272
a(S'float'
p2273
S'stepValue'
p2274
S'step_value'
p2275
S'step'
p2276
I0
I0
I01
Ntp2277
a(S'int'
p2278
S'numberOfDecimals'
p2279
S'number_of_decimals'
p2280
S'number of digits after decimal point'
p2281
I0
I0
I01
Ntp2282
a(S'bool'
p2283
S'scientificFormat'
p2284
S'scientific_format'
p2285
S'use scientific format in output'
p2286
I0
I0
I01
Ntp2287
a(S'int'
p2288
S'adjustDecimals'
p2289
S'adjust_decimals'
p2290
S"adjust number of decimals according to the values converted (0 - no, 1 - yes, 2 - yes, but haven't seen any yet)"
p2291
I0
I0
I01
Ntp2292
ag642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp2293
sbsS'TImputer_random'
p2294
(i__main__
ClassDefinition
p2295
(dp2296
g4
I1
sg5
I0
sg6
g2294
sg7
S'TImputer'
p2297
sg9
I00
sg10
(lp2298
sg12
(lp2299
(S'bool'
p2300
S'imputeClass'
p2301
S'impute_class'
p2302
S'Tells whether to impute the class values, too (default: true)'
p2303
I0
I0
I01
Ntp2304
a(S'bool'
p2305
S'deterministic'
p2306
g2306
S"tells whether to initialize random by example's CRC (default: false)"
p2307
I0
I0
I01
Ntp2308
a(S'TDistributionList'
p2309
S'distributions'
p2310
g2310
S'probability functions'
p2311
I0
I0
I00
Ntp2312
asg29
(dp2313
sbsS'TFilter_hasMeta'
p2314
(i__main__
ClassDefinition
p2315
(dp2316
g4
I1
sg5
I0
sg6
g2314
sg7
S'TFilter'
p2317
sg9
I00
sg10
(lp2318
sg12
(lp2319
(S'int'
p2320
S'id'
p2321
g2321
S'meta attribute id'
p2322
I0
I0
I01
Ntp2323
ag259
ag263
asg29
(dp2324
sbsS'TProbabilityEstimatorConstructor_kernel'
p2325
(i__main__
ClassDefinition
p2326
(dp2327
g4
I1
sg5
I0
sg6
g2325
sg7
S'TProbabilityEstimatorConstructor'
p2328
sg9
I00
sg10
(lp2329
sg12
(lp2330
(S'float'
p2331
S'minImpact'
p2332
S'min_impact'
p2333
S'Minimal impact the point must have to be counted'
p2334
I0
I0
I01
Ntp2335
a(S'float'
p2336
S'smoothing'
p2337
g2337
S'Smoothing factor'
p2338
I0
I0
I01
Ntp2339
a(S'int'
p2340
S'nPoints'
p2341
S'n_points'
p2342
S'Number of points for curve (negative means the given number of points is inserted in each interval)'
p2343
I0
I0
I01
Ntp2344
asg29
(dp2345
sbsS'TSubsetsGenerator_constant'
p2346
(i__main__
ClassDefinition
p2347
(dp2348
g4
I1
sg5
I0
sg6
g2346
sg7
S'TSubsetsGenerator'
p2349
sg9
I00
sg10
(lp2350
sg12
(lp2351
(S'TVarList'
p2352
S'constant'
p2353
g2353
S'a subset that is returned (once!)'
p2354
I0
I0
I00
Ntp2355
a(S'TVarList'
p2356
S'varList'
p2357
S'var_list'
p2358
S'a set of attributes from which subsets are generated'
p2359
I0
I0
I00
Ntp2360
asg29
(dp2361
sbsS'TDefaultClassifier'
p2362
(i__main__
ClassDefinition
p2363
(dp2364
g4
I1
sg5
I0
sg6
g2362
sg7
S'TClassifier'
p2365
sg9
I00
sg10
(lp2366
sg12
(lp2367
(S'TValue'
p2368
S'defaultVal'
p2369
S'default_val'
p2370
S'default prediction'
p2371
I0
I0
I01
Ntp2372
a(S'TDistribution'
p2373
S'defaultDistribution'
p2374
S'default_distribution'
p2375
S'default distribution'
p2376
I0
I0
I00
Ntp2377
ag791
ag796
asg29
(dp2378
sbsS'TTreeSplitConstructor_Measure'
p2379
(i__main__
ClassDefinition
p2380
(dp2381
g4
I1
sg5
I0
sg6
g2379
sg7
S'TTreeSplitConstructor'
p2382
sg9
I01
sg10
(lp2383
sg12
(lp2384
(S'TMeasureAttribute'
p2385
S'measure'
p2386
g2386
S'attribute quality measure'
p2387
I0
I0
I00
Ntp2388
a(S'float'
p2389
S'worstAcceptable'
p2390
S'worst_acceptable'
p2391
S'the worst acceptable quality of the attribute'
p2392
I0
I0
I01
Ntp2393
ag1707
asg29
(dp2394
sbsS'TTreeNode'
p2395
(i__main__
ClassDefinition
p2396
(dp2397
g4
I1
sg5
I0
sg6
g2395
sg7
S'TOrange'
p2398
sg9
I00
sg10
(lp2399
sg12
(lp2400
(S'TClassifier'
p2401
S'nodeClassifier'
p2402
S'node_classifier'
p2403
S'classifies an example'
p2404
I0
I0
I00
Ntp2405
a(S'TDistribution'
p2406
S'distribution'
p2407
g2407
S'distribution of classes in the node'
p2408
I0
I0
I00
Ntp2409
a(S'TDomainContingency'
p2410
S'contingency'
p2411
g2411
S'domain contingency for examples in the node'
p2412
I0
I0
I00
Ntp2413
a(S'TExampleGenerator'
p2414
S'examples'
p2415
g2415
S'learning examples (if stored)'
p2416
I0
I0
I00
Ntp2417
a(S'int'
p2418
S'weightID'
p2419
S'weight_ID'
p2420
S'weightID used to construct this node'
p2421
I0
I0
I01
Ntp2422
a(S'TClassifier'
p2423
S'branchSelector'
p2424
S'branch_selector'
p2425
S'classifier that select a branch for an example'
p2426
I0
I0
I00
Ntp2427
a(S'TTreeNodeList'
p2428
S'branches'
p2429
g2429
S'classifiers presenting the branches'
p2430
I0
I0
I00
Ntp2431
a(S'TStringList'
p2432
S'branchDescriptions'
p2433
S'branch_descriptions'
p2434
S'descriptions of branches'
p2435
I0
I0
I00
Ntp2436
a(S'TDiscDistribution'
p2437
S'branchSizes'
p2438
S'branch_sizes'
p2439
S'numbers of examples in branches'
p2440
I0
I0
I00
Ntp2441
asg29
(dp2442
sbsS'TTransformValue_IsDefined'
p2443
(i__main__
ClassDefinition
p2444
(dp2445
g4
I1
sg5
I0
sg6
g2443
sg7
S'TTransformValue'
p2446
sg9
I00
sg10
(lp2447
sg12
(lp2448
g318
asg29
(dp2449
sbsS'TFilter_hasClassValue'
p2450
(i__main__
ClassDefinition
p2451
(dp2452
g4
I1
sg5
I0
sg6
g2450
sg7
S'TFilter'
p2453
sg9
I00
sg10
(lp2454
sg12
(lp2455
g259
ag263
asg29
(dp2456
sbsS'TStopDistributionClustering_binary'
p2457
(i__main__
ClassDefinition
p2458
(dp2459
g4
I1
sg5
I0
sg6
g2457
sg7
S'TStopDistributionClustering'
p2460
sg9
I00
sg10
(lp2461
sg12
(lp2462
sg29
(dp2463
sbsS'TRuleFinder'
p2464
(i__main__
ClassDefinition
p2465
(dp2466
g4
I1
sg5
I0
sg6
g2464
sg7
S'TOrange'
p2467
sg9
I01
sg10
(lp2468
sg12
(lp2469
g1908
ag1911
asg29
(dp2470
sbsS'TClassifierByExampleTable'
p2471
(i__main__
ClassDefinition
p2472
(dp2473
g4
I1
sg5
I0
sg6
g2471
sg7
S'TClassifierFD'
p2474
sg9
I00
sg10
(lp2475
sg12
(lp2476
(S'TExampleTable'
p2477
S'sortedExamples'
p2478
S'sorted_examples'
p2479
S'a table of examples'
p2480
I0
I0
I00
Ntp2481
a(S'bool'
p2482
S'containsUnknowns'
p2483
S'contains_unknowns'
p2484
S'if true, the table contains unknown values'
p2485
I0
I0
I01
Ntp2486
a(S'TClassifier'
p2487
S'classifierForUnknown'
p2488
S'classifier_for_unknown'
p2489
S'a classifier for unknown cases'
p2490
I0
I0
I00
Ntp2491
a(S'TEFMDataDescription'
p2492
S'dataDescription'
p2493
S'data_description'
p2494
S'data description'
p2495
I0
I0
I00
Ntp2496
ag901
ag791
ag796
asg29
(dp2497
sbsS'TIMByRowsPreprocessor'
p2498
(i__main__
ClassDefinition
p2499
(dp2500
g4
I1
sg5
I0
sg6
g2498
sg7
S'TOrange'
p2501
sg9
I01
sg10
(lp2502
sg12
(lp2503
sg29
(dp2504
sbsS'TImputerConstructor_maximal'
p2505
(i__main__
ClassDefinition
p2506
(dp2507
g4
I1
sg5
I0
sg6
g2505
sg7
S'TImputerConstructor'
p2508
sg9
I00
sg10
(lp2509
sg12
(lp2510
g1487
asg29
(dp2511
sbsS'TRemoveRedundantOneValue'
p2512
(i__main__
ClassDefinition
p2513
(dp2514
g4
I1
sg5
I0
sg6
g2512
sg7
S'TRemoveRedundant'
p2515
sg9
I00
sg10
(lp2516
sg12
(lp2517
(S'bool'
p2518
S'onData'
p2519
S'on_data'
p2520
S'observe the actual number of value on the data (not on attribute definitions)'
p2521
I0
I0
I01
Ntp2522
ag546
asg29
(dp2523
sbsS'TDistributionAssessor_Relief'
p2524
(i__main__
ClassDefinition
p2525
(dp2526
g4
I1
sg5
I0
sg6
g2524
sg7
S'TDistributionAssessor'
p2527
sg9
I00
sg10
(lp2528
sg12
(lp2529
sg29
(dp2530
sbsS'TRuleBeamCandidateSelector'
p2531
(i__main__
ClassDefinition
p2532
(dp2533
g4
I1
sg5
I0
sg6
g2531
sg7
S'TOrange'
p2534
sg9
I01
sg10
(lp2535
sg12
(lp2536
sg29
(dp2537
sbsS'TSubsetsGenerator_minMaxSize'
p2538
(i__main__
ClassDefinition
p2539
(dp2540
g4
I1
sg5
I0
sg6
g2538
sg7
S'TSubsetsGenerator'
p2541
sg9
I00
sg10
(lp2542
sg12
(lp2543
(S'int'
p2544
S'min'
p2545
g2545
S'minimal subset size'
p2546
I0
I0
I01
Ntp2547
a(S'int'
p2548
S'max'
p2549
g2549
S'maximal subset size'
p2550
I0
I0
I01
Ntp2551
ag2360
asg29
(dp2552
sbsS'TContingencyClass'
p2553
(i__main__
ClassDefinition
p2554
(dp2555
g4
I1
sg5
I0
sg6
g2553
sg7
S'TContingency'
p2556
sg9
I01
sg10
(lp2557
sg12
(lp2558
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp2559
sbsS'TAssociationClassifier'
p2560
(i__main__
ClassDefinition
p2561
(dp2562
g4
I1
sg5
I0
sg6
g2560
sg7
S'TClassifierFD'
p2563
sg9
I00
sg10
(lp2564
sg12
(lp2565
(S'TAssociationRules'
p2566
S'rules'
p2567
g2567
S'association rules'
p2568
I0
I0
I00
Ntp2569
a(S'int'
p2570
S'voteWeight'
p2571
S'vote_weight'
p2572
S'vote weight (s=support, c=confidence, p=product)'
p2573
I0
I0
I01
Ntp2574
ag901
ag791
ag796
asg29
(dp2575
sbsS'TDomainDistributions'
p2576
(i__main__
ClassDefinition
p2577
(dp2578
g4
I1
sg5
I0
sg6
g2576
sg7
S'TOrange'
p2579
sg9
I00
sg10
(lp2580
sg12
(lp2581
sg29
(dp2582
sbsS'TSVMLearnerSparse'
p2583
(i__main__
ClassDefinition
p2584
(dp2585
g4
I1
sg5
I0
sg6
g2583
sg7
S'TSVMLearner'
p2586
sg9
I00
sg10
(lp2587
sg12
(lp2588
(S'bool'
p2589
S'useNonMeta'
p2590
S'use_non_meta'
p2591
S'include non meta attributes in the learning process'
p2592
I0
I0
I01
Ntp2593
ag2025
ag2030
ag2034
ag2038
ag2042
ag2046
ag2050
ag2054
ag2058
ag2061
ag2065
ag2069
ag2073
ag2078
ag47
asg29
(dp2594
sbsS'TSubsetsGenerator_constant_iterator'
p2595
(i__main__
ClassDefinition
p2596
(dp2597
g4
I1
sg5
I0
sg6
g2595
sg7
S'TSubsetsGenerator_iterator'
p2598
sg9
I00
sg10
(lp2599
sg12
(lp2600
(S'TVarList'
p2601
S'constant'
p2602
g2602
S'a subset that is returned (once!)'
p2603
I0
I0
I00
Ntp2604
a(S'bool'
p2605
S'moreToCome'
p2606
S'more_to_come'
p2607
g1294
I0
I0
I01
Ntp2608
ag192
asg29
(dp2609
sbsS'TExampleDistConstructor'
p2610
(i__main__
ClassDefinition
p2611
(dp2612
g4
I1
sg5
I0
sg6
g2610
sg7
S'TOrange'
p2613
sg9
I01
sg10
(lp2614
sg12
(lp2615
sg29
(dp2616
sbsS'TIMByIMByRows'
p2617
(i__main__
ClassDefinition
p2618
(dp2619
g4
I1
sg5
I0
sg6
g2617
sg7
S'TIMConstructor'
p2620
sg9
I00
sg10
(lp2621
sg12
(lp2622
(S'bool'
p2623
S'recordRowExamples'
p2624
S'record_row_examples'
p2625
S'enables creation of rowExample list'
p2626
I0
I0
I01
Ntp2627
asg29
(dp2628
sbsS'TDiscrete2Continuous'
p2629
(i__main__
ClassDefinition
p2630
(dp2631
g4
I1
sg5
I0
sg6
g2629
sg7
S'TTransformValue'
p2632
sg9
I00
sg10
(lp2633
sg12
(lp2634
(S'int'
p2635
S'value'
p2636
g2636
S'target value'
p2637
I0
I0
I01
Ntp2638
a(S'bool'
p2639
S'invert'
p2640
g2640
S'give 1.0 to values not equal to the target'
p2641
I0
I0
I01
Ntp2642
a(S'bool'
p2643
S'zeroBased'
p2644
S'zero_based'
p2645
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p2646
I0
I0
I01
Ntp2647
ag318
asg29
(dp2648
sbsS'TColumnAssessor_m'
p2649
(i__main__
ClassDefinition
p2650
(dp2651
g4
I1
sg5
I0
sg6
g2649
sg7
S'TColumnAssessor'
p2652
sg9
I00
sg10
(lp2653
sg12
(lp2654
(S'float'
p2655
g991
g991
S'm for m-estimate'
p2656
I0
I0
I01
Ntp2657
asg29
(dp2658
sbsS'TImputer_defaults'
p2659
(i__main__
ClassDefinition
p2660
(dp2661
g4
I1
sg5
I0
sg6
g2659
sg7
S'TImputer'
p2662
sg9
I00
sg10
(lp2663
sg12
(lp2664
(S'TExample'
p2665
S'defaults'
p2666
g2666
S'values that are to be inserted instead of missing ones'
p2667
I0
I0
I00
Ntp2668
asg29
(dp2669
sbsS'TContingency'
p2670
(i__main__
ClassDefinition
p2671
(dp2672
g4
I1
sg5
I0
sg6
g2670
sg7
S'TOrange'
p2673
sg9
I00
sg10
(lp2674
sg12
(lp2675
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp2676
sbsS'TStringValue'
p2677
(i__main__
ClassDefinition
p2678
(dp2679
g4
I1
sg5
I0
sg6
g2677
sg7
S'TSomeValue'
p2680
sg9
I00
sg10
(lp2681
sg12
(lp2682
sg29
(dp2683
sbsS'TClassifierGenerator'
p2684
(i__main__
ClassDefinition
p2685
(dp2686
g4
I1
sg5
I0
sg6
g2684
sg7
S'TExampleGenerator'
p2687
sg9
I00
sg10
(lp2688
sg12
(lp2689
(S'TClassifier'
p2690
S'classify'
p2691
g2691
S'classifier'
p2692
I0
I0
I00
Ntp2693
ag121
ag125
asg29
(dp2694
sbsS'TRuleDataStoppingCriteria_Python'
p2695
(i__main__
ClassDefinition
p2696
(dp2697
g4
I1
sg5
I0
sg6
g2695
sg7
S'TRuleDataStoppingCriteria'
p2698
sg9
I00
sg10
(lp2699
sg12
(lp2700
sg29
(dp2701
sbsS'TTreeDescender_UnknownToCommonSelector'
p2702
(i__main__
ClassDefinition
p2703
(dp2704
g4
I1
sg5
I0
sg6
g2702
sg7
g2227
sg9
I0
sg10
(lp2705
sg12
(lp2706
sg29
(dp2707
sbsS'TPreprocessIM'
p2708
(i__main__
ClassDefinition
p2709
(dp2710
g4
I1
sg5
I0
sg6
g2708
sg7
S'TOrange'
p2711
sg9
I01
sg10
(lp2712
sg12
(lp2713
sg29
(dp2714
sbsS'TRuleEvaluator_Laplace'
p2715
(i__main__
ClassDefinition
p2716
(dp2717
g4
I1
sg5
I0
sg6
g2715
sg7
S'TRuleEvaluator'
p2718
sg9
I00
sg10
(lp2719
sg12
(lp2720
sg29
(dp2721
sbsS'TColumnAssessor_N'
p2722
(i__main__
ClassDefinition
p2723
(dp2724
g4
I1
sg5
I0
sg6
g2722
sg7
S'TColumnAssessor'
p2725
sg9
I00
sg10
(lp2726
sg12
(lp2727
sg29
(dp2728
sbsS'TRuleEvaluator_mEVC'
p2729
(i__main__
ClassDefinition
p2730
(dp2731
g4
I1
sg5
I0
sg6
g2729
sg7
S'TRuleEvaluator'
p2732
sg9
I00
sg10
(lp2733
sg12
(lp2734
(S'float'
p2735
g991
g991
S'Parameter m for m-estimate after EVC correction'
p2736
I0
I0
I01
Ntp2737
a(S'TEVDistGetter'
p2738
S'evDistGetter'
p2739
S'ev_dist_getter'
p2740
S'get EVC distribution for chi correction'
p2741
I0
I0
I00
Ntp2742
a(S'TVariable'
p2743
S'probVar'
p2744
S'prob_var'
p2745
S'probability coverage variable (meta usually)'
p2746
I0
I0
I00
Ntp2747
a(S'TRuleValidator'
p2748
S'validator'
p2749
g2749
S'rule validator for best rule'
p2750
I0
I0
I00
Ntp2751
a(S'int'
p2752
S'min_improved'
p2753
g2753
S'minimal number of improved examples'
p2754
I0
I0
I01
Ntp2755
a(S'float'
p2756
S'min_improved_perc'
p2757
g2757
S'minimal percentage of improved examples'
p2758
I0
I0
I01
Ntp2759
a(S'TRule'
p2760
S'bestRule'
p2761
S'best_rule'
p2762
S'best rule found and evaluated given conditions (min_improved, validator)'
p2763
I0
I0
I00
Ntp2764
a(S'float'
p2765
S'ruleAlpha'
p2766
S'rule_alpha'
p2767
S"minimal 'true' rule significance"
p2768
I0
I0
I01
Ntp2769
a(S'float'
p2770
S'attributeAlpha'
p2771
S'attribute_alpha'
p2772
S'minimal attribute significance'
p2773
I0
I0
I01
Ntp2774
a(S'bool'
p2775
S'returnExpectedProb'
p2776
S'return_expected_prob'
p2777
S'if true, evaluator returns expected class probability, if false, current class probability'
p2778
I0
I0
I01
Ntp2779
a(S'int'
p2780
S'optimismReduction'
p2781
S'optimism_reduction'
p2782
S'to select optimstic (0), pessimistic (1) or EVC (2) evaluation'
p2783
I0
I0
I01
Ntp2784
asg29
(dp2785
sbsS'TExample'
p2786
(i__main__
ClassDefinition
p2787
(dp2788
g4
I1
sg5
I0
sg6
g2786
sg7
S'TOrange'
p2789
sg9
I00
sg10
(lp2790
sg12
(lp2791
(S'TDomain'
p2792
S'domain'
p2793
g2793
S"Example's domain"
p2794
I01
I0
I00
Ntp2795
a(S'int'
p2796
S'id'
p2797
g2797
g1294
I0
I0
I01
Ntp2798
asg29
(dp2799
sbsS'TOrdinal2Continuous'
p2800
(i__main__
ClassDefinition
p2801
(dp2802
g4
I1
sg5
I0
sg6
g2800
sg7
S'TTransformValue'
p2803
sg9
I00
sg10
(lp2804
sg12
(lp2805
(S'float'
p2806
S'factor'
p2807
g2807
S'number of values'
p2808
I0
I0
I01
Ntp2809
ag318
asg29
(dp2810
sbsS'TExampleDistBySorting'
p2811
(i__main__
ClassDefinition
p2812
(dp2813
g4
I1
sg5
I0
sg6
g2811
sg7
S'TExampleDistConstructor'
p2814
sg9
I00
sg10
(lp2815
sg12
(lp2816
sg29
(dp2817
sbsNNsS'TAssociationRulesInducer'
p2818
(i__main__
ClassDefinition
p2819
(dp2820
g4
I1
sg5
I0
sg6
g2818
sg7
S'TOrange'
p2821
sg9
I00
sg10
(lp2822
sg12
(lp2823
(S'int'
p2824
S'maxItemSets'
p2825
S'max_item_sets'
p2826
S'maximal number of itemsets (increase if you want)'
p2827
I0
I0
I01
Ntp2828
a(S'float'
p2829
S'confidence'
p2830
g2830
S'required confidence'
p2831
I0
I0
I01
Ntp2832
a(S'float'
p2833
S'support'
p2834
g2834
S'required support'
p2835
I0
I0
I01
Ntp2836
a(S'bool'
p2837
S'classificationRules'
p2838
S'classification_rules'
p2839
S'if true, rules will have the class and only the class attribute on the right-hand side'
p2840
I0
I0
I01
Ntp2841
a(S'bool'
p2842
S'storeExamples'
p2843
S'store_examples'
p2844
S'if true, each rule is going to have tables with references to examples which match its left side or both sides'
p2845
I0
I0
I01
Ntp2846
asg29
(dp2847
sbsS'TPreprocessor_addMissingClasses'
p2848
(i__main__
ClassDefinition
p2849
(dp2850
g4
I1
sg5
I0
sg6
g2848
sg7
S'TPreprocessor'
p2851
sg9
I00
sg10
(lp2852
sg12
(lp2853
(S'float'
p2854
S'proportion'
p2855
g2855
S'proportion of removed class values'
p2856
I0
I0
I01
Ntp2857
a(S'int'
p2858
S'specialType'
p2859
S'special_type'
p2860
S'special value type (1=DC, 2=DK)'
p2861
I0
I0
I01
Ntp2862
a(S'TRandomGenerator'
p2863
S'randomGenerator'
p2864
S'random_generator'
p2865
S'random number generator'
p2866
I0
I0
I00
Ntp2867
asg29
(dp2868
sbsS'TBasketExampleGenerator'
p2869
(i__main__
ClassDefinition
p2870
(dp2871
g4
I1
sg5
I0
sg6
g2869
sg7
S'TFileExampleGenerator'
p2872
sg9
I00
sg10
(lp2873
sg12
(lp2874
g737
ag742
ag747
ag121
ag125
asg29
(dp2875
sbsS'TRuleEvaluator_Entropy'
p2876
(i__main__
ClassDefinition
p2877
(dp2878
g4
I1
sg5
I0
sg6
g2876
sg7
S'TRuleEvaluator'
p2879
sg9
I00
sg10
(lp2880
sg12
(lp2881
sg29
(dp2882
sbsS'TExamplesDistance_DTW'
p2883
(i__main__
ClassDefinition
p2884
(dp2885
g4
I1
sg5
I0
sg6
g2883
sg7
S'TExamplesDistance_Normalized'
p2886
sg9
I00
sg10
(lp2887
sg12
(lp2888
(S'int'
p2889
S'dtwDistance'
p2890
S'dtw_distance'
p2891
S' distance measure between individual attributes (default: square of difference)'
p2892
I0
I0
I01
S'ExamplesDistance_DTW_DistanceType'
p2893
tp2894
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp2895
S'DistanceType'
p2896
(lp2897
(S'Euclidean'
p2898
I0
tp2899
a(S'Derivative'
p2900
I1
tp2901
assbsS'TTreeExampleSplitter_UnknownsToRandom'
p2902
(i__main__
ClassDefinition
p2903
(dp2904
g4
I1
sg5
I0
sg6
g2902
sg7
S'TTreeExampleSplitter'
p2905
sg9
I00
sg10
(lp2906
sg12
(lp2907
sg29
(dp2908
sbsS'TTreeSplitConstructor_Combined'
p2909
(i__main__
ClassDefinition
p2910
(dp2911
g4
I1
sg5
I0
sg6
g2909
sg7
S'TTreeSplitConstructor'
p2912
sg9
I00
sg10
(lp2913
sg12
(lp2914
(S'TTreeSplitConstructor'
p2915
S'discreteSplitConstructor'
p2916
S'discrete_split_constructor'
p2917
S'split constructor for discrete attributes'
p2918
I0
I0
I00
Ntp2919
a(S'TTreeSplitConstructor'
p2920
S'continuousSplitConstructor'
p2921
S'continuous_split_constructor'
p2922
S'split constructor for continuous attributes'
p2923
I0
I0
I00
Ntp2924
ag1707
asg29
(dp2925
sbsS'TExamplesDistanceConstructor_DTW'
p2926
(i__main__
ClassDefinition
p2927
(dp2928
g4
I1
sg5
I0
sg6
g2926
sg7
S'TExamplesDistanceConstructor_Normalized'
p2929
sg9
I00
sg10
(lp2930
sg12
(lp2931
(S'int'
p2932
S'dtwDistance'
p2933
S'dtw_distance'
p2934
S'distance measure between individual attributes (default: square of difference)'
p2935
I0
I0
I01
Ntp2936
ag96
ag101
ag106
asg29
(dp2937
sbsS'TStopIMClusteringByAssessor_n'
p2938
(i__main__
ClassDefinition
p2939
(dp2940
g4
I1
sg5
I0
sg6
g2938
sg7
S'TStopIMClusteringByAssessor'
p2941
sg9
I00
sg10
(lp2942
sg12
(lp2943
(S'int'
p2944
g385
g385
S'number of clusters'
p2945
I0
I0
I01
Ntp2946
asg29
(dp2947
sbsS'TRandomGenerator'
p2948
(i__main__
ClassDefinition
p2949
(dp2950
g4
I1
sg5
I0
sg6
g2948
sg7
S'TOrange'
p2951
sg9
I00
sg10
(lp2952
sg12
(lp2953
(S'int'
p2954
S'initseed'
p2955
g2955
S'initial random seed'
p2956
I0
I0
I01
Ntp2957
a(S'int'
p2958
S'uses'
p2959
g2959
S'#times a number was returned'
p2960
I0
I0
I01
Ntp2961
asg29
(dp2962
sbsS'TPreprocessor_imputeByLearner'
p2963
(i__main__
ClassDefinition
p2964
(dp2965
g4
I1
sg5
I0
sg6
g2963
sg7
S'TPreprocessor'
p2966
sg9
I00
sg10
(lp2967
sg12
(lp2968
(S'TLearner'
p2969
S'learner'
p2970
g2970
S'learner used for inducing a model for imputation'
p2971
I0
I0
I00
Ntp2972
asg29
(dp2973
sbsS'TLogRegLearner'
p2974
(i__main__
ClassDefinition
p2975
(dp2976
g4
I1
sg5
I0
sg6
g2974
sg7
S'TLearner'
p2977
sg9
I00
sg10
(lp2978
sg12
(lp2979
(S'TLogRegFitter'
p2980
S'fitter'
p2981
g2981
S'fits beta coefficients and calculates beta errors.'
p2982
I0
I0
I00
Ntp2983
a(S'TImputerConstructor'
p2984
S'imputerConstructor'
p2985
S'imputer_constructor'
p2986
S'if present, it constructs an imputer for unknown values'
p2987
I0
I0
I00
Ntp2988
a(S'TDomainContinuizer'
p2989
S'domainContinuizer'
p2990
S'domain_continuizer'
p2991
S'if present, it constructs continuous domain if needed; if absent, default is used'
p2992
I0
I0
I00
Ntp2993
ag47
asg29
(dp2994
sbsS'TMeasureAttribute_IM'
p2995
(i__main__
ClassDefinition
p2996
(dp2997
g4
I1
sg5
I0
sg6
g2995
sg7
S'TMeasureAttribute'
p2998
sg9
I00
sg10
(lp2999
sg12
(lp3000
(S'TIMConstructor'
p3001
S'IMconstructor'
p3002
g3002
S'incompatibility matrix constructor'
p3003
I0
I0
I00
Ntp3004
a(S'TColumnAssessor'
p3005
S'columnAssessor'
p3006
S'column_assessor'
p3007
S'column quality assessor'
p3008
I0
I0
I00
Ntp3009
ag462
ag467
ag472
ag477
asg29
(dp3010
sbsS'TRuleStoppingCriteria_Python'
p3011
(i__main__
ClassDefinition
p3012
(dp3013
g4
I1
sg5
I0
sg6
g3011
sg7
S'TRuleStoppingCriteria'
p3014
sg9
I00
sg10
(lp3015
sg12
(lp3016
sg29
(dp3017
sbsS'TRemoveUnusedValues'
p3018
(i__main__
ClassDefinition
p3019
(dp3020
g4
I1
sg5
I0
sg6
g3018
sg7
S'TOrange'
p3021
sg9
I00
sg10
(lp3022
sg12
(lp3023
(S'bool'
p3024
S'removeOneValued'
p3025
S'remove_one_valued'
p3026
S'if true (default is false), one valued attributes are also removed'
p3027
I0
I0
I01
Ntp3028
asg29
(dp3029
sbsS'TExamplesDistance_Normalized'
p3030
(i__main__
ClassDefinition
p3031
(dp3032
g4
I1
sg5
I0
sg6
g3030
sg7
S'TExamplesDistance'
p3033
sg9
I01
sg10
(lp3034
sg12
(lp3035
g136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp3036
sbsS'TPreprocessor_take'
p3037
(i__main__
ClassDefinition
p3038
(dp3039
g4
I1
sg5
I0
sg6
g3037
sg7
S'TPreprocessor'
p3040
sg9
I00
sg10
(lp3041
sg12
(lp3042
(S'TVariableFilterMap'
p3043
S'values'
p3044
g3044
S'variable-filter pairs'
p3045
I0
I0
I00
Ntp3046
a(S'bool'
p3047
S'conjunction'
p3048
g3048
S'decides whether to take conjunction or disjunction of values'
p3049
I0
I0
I01
Ntp3050
asg29
(dp3051
sbsS'TRuleFinder_Python'
p3052
(i__main__
ClassDefinition
p3053
(dp3054
g4
I1
sg5
I0
sg6
g3052
sg7
S'TRuleFinder'
p3055
sg9
I00
sg10
(lp3056
sg12
(lp3057
g1908
ag1911
asg29
(dp3058
sbsS'TTabDelimExampleGenerator'
p3059
(i__main__
ClassDefinition
p3060
(dp3061
g4
I1
sg5
I0
sg6
g3059
sg7
S'TFileExampleGenerator'
p3062
sg9
I00
sg10
(lp3063
sg12
(lp3064
(S'TIntList'
p3065
S'attributeTypes'
p3066
S'attribute_types'
p3067
S'types of attributes (-1 normal, 0 skip, <-1 = meta ID)'
p3068
I0
I0
I00
Ntp3069
a(S'int'
p3070
S'classPos'
p3071
S'class_pos'
p3072
S'position of the class attribute'
p3073
I0
I0
I01
Ntp3074
a(S'TIntList'
p3075
S'classPoses'
p3076
S'class_poses'
p3077
S'positions of class attributes if there are multiple; otherwise None'
p3078
I0
I0
I00
Ntp3079
a(S'int'
p3080
S'basketPos'
p3081
S'basket_pos'
p3082
S'position of the (virtual) basket attribute'
p3083
I0
I0
I01
Ntp3084
a(S'int'
p3085
S'headerLines'
p3086
S'header_lines'
p3087
S'number of header lines (3 for .tab, 1 for .txt)'
p3088
I0
I0
I01
Ntp3089
a(S'bool'
p3090
S'csv'
p3091
g3091
S"also allow ',' as a separator"
p3092
I0
I0
I01
Ntp3093
a(S'TBasketFeeder'
p3094
S'basketFeeder'
p3095
S'basket_feeder'
p3096
S'takes care of inserting the meta attributes from the basket if need be'
p3097
I0
I0
I00
Ntp3098
ag737
ag742
ag747
ag121
ag125
asg29
(dp3099
sbsS'TkNNLearner'
p3100
(i__main__
ClassDefinition
p3101
(dp3102
g4
I1
sg5
I0
sg6
g3100
sg7
S'TLearner'
p3103
sg9
I00
sg10
(lp3104
sg12
(lp3105
(S'float'
p3106
g987
g987
S'number of neighbours (0 for sqrt of #examples)'
p3107
I0
I0
I01
Ntp3108
a(S'bool'
p3109
S'rankWeight'
p3110
S'rank_weight'
p3111
S'enable weighting by ranks'
p3112
I0
I0
I01
Ntp3113
a(S'TExamplesDistanceConstructor'
p3114
S'distanceConstructor'
p3115
S'distance_constructor'
p3116
S'metrics'
p3117
I0
I0
I00
Ntp3118
ag47
asg29
(dp3119
sbsS'TDistributionAssessor_mf'
p3120
(i__main__
ClassDefinition
p3121
(dp3122
g4
I1
sg5
I0
sg6
g3120
sg7
S'TDistributionAssessor'
p3123
sg9
I00
sg10
(lp3124
sg12
(lp3125
(S'float'
p3126
g991
g991
S'm for m-estimate'
p3127
I0
I0
I01
Ntp3128
asg29
(dp3129
sbsS'TEFMDataDescription'
p3130
(i__main__
ClassDefinition
p3131
(dp3132
g4
I1
sg5
I0
sg6
g3130
sg7
S'TOrange'
p3133
sg9
I00
sg10
(lp3134
S'domainDistributions'
p3135
asg12
(lp3136
(S'TDomain'
p3137
S'domain'
p3138
g3138
S'domain'
p3139
I01
I0
I00
Ntp3140
asg29
(dp3141
sbsS'TClassifierFD'
p3142
(i__main__
ClassDefinition
p3143
(dp3144
g4
I1
sg5
I0
sg6
g3142
sg7
S'TClassifier'
p3145
sg9
I00
sg10
(lp3146
sg12
(lp3147
g901
ag791
ag796
asg29
(dp3148
sbsS'TTreeDescender_UnknownToCommonBranch'
p3149
(i__main__
ClassDefinition
p3150
(dp3151
g4
I1
sg5
I0
sg6
g3149
sg7
g2227
sg9
I0
sg10
(lp3152
sg12
(lp3153
sg29
(dp3154
sbsS'TStopIMClusteringByAssessor_binary'
p3155
(i__main__
ClassDefinition
p3156
(dp3157
g4
I1
sg5
I0
sg6
g3155
sg7
S'TStopIMClusteringByAssessor'
p3158
sg9
I00
sg10
(lp3159
sg12
(lp3160
sg29
(dp3161
sbsS'TExamplesDistanceConstructor'
p3162
(i__main__
ClassDefinition
p3163
(dp3164
g4
I1
sg5
I0
sg6
g3162
sg7
S'TOrange'
p3165
sg9
I01
sg10
(lp3166
sg12
(lp3167
g106
asg29
(dp3168
sbsS'TRuleBeamCandidateSelector_Python'
p3169
(i__main__
ClassDefinition
p3170
(dp3171
g4
I1
sg5
I0
sg6
g3169
sg7
S'TRuleBeamCandidateSelector'
p3172
sg9
I00
sg10
(lp3173
sg12
(lp3174
sg29
(dp3175
sbsS'TEntropyDiscretization'
p3176
(i__main__
ClassDefinition
p3177
(dp3178
g4
I1
sg5
I0
sg6
g3176
sg7
S'TDiscretization'
p3179
sg9
I00
sg10
(lp3180
sg12
(lp3181
(S'int'
p3182
S'maxNumberOfIntervals'
p3183
(g3183
g385
tp3184
S' maximal number of intervals; default = 0 (no limits)'
p3185
I0
I0
I01
Ntp3186
a(S'bool'
p3187
S'forceAttribute'
p3188
(g3188
S'forced'
p3189
tp3190
S' minimal number of intervals; default = 0 (no limits)'
p3191
I0
I0
I01
Ntp3192
asg29
(dp3193
sbsS'TIMBySorting'
p3194
(i__main__
ClassDefinition
p3195
(dp3196
g4
I1
sg5
I0
sg6
g3194
sg7
S'TIMConstructor'
p3197
sg9
I00
sg10
(lp3198
sg12
(lp3199
g2627
asg29
(dp3200
sbsS'TImputerConstructor_asValue'
p3201
(i__main__
ClassDefinition
p3202
(dp3203
g4
I1
sg5
I0
sg6
g3201
sg7
S'TImputerConstructor'
p3204
sg9
I00
sg10
(lp3205
sg12
(lp3206
g1487
asg29
(dp3207
sbsS'TExampleDistVector'
p3208
(i__main__
ClassDefinition
p3209
(dp3210
g4
I1
sg5
I0
sg6
g3208
sg7
S'TOrange'
p3211
sg9
I00
sg10
(lp3212
sg12
(lp3213
sg29
(dp3214
sbsS'TIMClustering'
p3215
(i__main__
ClassDefinition
p3216
(dp3217
g4
I1
sg5
I0
sg6
g3215
sg7
S'TOrange'
p3218
sg9
I00
sg10
(lp3219
sg12
(lp3220
(S'TIM'
p3221
S'im'
p3222
g3222
S'incompatibilty matrix'
p3223
I0
I0
I00
Ntp3224
a(S'TIntList'
p3225
S'clusters'
p3226
g3226
S'cluster index for each matrix column'
p3227
I0
I0
I00
Ntp3228
a(S'int'
p3229
S'maxCluster'
p3230
S'max_cluster'
p3231
S'the highest cluster index'
p3232
I0
I0
I01
Ntp3233
a(S'float'
p3234
S'quality'
p3235
g3235
S'cluster quality'
p3236
I0
I0
I01
Ntp3237
asg29
(dp3238
sbsS'TRuleStoppingCriteria'
p3239
(i__main__
ClassDefinition
p3240
(dp3241
g4
I1
sg5
I0
sg6
g3239
sg7
S'TOrange'
p3242
sg9
I01
sg10
(lp3243
sg12
(lp3244
sg29
(dp3245
sbsS'TImputerConstructor_model'
p3246
(i__main__
ClassDefinition
p3247
(dp3248
g4
I1
sg5
I0
sg6
g3246
sg7
S'TImputerConstructor'
p3249
sg9
I00
sg10
(lp3250
sg12
(lp3251
(S'TLearner'
p3252
S'learnerDiscrete'
p3253
S'learner_discrete'
p3254
S'learner for discrete attributes'
p3255
I0
I0
I00
Ntp3256
a(S'TLearner'
p3257
S'learnerContinuous'
p3258
S'learner_continuous'
p3259
S'learner for continuous attributes'
p3260
I0
I0
I00
Ntp3261
a(S'bool'
p3262
S'useClass'
p3263
S'use_class'
p3264
S'tells whether to use class value in imputation (default: false)'
p3265
I0
I0
I01
Ntp3266
ag1487
asg29
(dp3267
sbsS'TFindNearestConstructor_BruteForce'
p3268
(i__main__
ClassDefinition
p3269
(dp3270
g4
I1
sg5
I0
sg6
g3268
sg7
S'TFindNearestConstructor'
p3271
sg9
I00
sg10
(lp3272
sg12
(lp3273
g1035
ag1040
asg29
(dp3274
sbsS'TImputerConstructor'
p3275
(i__main__
ClassDefinition
p3276
(dp3277
g4
I1
sg5
I0
sg6
g3275
sg7
S'TOrange'
p3278
sg9
I01
sg10
(lp3279
sg12
(lp3280
g1487
asg29
(dp3281
sbsS'TDiscretizer'
p3282
(i__main__
ClassDefinition
p3283
(dp3284
g4
I1
sg5
I0
sg6
g3282
sg7
S'TTransformValue'
p3285
sg9
I01
sg10
(lp3286
sg12
(lp3287
g318
asg29
(dp3288
sbsS'TValueFilter_discrete'
p3289
(i__main__
ClassDefinition
p3290
(dp3291
g4
I1
sg5
I0
sg6
g3289
sg7
S'TValueFilter'
p3292
sg9
I00
sg10
(lp3293
sg12
(lp3294
(S'TValueList'
p3295
S'values'
p3296
g3296
S'accepted values'
p3297
I0
I0
I00
Ntp3298
a(S'bool'
p3299
S'negate'
p3300
g3300
S'negate'
p3301
I0
I0
I01
Ntp3302
a(S'int'
p3303
S'position'
p3304
g3304
S"attribute's position in domain"
p3305
I0
I0
I01
Ntp3306
a(S'int'
p3307
S'acceptSpecial'
p3308
S'accept_special'
p3309
S'tells whether a special value (DK, DC...) is accepted (1), rejected (0) or ignored (-1)'
p3310
I0
I0
I01
Ntp3311
asg29
(dp3312
sbsS'TTreeStopCriteria_Python'
p3313
(i__main__
ClassDefinition
p3314
(dp3315
g4
I1
sg5
I0
sg6
g3313
sg7
S'TTreeStopCriteria'
p3316
sg9
I00
sg10
(lp3317
sg12
(lp3318
sg29
(dp3319
sbsS'TIGByIM'
p3320
(i__main__
ClassDefinition
p3321
(dp3322
g4
I1
sg5
I0
sg6
g3320
sg7
S'TIGConstructor'
p3323
sg9
I00
sg10
(lp3324
sg12
(lp3325
(S'TIMConstructor'
p3326
S'IMconstructor'
p3327
g3327
S'IM constructor'
p3328
I0
I0
I00
Ntp3329
asg29
(dp3330
sbsS'TRuleEvaluator_LRS'
p3331
(i__main__
ClassDefinition
p3332
(dp3333
g4
I1
sg5
I0
sg6
g3331
sg7
S'TRuleEvaluator'
p3334
sg9
I00
sg10
(lp3335
sg12
(lp3336
(S'TRuleList'
p3337
S'rules'
p3338
g3338
g1294
I0
I0
I00
Ntp3339
a(S'bool'
p3340
S'storeRules'
p3341
S'store_rules'
p3342
g1294
I0
I0
I01
Ntp3343
asg29
(dp3344
sbsS'TExampleCluster'
p3345
(i__main__
ClassDefinition
p3346
(dp3347
g4
I1
sg5
I0
sg6
g3345
sg7
S'TOrange'
p3348
sg9
I00
sg10
(lp3349
sg12
(lp3350
(S'TExampleCluster'
p3351
S'left'
p3352
g3352
S"'left' cluster"
p3353
I0
I0
I00
Ntp3354
a(S'TExampleCluster'
p3355
S'right'
p3356
g3356
S"'right' cluster"
p3357
I0
I0
I00
Ntp3358
a(S'float'
p3359
S'distance'
p3360
g3360
S'distance between the two clusters (not defined for leaves)'
p3361
I0
I0
I01
Ntp3362
a(S'TExample'
p3363
S'centroid'
p3364
g3364
S"cluster's centroid (always defined for leaves)"
p3365
I0
I0
I00
Ntp3366
asg29
(dp3367
sbsS'TClassifierByLookupTableN'
p3368
(i__main__
ClassDefinition
p3369
(dp3370
g4
I1
sg5
I0
sg6
g3368
sg7
S'TClassifierByLookupTable'
p3371
sg9
I00
sg10
(lp3372
sg12
(lp3373
(S'TVarList'
p3374
S'variables'
p3375
g3375
S'attributes'
p3376
I01
I0
I00
Ntp3377
a(S'TIntList'
p3378
S'noOfValues'
p3379
S'no_of_values'
p3380
S'number of values for each attribute'
p3381
I01
I0
I00
Ntp3382
a(S'TEFMDataDescription'
p3383
S'dataDescription'
p3384
S'data_description'
p3385
S'data description'
p3386
I0
I0
I00
Ntp3387
ag782
ag786
ag791
ag796
asg29
(dp3388
sbsS'TP2NN'
p3389
(i__main__
ClassDefinition
p3390
(dp3391
g4
I1
sg5
I0
sg6
g3389
sg7
S'TPNN'
p3392
sg9
I00
sg10
(lp3393
sg12
(lp3394
(S'int'
p3395
S'dimensions'
p3396
g3396
S'the number of dimensions'
p3397
I01
I0
I01
Ntp3398
a(S'TFloatList'
p3399
S'offsets'
p3400
g3400
S'offsets to subtract from the attribute values'
p3401
I0
I0
I00
Ntp3402
a(S'TFloatList'
p3403
S'normalizers'
p3404
g3404
S'number to divide the values by'
p3405
I0
I0
I00
Ntp3406
a(S'TFloatList'
p3407
S'averages'
p3408
g3408
S'numbers to use instead of the missing'
p3409
I0
I0
I00
Ntp3410
a(S'bool'
p3411
S'normalizeExamples'
p3412
S'normalize_examples'
p3413
S'if true, attribute values are divided to sum up to 1'
p3414
I0
I0
I01
Ntp3415
a(S'int'
p3416
S'nExamples'
p3417
S'n_examples'
p3418
S'the number of examples'
p3419
I01
I0
I01
Ntp3420
a(S'int'
p3421
S'law'
p3422
g3422
S'law'
p3423
I0
I0
I01
Ntp3424
ag901
ag791
ag796
asg29
(dp3425
sbsS'TImputerConstruct_Python'
p3426
(i__main__
ClassDefinition
p3427
(dp3428
g4
I1
sg5
I0
sg6
g3426
sg7
S'TImputerConstructor'
p3429
sg9
I00
sg10
(lp3430
sg12
(lp3431
g1487
asg29
(dp3432
sbsS'TSubsetsGenerator_withRestrictions'
p3433
(i__main__
ClassDefinition
p3434
(dp3435
g4
I1
sg5
I0
sg6
g3433
sg7
S'TSubsetsGenerator'
p3436
sg9
I00
sg10
(lp3437
sg12
(lp3438
(S'TSubsetsGenerator'
p3439
S'subGenerator'
p3440
S'sub_generator'
p3441
S'subset generator'
p3442
I0
I0
I00
Ntp3443
a(S'TVarList'
p3444
S'required'
p3445
g3445
S'set of required attributes'
p3446
I0
I0
I00
Ntp3447
a(S'TVarList'
p3448
S'forbidden'
p3449
g3449
S'set of forbidden attributes'
p3450
I0
I0
I00
Ntp3451
a(S'TVarListList'
p3452
S'forbiddenSubSubsets'
p3453
S'forbidden_sub_subsets'
p3454
S'set of forbidden subsets (attributes that must not occur together)'
p3455
I0
I0
I00
Ntp3456
ag2360
asg29
(dp3457
sbsS'TRuleBeamFilter_Python'
p3458
(i__main__
ClassDefinition
p3459
(dp3460
g4
I1
sg5
I0
sg6
g3458
sg7
S'TRuleBeamFilter'
p3461
sg9
I00
sg10
(lp3462
sg12
(lp3463
sg29
(dp3464
sbsS'TTreeExampleSplitter'
p3465
(i__main__
ClassDefinition
p3466
(dp3467
g4
I1
sg5
I0
sg6
g3465
sg7
S'TOrange'
p3468
sg9
I01
sg10
(lp3469
sg12
(lp3470
sg29
(dp3471
sbsS'TSVMClassifier'
p3472
(i__main__
ClassDefinition
p3473
(dp3474
g4
I1
sg5
I0
sg6
g3472
sg7
S'TClassifierFD'
p3475
sg9
I00
sg10
(lp3476
sg12
(lp3477
(S'TIntList'
p3478
S'nSV'
p3479
S'n_SV'
p3480
S'nSV'
p3481
I0
I0
I00
Ntp3482
a(S'TFloatList'
p3483
S'rho'
p3484
g3484
S'rho'
p3485
I0
I0
I00
Ntp3486
a(S'TFloatListList'
p3487
S'coef'
p3488
g3488
S'coef'
p3489
I0
I0
I00
Ntp3490
a(S'TFloatList'
p3491
S'probA'
p3492
S'prob_a'
p3493
S'probA - pairwise probability information'
p3494
I0
I0
I00
Ntp3495
a(S'TFloatList'
p3496
S'probB'
p3497
S'prob_b'
p3498
S'probB - pairwise probability information'
p3499
I0
I0
I00
Ntp3500
a(S'TExampleTable'
p3501
S'supportVectors'
p3502
S'support_vectors'
p3503
S'support vectors'
p3504
I0
I0
I00
Ntp3505
a(S'TExampleTable'
p3506
S'examples'
p3507
g3507
S'examples used to train the classifier'
p3508
I0
I0
I00
Ntp3509
a(S'TKernelFunc'
p3510
S'kernelFunc'
p3511
S'kernel_func'
p3512
S'custom kernel function'
p3513
I0
I0
I00
Ntp3514
a(S'int'
p3515
S'svm_type'
p3516
g3516
S'  SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p3517
I0
I0
I01
S'SVMLearner_SVMType'
p3518
tp3519
a(S'int'
p3520
S'kernel_type'
p3521
g3521
S'  kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p3522
I0
I0
I01
S'SVMLearner_Kernel'
p3523
tp3524
ag901
ag791
ag796
asg29
(dp3525
sbsS'TTreeLearner'
p3526
(i__main__
ClassDefinition
p3527
(dp3528
g4
I1
sg5
I0
sg6
g3526
sg7
S'TLearner'
p3529
sg9
I00
sg10
(lp3530
sg12
(lp3531
(S'TTreeSplitConstructor'
p3532
S'split'
p3533
g3533
S'split criterion'
p3534
I0
I0
I00
Ntp3535
a(S'TTreeStopCriteria'
p3536
S'stop'
p3537
g3537
S'stop criterion'
p3538
I0
I0
I00
Ntp3539
a(S'TComputeDomainContingency'
p3540
S'contingencyComputer'
p3541
S'contingency_computer'
p3542
S'computes contingency matrix'
p3543
I0
I0
I00
Ntp3544
a(S'TLearner'
p3545
S'nodeLearner'
p3546
S'node_learner'
p3547
S'node learner'
p3548
I0
I0
I00
Ntp3549
a(S'TTreeExampleSplitter'
p3550
S'exampleSplitter'
p3551
S'example_splitter'
p3552
S'splits examples to branches'
p3553
I0
I0
I00
Ntp3554
a(S'int'
p3555
S'maxDepth'
p3556
S'max_depth'
p3557
S'maximal tree depth (0 = root only, -1 = no limit)'
p3558
I0
I0
I01
Ntp3559
a(S'bool'
p3560
S'storeExamples'
p3561
S'store_examples'
p3562
S'if true (default: false), learning examples in nodes are stored'
p3563
I0
I0
I01
Ntp3564
a(S'bool'
p3565
S'storeDistributions'
p3566
S'store_distributions'
p3567
S'if true (default), class distributions of learning examples in nodes are stored'
p3568
I0
I0
I01
Ntp3569
a(S'bool'
p3570
S'storeContingencies'
p3571
S'store_contingencies'
p3572
S'if true (default), contingency matrices for examples are stored'
p3573
I0
I0
I01
Ntp3574
a(S'bool'
p3575
S'storeNodeClassifier'
p3576
S'store_node_classifier'
p3577
S'if true (default), the internal nodes have classifiers; needed for pruning'
p3578
I0
I0
I01
Ntp3579
a(S'TTreeDescender'
p3580
S'descender'
p3581
g3581
S'descends down the tree'
p3582
I0
I0
I00
Ntp3583
ag47
asg29
(dp3584
sbsS'TPreprocessor_shuffle'
p3585
(i__main__
ClassDefinition
p3586
(dp3587
g4
I1
sg5
I0
sg6
g3585
sg7
S'TPreprocessor'
p3588
sg9
I00
sg10
(lp3589
sg12
(lp3590
(S'TVarList'
p3591
S'attributes'
p3592
g3592
S'tells which attributes to shuffle'
p3593
I0
I0
I00
Ntp3594
a(S'TRandomGenerator'
p3595
S'randomGenerator'
p3596
S'random_generator'
p3597
S'random number generator'
p3598
I0
I0
I00
Ntp3599
asg29
(dp3600
sbsS'TLearner'
p3601
(i__main__
ClassDefinition
p3602
(dp3603
g4
I1
sg5
I0
sg6
g3601
sg7
S'TOrange'
p3604
sg9
I00
sg10
(lp3605
sg12
(lp3606
g47
asg29
(dp3607
sbsS'TRuleClassifier_logit'
p3608
(i__main__
ClassDefinition
p3609
(dp3610
g4
I1
sg5
I0
sg6
g3608
sg7
S'TRuleClassifier'
p3611
sg9
I00
sg10
(lp3612
sg12
(lp3613
(S'TDistribution'
p3614
S'prior'
p3615
g3615
S'prior distribution'
p3616
I0
I0
I00
Ntp3617
a(S'TDomain'
p3618
S'domain'
p3619
g3619
S'Domain'
p3620
I0
I0
I00
Ntp3621
a(S'TFloatList'
p3622
S'ruleBetas'
p3623
S'rule_betas'
p3624
S'Rule betas'
p3625
I0
I0
I00
Ntp3626
a(S'float'
p3627
S'minSignificance'
p3628
S'min_significance'
p3629
S'minimum requested significance for betas. '
p3630
I0
I0
I01
Ntp3631
a(S'float'
p3632
S'minBeta'
p3633
S'min_beta'
p3634
S'minimum beta by rule to be included in the model. '
p3635
I0
I0
I01
Ntp3636
a(S'bool'
p3637
S'setPrefixRules'
p3638
S'set_prefix_rules'
p3639
S'should we order prefix rules ? '
p3640
I0
I0
I01
Ntp3641
a(S'bool'
p3642
S'optimizeBetasFlag'
p3643
S'optimize_betas_flag'
p3644
S'should we assign betas to rules ? '
p3645
I0
I0
I01
Ntp3646
a(S'float'
p3647
S'penalty'
p3648
g3648
g1294
I0
I0
I01
Ntp3649
a(S'TClassifier'
p3650
S'priorClassifier'
p3651
S'prior_classifier'
p3652
S'prior classifier used if provided'
p3653
I0
I0
I00
Ntp3654
a(S'TLogitClassifierState'
p3655
S'currentState'
p3656
S'current_state'
p3657
g1294
I0
I0
I00
Ntp3658
a(S'TFloatList'
p3659
S'wsd'
p3660
g3660
g1294
I0
I0
I00
Ntp3661
a(S'TFloatList'
p3662
S'wavgCov'
p3663
S'wavg_cov'
p3664
g1294
I0
I0
I00
Ntp3665
a(S'TFloatList'
p3666
S'wSatQ'
p3667
S'w_sat_q'
p3668
g1294
I0
I0
I00
Ntp3669
a(S'TFloatList'
p3670
S'wsig'
p3671
g3671
g1294
I0
I0
I00
Ntp3672
a(S'TRuleList'
p3673
S'prefixRules'
p3674
S'prefix_rules'
p3675
S'rules that trigger before logit sum.'
p3676
I0
I0
I00
Ntp3677
ag1977
ag1980
ag1984
ag791
ag796
asg29
(dp3678
sbsS'TRuleCovererAndRemover'
p3679
(i__main__
ClassDefinition
p3680
(dp3681
g4
I1
sg5
I0
sg6
g3679
sg7
S'TOrange'
p3682
sg9
I01
sg10
(lp3683
sg12
(lp3684
sg29
(dp3685
sbsS'TPythonValue'
p3686
(i__main__
ClassDefinition
p3687
(dp3688
g4
I1
sg5
I0
sg6
g3686
sg7
S'TSomeValue'
p3689
sg9
I00
sg10
(lp3690
sg12
(lp3691
sg29
(dp3692
sbsS'TMultiClassifier'
p3693
(i__main__
ClassDefinition
p3694
(dp3695
g4
I1
sg5
I0
sg6
g3693
sg7
S'TOrange'
p3696
sg9
I00
sg10
(lp3697
sg12
(lp3698
(S'TVarList'
p3699
S'classVars'
p3700
S'class_vars'
p3701
S'class variables'
p3702
I0
I0
I00
Ntp3703
a(S'TDomain'
p3704
S'domain'
p3705
g3705
S'domain'
p3706
I0
I0
I00
Ntp3707
a(S'bool'
p3708
S'computesProbabilities'
p3709
S'computes_probabilities'
p3710
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p3711
I0
I0
I01
Ntp3712
asg29
(dp3713
sbsS'TDistributionAssessor_Kramer'
p3714
(i__main__
ClassDefinition
p3715
(dp3716
g4
I1
sg5
I0
sg6
g3714
sg7
S'TDistributionAssessor'
p3717
sg9
I00
sg10
(lp3718
sg12
(lp3719
sg29
(dp3720
sbsS'TTreeExampleSplitter_UnknownsToBranch'
p3721
(i__main__
ClassDefinition
p3722
(dp3723
g4
I1
sg5
I0
sg6
g3721
sg7
S'TTreeExampleSplitter'
p3724
sg9
I00
sg10
(lp3725
sg12
(lp3726
sg29
(dp3727
sbsS'TMajorityLearner'
p3728
(i__main__
ClassDefinition
p3729
(dp3730
g4
I1
sg5
I0
sg6
g3728
sg7
S'TLearner'
p3731
sg9
I00
sg10
(lp3732
sg12
(lp3733
(S'TProbabilityEstimatorConstructor'
p3734
S'estimatorConstructor'
p3735
S'estimator_constructor'
p3736
S'constructs probability estimator'
p3737
I0
I0
I00
Ntp3738
a(S'TDistribution'
p3739
S'aprioriDistribution'
p3740
S'apriori_distribution'
p3741
S'apriori class distribution'
p3742
I0
I0
I00
Ntp3743
ag47
asg29
(dp3744
sbsS'TMeasureAttributeFromProbabilities'
p3745
(i__main__
ClassDefinition
p3746
(dp3747
g4
I1
sg5
I0
sg6
g3745
sg7
S'TMeasureAttribute'
p3748
sg9
I01
sg10
(lp3749
sg12
(lp3750
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp3751
sbsS'TProbabilityEstimatorConstructor_relative'
p3752
(i__main__
ClassDefinition
p3753
(dp3754
g4
I1
sg5
I0
sg6
g3752
sg7
S'TProbabilityEstimatorConstructor'
p3755
sg9
I00
sg10
(lp3756
sg12
(lp3757
sg29
(dp3758
sbsS'TClassifierByLookupTable3'
p3759
(i__main__
ClassDefinition
p3760
(dp3761
g4
I1
sg5
I0
sg6
g3759
sg7
S'TClassifierByLookupTable'
p3762
sg9
I00
sg10
(lp3763
sg12
(lp3764
(S'TVariable'
p3765
S'variable1'
p3766
g3766
S'the first attribute used for classification'
p3767
I01
I0
I00
Ntp3768
a(S'TVariable'
p3769
S'variable2'
p3770
g3770
S'the second attribute used for classification'
p3771
I01
I0
I00
Ntp3772
a(S'TVariable'
p3773
S'variable3'
p3774
g3774
S'the third attribute used for classification'
p3775
I01
I0
I00
Ntp3776
a(S'int'
p3777
S'noOfValues1'
p3778
S'no_of_values1'
p3779
S'number of values of the first attribute'
p3780
I01
I0
I01
Ntp3781
a(S'int'
p3782
S'noOfValues2'
p3783
S'no_of_values2'
p3784
S'number of values of the second attribute'
p3785
I01
I0
I01
Ntp3786
a(S'int'
p3787
S'noOfValues3'
p3788
S'no_of_values3'
p3789
S'number of values of the third attribute'
p3790
I01
I0
I01
Ntp3791
a(S'TEFMDataDescription'
p3792
S'dataDescription'
p3793
S'data_description'
p3794
S'data description'
p3795
I0
I0
I00
Ntp3796
ag782
ag786
ag791
ag796
asg29
(dp3797
sbsS'TThresholdCA'
p3798
(i__main__
ClassDefinition
p3799
(dp3800
g4
I1
sg5
I0
sg6
g3798
sg7
S'TOrange'
p3801
sg9
I00
sg10
(lp3802
sg12
(lp3803
sg29
(dp3804
sbsS'TClassifierByLookupTable1'
p3805
(i__main__
ClassDefinition
p3806
(dp3807
g4
I1
sg5
I0
sg6
g3805
sg7
S'TClassifierByLookupTable'
p3808
sg9
I00
sg10
(lp3809
sg12
(lp3810
(S'TVariable'
p3811
S'variable1'
p3812
(g3812
S'variable'
p3813
tp3814
S' attribute used for classification'
p3815
I01
I0
I00
Ntp3816
ag782
ag786
ag791
ag796
asg29
(dp3817
sbsS'TValueFilter_string'
p3818
(i__main__
ClassDefinition
p3819
(dp3820
g4
I1
sg5
I0
sg6
g3818
sg7
S'TValueFilter'
p3821
sg9
I00
sg10
(lp3822
sg12
(lp3823
(S'string'
p3824
S'min'
p3825
(g3825
S'ref'
p3826
tp3827
S' reference value (lower bound for interval operators)'
p3828
I0
I0
I01
Ntp3829
a(S'string'
p3830
S'max'
p3831
g3831
S'upper bound for interval operators'
p3832
I0
I0
I01
Ntp3833
a(S'int'
p3834
S'oper'
p3835
g3835
S' operator'
p3836
I0
I0
I01
S'ValueFilter_Operator'
p3837
tp3838
a(S'bool'
p3839
S'caseSensitive'
p3840
S'case_sensitive'
p3841
S'if true (default), the operator is case sensitive'
p3842
I0
I0
I01
Ntp3843
ag3306
ag3311
asg29
(dp3844
sbsS'TGraphAsMatrix'
p3845
(i__main__
ClassDefinition
p3846
(dp3847
g4
I1
sg5
I0
sg6
g3845
sg7
S'TGraph'
p3848
sg9
I00
sg10
(lp3849
sg12
(lp3850
g682
ag687
ag691
asg29
(dp3851
sbsS'TFilter_hasSpecial'
p3852
(i__main__
ClassDefinition
p3853
(dp3854
g4
I1
sg5
I0
sg6
g3852
sg7
S'TFilter'
p3855
sg9
I00
sg10
(lp3856
sg12
(lp3857
g259
ag263
asg29
(dp3858
sbsS'TIMByRelief'
p3859
(i__main__
ClassDefinition
p3860
(dp3861
g4
I1
sg5
I0
sg6
g3859
sg7
S'TIMConstructor'
p3862
sg9
I00
sg10
(lp3863
sg12
(lp3864
(S'TExamplesDistance_Relief'
p3865
S'distance'
p3866
g3866
S'distance measure'
p3867
I0
I0
I00
Ntp3868
a(S'float'
p3869
g987
g987
S'number of neighbours'
p3870
I0
I0
I01
Ntp3871
a(S'float'
p3872
g991
g991
S'number of reference examples'
p3873
I0
I0
I01
Ntp3874
a(S'float'
p3875
S'kFromColumns'
p3876
S'k_from_columns'
p3877
S'if positive, number of neighbours is #columns*kFromColumns'
p3878
I0
I0
I01
Ntp3879
a(S'bool'
p3880
S'ignoreSameExample'
p3881
S'ignore_same_example'
p3882
S'does not put reference example into M'
p3883
I0
I0
I01
Ntp3884
a(S'bool'
p3885
S'convertToBinary'
p3886
S'convert_to_binary'
p3887
S'convert to binary class (hit-miss)'
p3888
I0
I0
I01
Ntp3889
a(S'bool'
p3890
S'correctClassFirst'
p3891
S'correct_class_first'
p3892
S'puts the correct class proportion to the first place'
p3893
I0
I0
I01
Ntp3894
a(S'bool'
p3895
S'allExamples'
p3896
S'all_examples'
p3897
S'uses all examples for reference examples'
p3898
I0
I0
I01
Ntp3899
a(S'bool'
p3900
S'allSameNeighbours'
p3901
S'all_same_neighbours'
p3902
S'uses all the examples same to the reference as neighbours'
p3903
I0
I0
I01
Ntp3904
ag2627
asg29
(dp3905
sbsS'TPreprocessor_addGaussianNoise'
p3906
(i__main__
ClassDefinition
p3907
(dp3908
g4
I1
sg5
I0
sg6
g3906
sg7
S'TPreprocessor'
p3909
sg9
I00
sg10
(lp3910
sg12
(lp3911
(S'TVariableFloatMap'
p3912
S'deviations'
p3913
g3913
S'deviations individual attribute values'
p3914
I0
I0
I00
Ntp3915
a(S'float'
p3916
S'defaultDeviation'
p3917
S'default_deviation'
p3918
S'default deviation'
p3919
I0
I0
I01
Ntp3920
a(S'TRandomGenerator'
p3921
S'randomGenerator'
p3922
S'random_generator'
p3923
S'random number generator'
p3924
I0
I0
I00
Ntp3925
asg29
(dp3926
sbsS'TRuleStoppingCriteria_NegativeDistribution'
p3927
(i__main__
ClassDefinition
p3928
(dp3929
g4
I1
sg5
I0
sg6
g3927
sg7
S'TRuleStoppingCriteria'
p3930
sg9
I00
sg10
(lp3931
sg12
(lp3932
sg29
(dp3933
sbsS'TTreeSplitConstructor_ExhaustiveBinary'
p3934
(i__main__
ClassDefinition
p3935
(dp3936
g4
I1
sg5
I0
sg6
g3934
sg7
S'TTreeSplitConstructor_Measure'
p3937
sg9
I00
sg10
(lp3938
sg12
(lp3939
g2388
ag2393
ag1707
asg29
(dp3940
sbsS'TTreeClassifier'
p3941
(i__main__
ClassDefinition
p3942
(dp3943
g4
I1
sg5
I0
sg6
g3941
sg7
S'TClassifierFD'
p3944
sg9
I00
sg10
(lp3945
sg12
(lp3946
(S'TTreeNode'
p3947
S'tree'
p3948
g3948
S'decision tree'
p3949
I0
I0
I00
Ntp3950
a(S'TTreeDescender'
p3951
S'descender'
p3952
g3952
S'object that descends down the tree'
p3953
I0
I0
I00
Ntp3954
ag901
ag791
ag796
asg29
(dp3955
sbsS'TSomeValue'
p3956
(i__main__
ClassDefinition
p3957
(dp3958
g4
I1
sg5
I0
sg6
g3956
sg7
S'TOrange'
p3959
sg9
I01
sg10
(lp3960
sg12
(lp3961
sg29
(dp3962
sbsS'TDiscDistribution'
p3963
(i__main__
ClassDefinition
p3964
(dp3965
g4
I1
sg5
I0
sg6
g3963
sg7
S'TDistribution'
p3966
sg9
I00
sg10
(lp3967
sg12
(lp3968
(S'TFloatList'
p3969
S'variances'
p3970
g3970
S'variances'
p3971
I0
I0
I00
Ntp3972
ag2191
ag2195
ag2199
ag2203
ag2207
ag2212
ag2217
ag2222
asg29
(dp3973
sbsS'TTreeDescender_UnknownMergeAsBranchSizes'
p3974
(i__main__
ClassDefinition
p3975
(dp3976
g4
I1
sg5
I0
sg6
g3974
sg7
g2227
sg9
I0
sg10
(lp3977
sg12
(lp3978
sg29
(dp3979
sbsS'THierarchicalClusterOrdering'
p3980
(i__main__
ClassDefinition
p3981
(dp3982
g4
I1
sg5
I0
sg6
g3980
sg7
S'TOrange'
p3983
sg9
I00
sg10
(lp3984
sg12
(lp3985
(S'TProgressCallback'
p3986
S'progress_callback'
p3987
g3987
S'progress callback function'
p3988
I0
I0
I00
Ntp3989
asg29
(dp3990
sbsS'TLogitClassifierState'
p3991
(i__main__
ClassDefinition
p3992
(dp3993
g4
I1
sg5
I0
sg6
g3991
sg7
S'TOrange'
p3994
sg9
I00
sg10
(lp3995
sg12
(lp3996
(S'TRuleList'
p3997
S'rules'
p3998
g3998
g1294
I0
I0
I00
Ntp3999
a(S'TExampleTable'
p4000
S'examples'
p4001
g4001
g1294
I0
I0
I00
Ntp4002
a(S'TFloatList'
p4003
S'avgProb'
p4004
S'avg_prob'
p4005
g1294
I0
I0
I00
Ntp4006
a(S'TFloatList'
p4007
S'avgPriorProb'
p4008
S'avg_prior_prob'
p4009
g1294
I0
I0
I00
Ntp4010
a(S'TIntList'
p4011
S'prefixRules'
p4012
S'prefix_rules'
p4013
g1294
I0
I0
I00
Ntp4014
asg29
(dp4015
sbsS'TColorIG'
p4016
(i__main__
ClassDefinition
p4017
(dp4018
g4
I1
sg5
I0
sg6
g4016
sg7
S'TOrange'
p4019
sg9
I01
sg10
(lp4020
sg12
(lp4021
sg29
(dp4022
sbsS'TSimpleTreeLearner'
p4023
(i__main__
ClassDefinition
p4024
(dp4025
g4
I1
sg5
I0
sg6
g4023
sg7
S'TLearner'
p4026
sg9
I00
sg10
(lp4027
sg12
(lp4028
(S'float'
p4029
S'maxMajority'
p4030
S'max_majority'
p4031
g1294
I0
I0
I01
Ntp4032
a(S'int'
p4033
S'minInstances'
p4034
S'min_instances'
p4035
g1294
I0
I0
I01
Ntp4036
a(S'int'
p4037
S'maxDepth'
p4038
S'max_depth'
p4039
g1294
I0
I0
I01
Ntp4040
a(S'float'
p4041
S'skipProb'
p4042
S'skip_prob'
p4043
g1294
I0
I0
I01
Ntp4044
a(S'TRandomGenerator'
p4045
S'randomGenerator'
p4046
S'random_generator'
p4047
g1294
I0
I0
I00
Ntp4048
ag47
asg29
(dp4049
sbsS'TFilter_disjunction'
p4050
(i__main__
ClassDefinition
p4051
(dp4052
g4
I1
sg5
I0
sg6
g4050
sg7
S'TFilter'
p4053
sg9
I00
sg10
(lp4054
sg12
(lp4055
(S'TFilterList'
p4056
S'filters'
p4057
g4057
S'a list of filters;'
p4058
I0
I0
I00
Ntp4059
ag259
ag263
asg29
(dp4060
sbsS'TColumnAssessor'
p4061
(i__main__
ClassDefinition
p4062
(dp4063
g4
I1
sg5
I0
sg6
g4061
sg7
S'TOrange'
p4064
sg9
I01
sg10
(lp4065
sg12
(lp4066
sg29
(dp4067
sbsS'TMultiLearner'
p4068
(i__main__
ClassDefinition
p4069
(dp4070
g4
I1
sg5
I0
sg6
g4068
sg7
S'TOrange'
p4071
sg9
I00
sg10
(lp4072
sg12
(lp4073
(S'int'
p4074
S'needs'
p4075
g4075
S'the kind of data that learner needs'
p4076
I01
I0
I01
Ntp4077
a(S'TDomain'
p4078
S'domain'
p4079
g4079
S'domain'
p4080
I0
I0
I00
Ntp4081
asg29
(dp4082
sbsS'TComputeDomainContingency_Preprocessor'
p4083
(i__main__
ClassDefinition
p4084
(dp4085
g4
I1
sg5
I0
sg6
g4083
sg7
S'TComputeDomainContingency'
p4086
sg9
I00
sg10
(lp4087
sg12
(lp4088
(S'TPreprocessor'
p4089
S'preprocessor'
p4090
g4090
S'preprocesses the exmaples (see the manual for restrictions!)'
p4091
I0
I0
I00
Ntp4092
a(S'bool'
p4093
S'resultInOriginalDomain'
p4094
S'result_in_original_domain'
p4095
S'tells whether the resulting DomainContingency should consist of original attributes'
p4096
I0
I0
I01
Ntp4097
ag28
asg29
(dp4098
sbsS'TMeasureAttribute_MSE'
p4099
(i__main__
ClassDefinition
p4100
(dp4101
g4
I1
sg5
I0
sg6
g4099
sg7
S'TMeasureAttribute'
p4102
sg9
I00
sg10
(lp4103
sg12
(lp4104
(S'float'
p4105
g991
g991
S'm for m-estimate'
p4106
I0
I0
I01
Ntp4107
a(S'int'
p4108
S'unknownsTreatment'
p4109
S'unknowns_treatment'
p4110
S' treatment of unknown values'
p4111
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p4112
tp4113
ag462
ag467
ag472
ag477
asg29
(dp4114
sbsS'TClusteringTreeClassifier'
p4115
(i__main__
ClassDefinition
p4116
(dp4117
g4
I1
sg5
I0
sg6
g4115
sg7
S'TMultiClassifier'
p4118
sg9
I00
sg10
(lp4119
sg12
(lp4120
g3703
ag3707
ag3712
asg29
(dp4121
sbsS'TNormalizeContinuous'
p4122
(i__main__
ClassDefinition
p4123
(dp4124
g4
I1
sg5
I0
sg6
g4122
sg7
S'TTransformValue'
p4125
sg9
I00
sg10
(lp4126
sg12
(lp4127
(S'float'
p4128
S'average'
p4129
g4129
S'the average value'
p4130
I0
I0
I01
Ntp4131
a(S'float'
p4132
S'span'
p4133
g4133
S'the value span'
p4134
I0
I0
I01
Ntp4135
ag318
asg29
(dp4136
sbsS'TPNN'
p4137
(i__main__
ClassDefinition
p4138
(dp4139
g4
I1
sg5
I0
sg6
g4137
sg7
S'TClassifierFD'
p4140
sg9
I00
sg10
(lp4141
sg12
(lp4142
g3398
ag3402
ag3406
ag3410
ag3415
ag3420
ag3424
ag901
ag791
ag796
asg29
(dp4143
sbsS'TBiModalDiscretizer'
p4144
(i__main__
ClassDefinition
p4145
(dp4146
g4
I1
sg5
I0
sg6
g4144
sg7
S'TDiscretizer'
p4147
sg9
I00
sg10
(lp4148
sg12
(lp4149
(S'float'
p4150
S'low'
p4151
g4151
S'low threshold'
p4152
I0
I0
I01
Ntp4153
a(S'float'
p4154
S'high'
p4155
g4155
S'high threshold'
p4156
I0
I0
I01
Ntp4157
ag318
asg29
(dp4158
sbsS'TProbabilityEstimatorConstructor_Laplace'
p4159
(i__main__
ClassDefinition
p4160
(dp4161
g4
I1
sg5
I0
sg6
g4159
sg7
S'TProbabilityEstimatorConstructor'
p4162
sg9
I00
sg10
(lp4163
sg12
(lp4164
(S'float'
p4165
S'l'
p4166
g4166
S'number of examples added to each class (default: 1)'
p4167
I0
I0
I01
Ntp4168
a(S'bool'
p4169
S'renormalize'
p4170
g4170
S'computes the estimate on the original (not the normalized) distribution'
p4171
I0
I0
I01
Ntp4172
asg29
(dp4173
sbsS'TEnumVariable'
p4174
(i__main__
ClassDefinition
p4175
(dp4176
g4
I1
sg5
I0
sg6
g4174
sg7
S'TVariable'
p4177
sg9
I00
sg10
(lp4178
sg12
(lp4179
(S'TStringList'
p4180
S'values'
p4181
g4181
S"attribute's values"
p4182
I0
I0
I00
Ntp4183
a(S'int'
p4184
S'baseValue'
p4185
S'base_value'
p4186
S'the index of the base value'
p4187
I0
I0
I01
Ntp4188
ag642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp4189
sbsS'TExamplesDistanceConstructor_Manhattan'
p4190
(i__main__
ClassDefinition
p4191
(dp4192
g4
I1
sg5
I0
sg6
g4190
sg7
S'TExamplesDistanceConstructor_Normalized'
p4193
sg9
I00
sg10
(lp4194
sg12
(lp4195
g96
ag101
ag106
asg29
(dp4196
sbsS'TC45Learner'
p4197
(i__main__
ClassDefinition
p4198
(dp4199
g4
I1
sg5
I0
sg6
g4197
sg7
S'TLearner'
p4200
sg9
I00
sg10
(lp4201
sg12
(lp4202
(S'bool'
p4203
S'gainRatio'
p4204
(g4204
S'g'
p4205
tp4206
S' use gain ratio (instead of information gain)'
p4207
I0
I0
I01
Ntp4208
a(S'bool'
p4209
S'subset'
p4210
(g4210
S's'
p4211
tp4212
S' use subsetting'
p4213
I0
I0
I01
Ntp4214
a(S'bool'
p4215
S'batch'
p4216
(g4216
S'b'
p4217
tp4218
S' batch'
p4219
I0
I0
I01
Ntp4220
a(S'bool'
p4221
S'probThresh'
p4222
(g4222
g91
tp4223
S' probability threshold'
p4224
I0
I0
I01
Ntp4225
a(S'int'
p4226
S'minObjs'
p4227
(g4227
g991
tp4228
S' minimal number of objects (examples) in leaves'
p4229
I0
I0
I01
Ntp4230
a(S'int'
p4231
S'window'
p4232
(g4232
S'w'
p4233
tp4234
S' window'
p4235
I0
I0
I01
Ntp4236
a(S'int'
p4237
S'increment'
p4238
(g4238
S'i'
p4239
tp4240
S' increment'
p4241
I0
I0
I01
Ntp4242
a(S'float'
p4243
S'cf'
p4244
(g4244
S'c'
p4245
tp4246
S' cf'
p4247
I0
I0
I01
Ntp4248
a(S'int'
p4249
S'trials'
p4250
(g4250
g1850
tp4251
S' trials'
p4252
I0
I0
I01
Ntp4253
a(S'bool'
p4254
S'prune'
p4255
g4255
S'return pruned tree'
p4256
I0
I0
I01
Ntp4257
a(S'bool'
p4258
S'convertToOrange'
p4259
S'convert_to_orange'
p4260
S'return TreeClassifier instead of C45TreeClassifier'
p4261
I0
I0
I01
Ntp4262
a(S'bool'
p4263
S'storeExamples'
p4264
S'store_examples'
p4265
S'stores examples when (if) converting to TreeClassifier'
p4266
I0
I0
I01
Ntp4267
a(S'bool'
p4268
S'storeContingencies'
p4269
S'store_contingencies'
p4270
S'stores contingencies when (if) converting to TreeClassifier'
p4271
I0
I0
I01
Ntp4272
ag47
asg29
(dp4273
sbsS'TExamplesDistance_Python'
p4274
(i__main__
ClassDefinition
p4275
(dp4276
g4
I1
sg5
I0
sg6
g4274
sg7
S'TExamplesDistance'
p4277
sg9
I00
sg10
(lp4278
sg12
(lp4279
sg29
(dp4280
sbsS'TTreeStopCriteria'
p4281
(i__main__
ClassDefinition
p4282
(dp4283
g4
I1
sg5
I0
sg6
g4281
sg7
S'TOrange'
p4284
sg9
I00
sg10
(lp4285
sg12
(lp4286
sg29
(dp4287
sbsS'TExamplesDistanceConstructor_Relief'
p4288
(i__main__
ClassDefinition
p4289
(dp4290
g4
I1
sg5
I0
sg6
g4288
sg7
S'TExamplesDistanceConstructor'
p4291
sg9
I00
sg10
(lp4292
sg12
(lp4293
g106
asg29
(dp4294
sbsS'TMissValuesGenerator'
p4295
(i__main__
ClassDefinition
p4296
(dp4297
g4
I1
sg5
I0
sg6
g4295
sg7
S'TChangeExampleGenerator'
p4298
sg9
I00
sg10
(lp4299
sg12
(lp4300
(S'TIntFloatList'
p4301
S'replaceProbabilities'
p4302
S'replace_probabilities'
p4303
S"probabilities for replacing attributes' values"
p4304
I0
I0
I00
Ntp4305
a(S'TRandomGenerator'
p4306
S'randomGenerator'
p4307
S'random_generator'
p4308
S'random generator'
p4309
I0
I0
I00
Ntp4310
ag121
ag125
asg29
(dp4311
sbsS'TRuleValidator_Python'
p4312
(i__main__
ClassDefinition
p4313
(dp4314
g4
I1
sg5
I0
sg6
g4312
sg7
S'TRuleValidator'
p4315
sg9
I00
sg10
(lp4316
sg12
(lp4317
sg29
(dp4318
sbsS'TSubsetsGenerator_constSize_iterator'
p4319
(i__main__
ClassDefinition
p4320
(dp4321
g4
I1
sg5
I0
sg6
g4319
sg7
S'TSubsetsGenerator_iterator'
p4322
sg9
I00
sg10
(lp4323
sg12
(lp4324
(S'bool'
p4325
S'moreToCome'
p4326
S'more_to_come'
p4327
g1294
I01
I0
I01
Ntp4328
ag192
asg29
(dp4329
sbsS'TRuleClassifier_firstRule'
p4330
(i__main__
ClassDefinition
p4331
(dp4332
g4
I1
sg5
I0
sg6
g4330
sg7
S'TRuleClassifier'
p4333
sg9
I00
sg10
(lp4334
sg12
(lp4335
(S'TDistribution'
p4336
S'prior'
p4337
g4337
S'prior distribution'
p4338
I0
I0
I00
Ntp4339
ag1977
ag1980
ag1984
ag791
ag796
asg29
(dp4340
sbsS'TEVDist'
p4341
(i__main__
ClassDefinition
p4342
(dp4343
g4
I1
sg5
I0
sg6
g4341
sg7
S'TOrange'
p4344
sg9
I00
sg10
(lp4345
sg12
(lp4346
(S'float'
p4347
S'mu'
p4348
g4348
S'mu of Fisher-Tippett distribution'
p4349
I0
I0
I01
Ntp4350
a(S'float'
p4351
S'beta'
p4352
g4352
S'beta of Fisher-Tippett distribution'
p4353
I0
I0
I01
Ntp4354
a(S'TFloatList'
p4355
S'percentiles'
p4356
g4356
S'usually 10 values - 0 = 5th percentile, 1 = 15th percentile, 9 = 95th percentile, change maxPercentile and step for other settings'
p4357
I0
I0
I00
Ntp4358
a(S'float'
p4359
S'maxPercentile'
p4360
S'max_percentile'
p4361
S'maxPercentile Value, default 0.95'
p4362
I0
I0
I01
Ntp4363
a(S'float'
p4364
S'step'
p4365
g4365
S'step of percentiles, default 0.1'
p4366
I0
I0
I01
Ntp4367
asg29
(dp4368
sbsS'TAssociationLearner'
p4369
(i__main__
ClassDefinition
p4370
(dp4371
g4
I1
sg5
I0
sg6
g4369
sg7
S'TLearner'
p4372
sg9
I00
sg10
(lp4373
sg12
(lp4374
(S'float'
p4375
S'confidence'
p4376
g4376
S'required confidence'
p4377
I0
I0
I01
Ntp4378
a(S'float'
p4379
S'support'
p4380
g4380
S'required support'
p4381
I0
I0
I01
Ntp4382
a(S'int'
p4383
S'voteWeight'
p4384
S'vote_weight'
p4385
S'vote weight (s=support, c=confidence, p=product)'
p4386
I0
I0
I01
Ntp4387
a(S'int'
p4388
S'maxItemSets'
p4389
S'max_item_sets'
p4390
S'maximal number of itemsets (increase if you want)'
p4391
I0
I0
I01
Ntp4392
ag47
asg29
(dp4393
sbsS'TDistributionAssessor'
p4394
(i__main__
ClassDefinition
p4395
(dp4396
g4
I1
sg5
I0
sg6
g4394
sg7
S'TOrange'
p4397
sg9
I01
sg10
(lp4398
sg12
(lp4399
sg29
(dp4400
sbsS'TEquiDistDiscretization'
p4401
(i__main__
ClassDefinition
p4402
(dp4403
g4
I1
sg5
I0
sg6
g4401
sg7
S'TDiscretization'
p4404
sg9
I00
sg10
(lp4405
sg12
(lp4406
(S'int'
p4407
S'numberOfIntervals'
p4408
(g4408
g385
tp4409
S' number of intervals'
p4410
I0
I0
I01
Ntp4411
asg29
(dp4412
sbsS'TConditionalProbabilityEstimatorConstructor_ByRows'
p4413
(i__main__
ClassDefinition
p4414
(dp4415
g4
I1
sg5
I0
sg6
g4413
sg7
S'TConditionalProbabilityEstimatorConstructor'
p4416
sg9
I00
sg10
(lp4417
sg12
(lp4418
(S'TProbabilityEstimatorConstructor'
p4419
S'estimatorConstructor'
p4420
S'estimator_constructor'
p4421
S'ProbabilityEstimator to be used '
p4422
I0
I0
I00
Ntp4423
asg29
(dp4424
sbsS'TTreeSplitConstructor'
p4425
(i__main__
ClassDefinition
p4426
(dp4427
g4
I1
sg5
I0
sg6
g4425
sg7
S'TOrange'
p4428
sg9
I01
sg10
(lp4429
sg12
(lp4430
g1707
asg29
(dp4431
sbsS'TSubsetsGenerator_constSize'
p4432
(i__main__
ClassDefinition
p4433
(dp4434
g4
I1
sg5
I0
sg6
g4432
sg7
S'TSubsetsGenerator'
p4435
sg9
I00
sg10
(lp4436
sg12
(lp4437
(S'int'
p4438
S'B'
p4439
g4439
S'subset size'
p4440
I0
I0
I01
Ntp4441
ag2360
asg29
(dp4442
sbsS'TColorIG_MCF'
p4443
(i__main__
ClassDefinition
p4444
(dp4445
g4
I1
sg5
I0
sg6
g4443
sg7
S'TColorIG'
p4446
sg9
I00
sg10
(lp4447
sg12
(lp4448
sg29
(dp4449
sbsS'TSVMClassifierSparse'
p4450
(i__main__
ClassDefinition
p4451
(dp4452
g4
I1
sg5
I0
sg6
g4450
sg7
S'TSVMClassifier'
p4453
sg9
I00
sg10
(lp4454
sg12
(lp4455
(S'bool'
p4456
S'useNonMeta'
p4457
S'use_non_meta'
p4458
S'include non meta attributes'
p4459
I0
I0
I01
Ntp4460
ag3482
ag3486
ag3490
ag3495
ag3500
ag3505
ag3509
ag3514
ag3519
ag3524
ag901
ag791
ag796
asg29
(dp4461
sbsS'TRuleBeamFilter'
p4462
(i__main__
ClassDefinition
p4463
(dp4464
g4
I1
sg5
I0
sg6
g4462
sg7
S'TOrange'
p4465
sg9
I01
sg10
(lp4466
sg12
(lp4467
sg29
(dp4468
sbsS'TPreprocessor_addClassWeight'
p4469
(i__main__
ClassDefinition
p4470
(dp4471
g4
I1
sg5
I0
sg6
g4469
sg7
S'TPreprocessor'
p4472
sg9
I00
sg10
(lp4473
sg12
(lp4474
(S'TFloatList'
p4475
S'classWeights'
p4476
S'class_weights'
p4477
S'weights of examples of particular classes'
p4478
I0
I0
I00
Ntp4479
a(S'bool'
p4480
S'equalize'
p4481
g4481
S'reweight examples to equalize class proportions'
p4482
I0
I0
I01
Ntp4483
a(S'TRandomGenerator'
p4484
S'randomGenerator'
p4485
S'random_generator'
p4486
S'random number generator'
p4487
I0
I0
I00
Ntp4488
asg29
(dp4489
sbsS'TValueFilter_continuous'
p4490
(i__main__
ClassDefinition
p4491
(dp4492
g4
I1
sg5
I0
sg6
g4490
sg7
S'TValueFilter'
p4493
sg9
I00
sg10
(lp4494
sg12
(lp4495
(S'float'
p4496
S'min'
p4497
(g4497
S'ref'
p4498
tp4499
S' reference value (lower bound for interval operators)'
p4500
I0
I0
I01
Ntp4501
a(S'float'
p4502
S'max'
p4503
g4503
S'upper bound for interval operators'
p4504
I0
I0
I01
Ntp4505
a(S'bool'
p4506
S'outside'
p4507
g4507
S'obsolete: if true, the filter accepts the values outside the interval, not inside'
p4508
I0
I0
I01
Ntp4509
a(S'int'
p4510
S'oper'
p4511
g4511
S' operator'
p4512
I0
I0
I01
S'ValueFilter_Operator'
p4513
tp4514
ag3306
ag3311
asg29
(dp4515
sbsS'TAssociationRule'
p4516
(i__main__
ClassDefinition
p4517
(dp4518
g4
I1
sg5
I0
sg6
g4516
sg7
S'TOrange'
p4519
sg9
I00
sg10
(lp4520
sg12
(lp4521
(S'TExample'
p4522
S'left'
p4523
g4523
S'left side of the rule'
p4524
I01
I0
I00
Ntp4525
a(S'TExample'
p4526
S'right'
p4527
g4527
S'right side of the rule'
p4528
I01
I0
I00
Ntp4529
a(S'float'
p4530
S'support'
p4531
g4531
S'support for the rule'
p4532
I0
I0
I01
Ntp4533
a(S'float'
p4534
S'confidence'
p4535
g4535
S'confidence of the rule'
p4536
I0
I0
I01
Ntp4537
a(S'float'
p4538
S'coverage'
p4539
g4539
S"rule's coverage"
p4540
I0
I0
I01
Ntp4541
a(S'float'
p4542
S'strength'
p4543
g4543
S"rule's strength"
p4544
I0
I0
I01
Ntp4545
a(S'float'
p4546
S'lift'
p4547
g4547
S"rule's lift"
p4548
I0
I0
I01
Ntp4549
a(S'float'
p4550
S'leverage'
p4551
g4551
S"rule's leverage"
p4552
I0
I0
I01
Ntp4553
a(S'float'
p4554
S'nAppliesLeft'
p4555
S'n_applies_left'
p4556
S"number of examples covered by the rule's left side"
p4557
I0
I0
I01
Ntp4558
a(S'float'
p4559
S'nAppliesRight'
p4560
S'n_applies_right'
p4561
S"number of examples covered by the rule's right side"
p4562
I0
I0
I01
Ntp4563
a(S'float'
p4564
S'nAppliesBoth'
p4565
S'n_applies_both'
p4566
S'number of examples covered by the rule'
p4567
I0
I0
I01
Ntp4568
a(S'float'
p4569
S'nExamples'
p4570
S'n_examples'
p4571
S'number of learning examples'
p4572
I0
I0
I01
Ntp4573
a(S'int'
p4574
S'nLeft'
p4575
S'n_left'
p4576
S"number of items on the rule's left side"
p4577
I01
I0
I01
Ntp4578
a(S'int'
p4579
S'nRight'
p4580
S'n_right'
p4581
S"number of items on the rule's right side"
p4582
I01
I0
I01
Ntp4583
a(S'TExampleTable'
p4584
S'examples'
p4585
g4585
S'examples which the rule was built from'
p4586
I01
I0
I00
Ntp4587
a(S'TIntList'
p4588
S'matchLeft'
p4589
S'match_left'
p4590
S'indices of examples that match the left side of the rule'
p4591
I01
I0
I00
Ntp4592
a(S'TIntList'
p4593
S'matchBoth'
p4594
S'match_both'
p4595
S'indices to examples that match both sides of the rule'
p4596
I01
I0
I00
Ntp4597
asg29
(dp4598
sbsS'TValueFilter'
p4599
(i__main__
ClassDefinition
p4600
(dp4601
g4
I1
sg5
I0
sg6
g4599
sg7
S'TOrange'
p4602
sg9
I01
sg10
(lp4603
sg12
(lp4604
g3306
ag3311
asg29
(dp4605
S'Operator'
p4606
(lp4607
(S'None'
p4608
I0
tp4609
a(S'Equal'
p4610
I1
tp4611
a(S'NotEqual'
p4612
I2
tp4613
a(S'Less'
p4614
I3
tp4615
a(S'LessEqual'
p4616
I4
tp4617
a(S'Greater'
p4618
I5
tp4619
a(S'GreaterEqual'
p4620
I6
tp4621
a(S'Between'
p4622
I7
tp4623
a(S'Outside'
p4624
I8
tp4625
a(S'Contains'
p4626
I9
tp4627
a(S'NotContains'
p4628
I10
tp4629
a(S'BeginsWith'
p4630
I11
tp4631
a(S'EndsWith'
p4632
I12
tp4633
a(S'Listed'
p4634
I13
tp4635
assbsS'TNoiseValuesGenerator'
p4636
(i__main__
ClassDefinition
p4637
(dp4638
g4
I1
sg5
I0
sg6
g4636
sg7
S'TChangeExampleGenerator'
p4639
sg9
I00
sg10
(lp4640
sg12
(lp4641
(S'TIntFloatList'
p4642
S'replaceProbabilities'
p4643
S'replace_probabilities'
p4644
S"probabilities for replacing attributes' values"
p4645
I0
I0
I00
Ntp4646
a(S'TRandomGenerator'
p4647
S'randomGenerator'
p4648
S'random_generator'
p4649
S'random generator'
p4650
I0
I0
I00
Ntp4651
ag121
ag125
asg29
(dp4652
sbsS'TTreeExampleSplitter_UnknownsToAll'
p4653
(i__main__
ClassDefinition
p4654
(dp4655
g4
I1
sg5
I0
sg6
g4653
sg7
S'TTreeExampleSplitter'
p4656
sg9
I00
sg10
(lp4657
sg12
(lp4658
sg29
(dp4659
sbsS'TEquiNDiscretization'
p4660
(i__main__
ClassDefinition
p4661
(dp4662
g4
I1
sg5
I0
sg6
g4660
sg7
S'TDiscretization'
p4663
sg9
I00
sg10
(lp4664
sg12
(lp4665
(S'int'
p4666
S'numberOfIntervals'
p4667
(g4667
g385
tp4668
S' number of intervals'
p4669
I0
I0
I01
Ntp4670
a(S'bool'
p4671
S'recursiveDivision'
p4672
S'recursive_division'
p4673
S'find cut-off points by recursive division (default = true)'
p4674
I0
I0
I01
Ntp4675
asg29
(dp4676
sbsS'TDomainBasicAttrStat'
p4677
(i__main__
ClassDefinition
p4678
(dp4679
g4
I1
sg5
I0
sg6
g4677
sg7
g2579
sg9
I00
sg10
(lp4680
sg12
(lp4681
(S'bool'
p4682
S'hasClassVar'
p4683
S'has_class_var'
p4684
S'has class var'
p4685
I0
I0
I01
Ntp4686
asg29
(dp4687
sbsS'TBayesClassifier'
p4688
(i__main__
ClassDefinition
p4689
(dp4690
g4
I1
sg5
I0
sg6
g4688
sg7
S'TClassifierFD'
p4691
sg9
I00
sg10
(lp4692
sg12
(lp4693
(S'TDistribution'
p4694
S'distribution'
p4695
g4695
S'class distributions (P(C))'
p4696
I0
I0
I00
Ntp4697
a(S'TDomainContingency'
p4698
S'conditionalDistributions'
p4699
S'conditional_distributions'
p4700
S'conditional distributions, P(C|A)'
p4701
I0
I0
I00
Ntp4702
a(S'TProbabilityEstimator'
p4703
S'estimator'
p4704
g4704
S'a probability estimator for P(C)'
p4705
I0
I0
I00
Ntp4706
a(S'TConditionalProbabilityEstimatorList'
p4707
S'conditionalEstimators'
p4708
S'conditional_estimators'
p4709
S'a probability estimator for P(C|A)'
p4710
I0
I0
I00
Ntp4711
a(S'bool'
p4712
S'normalizePredictions'
p4713
S'normalize_predictions'
p4714
S'if true, classifier will normalize predictions'
p4715
I0
I0
I01
Ntp4716
a(S'float'
p4717
S'threshold'
p4718
g4718
S'threshold probability for class 1 (for binary classes only)'
p4719
I0
I0
I01
Ntp4720
ag901
ag791
ag796
asg29
(dp4721
sbsS'TCostWrapperClassifier'
p4722
(i__main__
ClassDefinition
p4723
(dp4724
g4
I1
sg5
I0
sg6
g4722
sg7
S'TClassifier'
p4725
sg9
I00
sg10
(lp4726
sg12
(lp4727
(S'TClassifier'
p4728
S'classifier'
p4729
g4729
S'basic classifier'
p4730
I0
I0
I00
Ntp4731
a(S'TCostMatrix'
p4732
S'costMatrix'
p4733
S'cost_matrix'
p4734
S'cost matrix'
p4735
I0
I0
I00
Ntp4736
ag791
ag796
asg29
(dp4737
sbsS'TPreprocessor_ignore'
p4738
(i__main__
ClassDefinition
p4739
(dp4740
g4
I1
sg5
I0
sg6
g4738
sg7
S'TPreprocessor'
p4741
sg9
I00
sg10
(lp4742
sg12
(lp4743
(S'TVarList'
p4744
S'attributes'
p4745
g4745
S'tells which attributes to remove'
p4746
I0
I0
I00
Ntp4747
asg29
(dp4748
sbsS'TC45TreeNode'
p4749
(i__main__
ClassDefinition
p4750
(dp4751
g4
I1
sg5
I0
sg6
g4749
sg7
S'TOrange'
p4752
sg9
I00
sg10
(lp4753
sg12
(lp4754
(S'int'
p4755
S'nodeType'
p4756
S'node_type'
p4757
S' 0 = leaf,  1 = branch,  2 = cut,  3 = subset'
p4758
I0
I0
I01
S'C45TreeNode_NodeType'
p4759
tp4760
a(S'TValue'
p4761
S'leaf'
p4762
g4762
S'most frequent class at this node'
p4763
I0
I0
I01
Ntp4764
a(S'float'
p4765
S'items'
p4766
g4766
S'no of items at this node'
p4767
I0
I0
I01
Ntp4768
a(S'TDiscDistribution'
p4769
S'classDist'
p4770
S'class_dist'
p4771
S'class distribution of items'
p4772
I0
I0
I00
Ntp4773
a(S'TVariable'
p4774
S'tested'
p4775
g4775
S'attribute referenced in test'
p4776
I0
I0
I00
Ntp4777
a(S'float'
p4778
S'cut'
p4779
g4779
S'threshold for continuous attribute'
p4780
I0
I0
I01
Ntp4781
a(S'float'
p4782
S'lower'
p4783
g4783
S'lower limit of soft threshold'
p4784
I0
I0
I01
Ntp4785
a(S'float'
p4786
S'upper'
p4787
g4787
S'upper limit of soft threshold'
p4788
I0
I0
I01
Ntp4789
a(S'TIntList'
p4790
S'mapping'
p4791
g4791
S'mapping for discrete value'
p4792
I0
I0
I00
Ntp4793
a(S'TC45TreeNodeList'
p4794
S'branch'
p4795
g4795
S'branch[x] = (sub)tree for outcome x */'
p4796
I0
I0
I00
Ntp4797
asg29
(dp4798
S'NodeType'
p4799
(lp4800
(S'Leaf'
p4801
S'0'
p4802
tp4803
a(S'Branch'
p4804
I1
tp4805
a(S'Cut'
p4806
I2
tp4807
a(S'Subset'
p4808
I3
tp4809
assbsS'TMeasureAttribute_Python'
p4810
(i__main__
ClassDefinition
p4811
(dp4812
g4
I1
sg5
I0
sg6
g4810
sg7
S'TMeasureAttribute'
p4813
sg9
I00
sg10
(lp4814
sg12
(lp4815
g462
ag467
ag472
ag477
asg29
(dp4816
sbsS'TDistributionAssessor_Measure'
p4817
(i__main__
ClassDefinition
p4818
(dp4819
g4
I1
sg5
I0
sg6
g4817
sg7
S'TDistributionAssessor'
p4820
sg9
I00
sg10
(lp4821
sg12
(lp4822
(S'TMeasureAttribute'
p4823
S'measure'
p4824
g4824
S'attribute quality measure'
p4825
I0
I0
I00
Ntp4826
asg29
(dp4827
sbsS'TDistributionAssessor_m'
p4828
(i__main__
ClassDefinition
p4829
(dp4830
g4
I1
sg5
I0
sg6
g4828
sg7
S'TDistributionAssessor'
p4831
sg9
I00
sg10
(lp4832
sg12
(lp4833
(S'float'
p4834
g991
g991
S'm for m-estimate'
p4835
I0
I0
I01
Ntp4836
asg29
(dp4837
sbsS'TEVDistGetter'
p4838
(i__main__
ClassDefinition
p4839
(dp4840
g4
I1
sg5
I0
sg6
g4838
sg7
S'TOrange'
p4841
sg9
I01
sg10
(lp4842
sg12
(lp4843
sg29
(dp4844
sbsS'TStopDistributionClustering_n'
p4845
(i__main__
ClassDefinition
p4846
(dp4847
g4
I1
sg5
I0
sg6
g4845
sg7
S'TStopDistributionClustering'
p4848
sg9
I00
sg10
(lp4849
sg12
(lp4850
(S'int'
p4851
g385
g385
S'number of clusters'
p4852
I0
I0
I01
Ntp4853
asg29
(dp4854
sbsS'TTreeExampleSplitter_UnknownsAsSelector'
p4855
(i__main__
ClassDefinition
p4856
(dp4857
g4
I1
sg5
I0
sg6
g4855
sg7
S'TTreeExampleSplitter'
p4858
sg9
I00
sg10
(lp4859
sg12
(lp4860
sg29
(dp4861
sbsS'TClassifier_Python'
p4862
(i__main__
ClassDefinition
p4863
(dp4864
g4
I1
sg5
I0
sg6
g4862
sg7
S'TClassifier'
p4865
sg9
I00
sg10
(lp4866
sg12
(lp4867
g791
ag796
asg29
(dp4868
sbsS'TFilter_isDefined'
p4869
(i__main__
ClassDefinition
p4870
(dp4871
g4
I1
sg5
I0
sg6
g4869
sg7
S'TFilter'
p4872
sg9
I00
sg10
(lp4873
sg12
(lp4874
(S'TAttributedBoolList'
p4875
S'check'
p4876
g4876
S'tells which attributes to check; checks all if the list is empty'
p4877
I0
I0
I00
Ntp4878
ag259
ag263
asg29
(dp4879
sbsS'TProbabilityEstimatorConstructor_m'
p4880
(i__main__
ClassDefinition
p4881
(dp4882
g4
I1
sg5
I0
sg6
g4880
sg7
S'TProbabilityEstimatorConstructor'
p4883
sg9
I00
sg10
(lp4884
sg12
(lp4885
(S'float'
p4886
g991
g991
S'parameter m for m-estimation'
p4887
I0
I0
I01
Ntp4888
a(S'bool'
p4889
S'renormalize'
p4890
g4890
S'computes the estimate on the original (not the normalized) distribution'
p4891
I0
I0
I01
Ntp4892
asg29
(dp4893
sbsS'TStopDistributionClustering_noBigChange'
p4894
(i__main__
ClassDefinition
p4895
(dp4896
g4
I1
sg5
I0
sg6
g4894
sg7
S'TStopDistributionClustering'
p4897
sg9
I00
sg10
(lp4898
sg12
(lp4899
sg29
(dp4900
sbsS'TRuleLearner'
p4901
(i__main__
ClassDefinition
p4902
(dp4903
g4
I1
sg5
I0
sg6
g4901
sg7
S'TLearner'
p4904
sg9
I00
sg10
(lp4905
sg12
(lp4906
(S'TRuleDataStoppingCriteria'
p4907
S'dataStopping'
p4908
S'data_stopping'
p4909
g1294
I0
I0
I00
Ntp4910
a(S'TRuleStoppingCriteria'
p4911
S'ruleStopping'
p4912
S'rule_stopping'
p4913
g1294
I0
I0
I00
Ntp4914
a(S'TRuleCovererAndRemover'
p4915
S'coverAndRemove'
p4916
S'cover_and_remove'
p4917
g1294
I0
I0
I00
Ntp4918
a(S'TRuleFinder'
p4919
S'ruleFinder'
p4920
S'rule_finder'
p4921
g1294
I0
I0
I00
Ntp4922
a(S'TRuleClassifierConstructor'
p4923
S'classifierConstructor'
p4924
S'classifier_constructor'
p4925
S'classifier'
p4926
I0
I0
I00
Ntp4927
a(S'TProgressCallback'
p4928
S'progressCallback'
p4929
S'progress_callback'
p4930
S'progress callback function'
p4931
I0
I0
I00
Ntp4932
a(S'bool'
p4933
S'storeExamples'
p4934
S'store_examples'
p4935
g1294
I0
I0
I01
Ntp4936
a(S'int'
p4937
S'targetClass'
p4938
S'target_class'
p4939
g1294
I0
I0
I01
Ntp4940
a(S'TRuleList'
p4941
S'baseRules'
p4942
S'base_rules'
p4943
g1294
I0
I0
I00
Ntp4944
ag47
asg29
(dp4945
sbsS'TLinearLearner'
p4946
(i__main__
ClassDefinition
p4947
(dp4948
g4
I1
sg5
I0
sg6
g4946
sg7
S'TLearner'
p4949
sg9
I00
sg10
(lp4950
sg12
(lp4951
(S'int'
p4952
S'solver_type'
p4953
g4953
S' Solver type (loss function1)'
p4954
I0
I0
I01
S'LinearLearner_Lossfunction1'
p4955
tp4956
a(S'float'
p4957
S'eps'
p4958
g4958
S'Stopping criteria'
p4959
I0
I0
I01
Ntp4960
a(S'float'
p4961
g2052
g2052
S'Regularization parameter'
p4962
I0
I0
I01
Ntp4963
a(S'float'
p4964
S'bias'
p4965
g4965
S'bias parameter (default -1.0 - no bias)'
p4966
I0
I0
I01
Ntp4967
ag47
asg29
(dp4968
S'LIBLINEAR_VERSION'
p4969
(lp4970
(S'VERSION'
p4971
S'180'
p4972
tp4973
asS'Lossfunction1'
p4974
(lp4975
(S'L2R_LR'
p4976
I0
tp4977
a(S'L2R_L2Loss_SVC_Dual'
p4978
I1
tp4979
a(S'L2R_L2Loss_SVC'
p4980
I2
tp4981
a(S'L2R_L1Loss_SVC_Dual'
p4982
I3
tp4983
a(S'MCSVM_CS'
p4984
I4
tp4985
a(S'L1R_L2Loss_SVC'
p4986
I5
tp4987
a(S'L1R_LR'
p4988
I6
tp4989
a(S'L2R_LR_Dual'
p4990
I7
tp4991
asS'Lossfunction1_old_'
p4992
(lp4993
(S'L2_LR'
p4994
I0
tp4995
a(S'L2Loss_SVM_Dual'
p4996
I1
tp4997
a(S'L2Loss_SVM'
p4998
I2
tp4999
a(S'L1Loss_SVM_Dual'
p5000
I3
tp5001
assbsS'TImputer'
p5002
(i__main__
ClassDefinition
p5003
(dp5004
g4
I1
sg5
I0
sg6
g5002
sg7
S'TOrange'
p5005
sg9
I01
sg10
(lp5006
sg12
(lp5007
sg29
(dp5008
sbsS'TTransformValue_Python'
p5009
(i__main__
ClassDefinition
p5010
(dp5011
g4
I1
sg5
I0
sg6
g5009
sg7
S'TTransformValue'
p5012
sg9
I00
sg10
(lp5013
sg12
(lp5014
g318
asg29
(dp5015
sbsS'TStopIMClusteringByAssessor_noProfit'
p5016
(i__main__
ClassDefinition
p5017
(dp5018
g4
I1
sg5
I0
sg6
g5016
sg7
S'TStopIMClusteringByAssessor'
p5019
sg9
I00
sg10
(lp5020
sg12
(lp5021
(S'float'
p5022
S'minProfitProportion'
p5023
S'min_profit_proportion'
p5024
S'minimal allowable profit proportion'
p5025
I0
I0
I01
Ntp5026
asg29
(dp5027
sbsS'TRuleBeamFilter_Width'
p5028
(i__main__
ClassDefinition
p5029
(dp5030
g4
I1
sg5
I0
sg6
g5028
sg7
S'TRuleBeamFilter'
p5031
sg9
I00
sg10
(lp5032
sg12
(lp5033
(S'int'
p5034
S'width'
p5035
g5035
g1294
I0
I0
I01
Ntp5036
asg29
(dp5037
sbsS'TRandomClassifier'
p5038
(i__main__
ClassDefinition
p5039
(dp5040
g4
I1
sg5
I0
sg6
g5038
sg7
S'TClassifier'
p5041
sg9
I00
sg10
(lp5042
sg12
(lp5043
(S'TDistribution'
p5044
S'probabilities'
p5045
g5045
S'probabilities of predictions'
p5046
I0
I0
I00
Ntp5047
ag791
ag796
asg29
(dp5048
sbsS'TFindNearest'
p5049
(i__main__
ClassDefinition
p5050
(dp5051
g4
I1
sg5
I0
sg6
g5049
sg7
S'TOrange'
p5052
sg9
I01
sg10
(lp5053
sg12
(lp5054
g422
ag427
asg29
(dp5055
sbsS'TLogRegFitter_Cholesky'
p5056
(i__main__
ClassDefinition
p5057
(dp5058
g4
I1
sg5
I0
sg6
g5056
sg7
S'TLogRegFitter'
p5059
sg9
I00
sg10
(lp5060
sg12
(lp5061
sg29
(dp5062
sbsS'TClassifierFromVar'
p5063
(i__main__
ClassDefinition
p5064
(dp5065
g4
I1
sg5
I0
sg6
g5063
sg7
S'TClassifier'
p5066
sg9
I00
sg10
(lp5067
sg12
(lp5068
(S'TVariable'
p5069
S'whichVar'
p5070
(g5070
S'variable'
p5071
tp5072
S' variable'
p5073
I0
I0
I00
Ntp5074
a(S'TTransformValue'
p5075
S'transformer'
p5076
g5076
S'transformer'
p5077
I0
I0
I00
Ntp5078
a(S'TDistribution'
p5079
S'distributionForUnknown'
p5080
S'distribution_for_unknown'
p5081
S'distribution for unknown value'
p5082
I0
I0
I00
Ntp5083
a(S'bool'
p5084
S'transformUnknowns'
p5085
S'transform_unknowns'
p5086
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p5087
I0
I0
I01
Ntp5088
ag791
ag796
asg29
(dp5089
sbsS'TIM'
p5090
(i__main__
ClassDefinition
p5091
(dp5092
g4
I1
sg5
I0
sg6
g5090
sg7
S'TOrange'
p5093
sg9
I00
sg10
(lp5094
sg12
(lp5095
(S'int'
p5096
S'varType'
p5097
S'var_type'
p5098
S' class variable type'
p5099
I0
I0
I01
S'Variable_Type'
p5100
tp5101
a(S'TExampleTable'
p5102
S'rowExamples'
p5103
S'row_examples'
p5104
S'examples with free attributes for each row'
p5105
I0
I0
I00
Ntp5106
asg29
(dp5107
sbsS'TTreeSplitConstructor_OneAgainstOthers'
p5108
(i__main__
ClassDefinition
p5109
(dp5110
g4
I1
sg5
I0
sg6
g5108
sg7
S'TTreeSplitConstructor_Measure'
p5111
sg9
I00
sg10
(lp5112
sg12
(lp5113
g2388
ag2393
ag1707
asg29
(dp5114
sbsS'TClassifier'
p5115
(i__main__
ClassDefinition
p5116
(dp5117
g4
I1
sg5
I0
sg6
g5115
sg7
S'TOrange'
p5118
sg9
I00
sg10
(lp5119
sg12
(lp5120
g791
ag796
asg29
(dp5121
sbsS'TIG'
p5122
(i__main__
ClassDefinition
p5123
(dp5124
g4
I1
sg5
I0
sg6
g5122
sg7
S'TOrange'
p5125
sg9
I00
sg10
(lp5126
sg12
(lp5127
sg29
(dp5128
sbsS'TMeasureAttribute_relief'
p5129
(i__main__
ClassDefinition
p5130
(dp5131
g4
I1
sg5
I0
sg6
g5129
sg7
S'TMeasureAttribute'
p5132
sg9
I00
sg10
(lp5133
sg12
(lp5134
(S'float'
p5135
g987
g987
S'number of neighbours'
p5136
I0
I0
I01
Ntp5137
a(S'float'
p5138
g991
g991
S'number of reference examples'
p5139
I0
I0
I01
Ntp5140
a(S'bool'
p5141
S'checkCachedData'
p5142
S'check_cached_data'
p5143
S'tells whether to check the checksum of the data before reusing the cached neighbours'
p5144
I0
I0
I01
Ntp5145
ag462
ag467
ag472
ag477
asg29
(dp5146
sbsS'TMeasureAttribute_logOddsRatio'
p5147
(i__main__
ClassDefinition
p5148
(dp5149
g4
I1
sg5
I0
sg6
g5147
sg7
S'TMeasureAttributeFromProbabilities'
p5150
sg9
I00
sg10
(lp5151
sg12
(lp5152
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp5153
sbsS'TTreeExampleSplitter_Python'
p5154
(i__main__
ClassDefinition
p5155
(dp5156
g4
I1
sg5
I0
sg6
g5154
sg7
S'TTreeExampleSplitter'
p5157
sg9
I00
sg10
(lp5158
sg12
(lp5159
sg29
(dp5160
sbsS'TFilter_random'
p5161
(i__main__
ClassDefinition
p5162
(dp5163
g4
I1
sg5
I0
sg6
g5161
sg7
S'TFilter'
p5164
sg9
I00
sg10
(lp5165
sg12
(lp5166
(S'float'
p5167
S'prob'
p5168
g5168
S'probability of selecting an example'
p5169
I0
I0
I01
Ntp5170
a(S'TRandomGenerator'
p5171
S'randomGenerator'
p5172
S'random_generator'
p5173
S'random generator'
p5174
I0
I0
I00
Ntp5175
ag259
ag263
asg29
(dp5176
sbsS'TC45ExampleGenerator'
p5177
(i__main__
ClassDefinition
p5178
(dp5179
g4
I1
sg5
I0
sg6
g5177
sg7
S'TFileExampleGenerator'
p5180
sg9
I00
sg10
(lp5181
sg12
(lp5182
(S'TBoolList'
p5183
S'skip'
p5184
g5184
S'a boolean list, one element per attribute, denoting which attributes to skip'
p5185
I0
I0
I00
Ntp5186
ag737
ag742
ag747
ag121
ag125
asg29
(dp5187
sbsS'TProbabilityEstimatorConstructor_loess'
p5188
(i__main__
ClassDefinition
p5189
(dp5190
g4
I1
sg5
I0
sg6
g5188
sg7
S'TProbabilityEstimatorConstructor'
p5191
sg9
I00
sg10
(lp5192
sg12
(lp5193
(S'float'
p5194
S'windowProportion'
p5195
S'window_proportion'
p5196
S'The proportion of points in a window for LR'
p5197
I0
I0
I01
Ntp5198
a(S'int'
p5199
S'nPoints'
p5200
S'n_points'
p5201
S'The number of points on curve (negative means the given number of points is inserted in each interval)'
p5202
I0
I0
I01
Ntp5203
a(S'int'
p5204
S'distributionMethod'
p5205
S'distribution_method'
p5206
S" Meaning of the 'nPoints'"
p5207
I0
I0
I01
S'ProbabilityEstimatorConstructor_loess_DistributionMethod'
p5208
tp5209
asg29
(dp5210
S'DistributionMethod'
p5211
(lp5212
(S'Minimal'
p5213
S'DISTRIBUTE_MINIMAL'
p5214
tp5215
a(S'Factor'
p5216
S'DISTRIBUTE_FACTOR'
p5217
tp5218
a(S'Fixed'
p5219
S'DISTRIBUTE_FIXED'
p5220
tp5221
a(S'Uniform'
p5222
S'DISTRIBUTE_UNIFORM'
p5223
tp5224
a(S'Maximal'
p5225
S'DISTRIBUTE_MAXIMAL'
p5226
tp5227
assbsS'TLogRegFitter'
p5228
(i__main__
ClassDefinition
p5229
(dp5230
g4
I1
sg5
I0
sg6
g5228
sg7
S'TOrange'
p5231
sg9
I01
sg10
(lp5232
sg12
(lp5233
sg29
(dp5234
S'ErrorCode'
p5235
(lp5236
(S'OK'
p5237
I0
tp5238
a(S'Infinity'
p5239
I1
tp5240
a(S'Divergence'
p5241
I2
tp5242
a(S'Constant'
p5243
I3
tp5244
a(S'Singularity'
p5245
I4
tp5246
assbsS'TStopIMClusteringByAssessor_noBigChange'
p5247
(i__main__
ClassDefinition
p5248
(dp5249
g4
I1
sg5
I0
sg6
g5247
sg7
S'TStopIMClusteringByAssessor'
p5250
sg9
I00
sg10
(lp5251
sg12
(lp5252
sg29
(dp5253
sbsS'TImputerConstructor_random'
p5254
(i__main__
ClassDefinition
p5255
(dp5256
g4
I1
sg5
I0
sg6
g5254
sg7
S'TImputerConstructor'
p5257
sg9
I00
sg10
(lp5258
sg12
(lp5259
(S'bool'
p5260
S'deterministic'
p5261
g5261
S"tells whether to initialize random by example's CRC (default: false)"
p5262
I0
I0
I01
Ntp5263
ag1487
asg29
(dp5264
sbsS'TRandomLearner'
p5265
(i__main__
ClassDefinition
p5266
(dp5267
g4
I1
sg5
I0
sg6
g5265
sg7
S'TLearner'
p5268
sg9
I00
sg10
(lp5269
sg12
(lp5270
(S'TDistribution'
p5271
S'probabilities'
p5272
g5272
S'probabilities of predictions'
p5273
I0
I0
I00
Ntp5274
ag47
asg29
(dp5275
sbsS'TItemsetsSparseInducer'
p5276
(i__main__
ClassDefinition
p5277
(dp5278
g4
I1
sg5
I0
sg6
g5276
sg7
S'TOrange'
p5279
sg9
I00
sg10
(lp5280
sg12
(lp5281
(S'int'
p5282
S'maxItemSets'
p5283
S'max_item_sets'
p5284
S'maximal number of itemsets (increase if you want)'
p5285
I0
I0
I01
Ntp5286
a(S'float'
p5287
S'support'
p5288
g5288
S'required support'
p5289
I0
I0
I01
Ntp5290
a(S'bool'
p5291
S'storeExamples'
p5292
S'store_examples'
p5293
S'stores examples corresponding to itemsets'
p5294
I0
I0
I01
Ntp5295
asg29
(dp5296
sbsS'TRuleBeamInitializer_Default'
p5297
(i__main__
ClassDefinition
p5298
(dp5299
g4
I1
sg5
I0
sg6
g5297
sg7
S'TRuleBeamInitializer'
p5300
sg9
I00
sg10
(lp5301
sg12
(lp5302
sg29
(dp5303
sbsS'TImputerConstructor_minimal'
p5304
(i__main__
ClassDefinition
p5305
(dp5306
g4
I1
sg5
I0
sg6
g5304
sg7
S'TImputerConstructor'
p5307
sg9
I00
sg10
(lp5308
sg12
(lp5309
g1487
asg29
(dp5310
sbsS'TMeasureAttribute_cost'
p5311
(i__main__
ClassDefinition
p5312
(dp5313
g4
I1
sg5
I0
sg6
g5311
sg7
S'TMeasureAttributeFromProbabilities'
p5314
sg9
I00
sg10
(lp5315
sg12
(lp5316
(S'TCostMatrix'
p5317
S'cost'
p5318
g5318
S'cost matrix'
p5319
I0
I0
I00
Ntp5320
ag446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp5321
sbsS'TClustersFromIM'
p5322
(i__main__
ClassDefinition
p5323
(dp5324
g4
I1
sg5
I0
sg6
g5322
sg7
S'TOrange'
p5325
sg9
I01
sg10
(lp5326
sg12
(lp5327
sg29
(dp5328
sbsS'TRuleCovererAndRemover_Default'
p5329
(i__main__
ClassDefinition
p5330
(dp5331
g4
I1
sg5
I0
sg6
g5329
sg7
S'TRuleCovererAndRemover'
p5332
sg9
I00
sg10
(lp5333
sg12
(lp5334
sg29
(dp5335
sbsS'TClustersFromIMByAssessor'
p5336
(i__main__
ClassDefinition
p5337
(dp5338
g4
I1
sg5
I0
sg6
g5336
sg7
S'TClustersFromIM'
p5339
sg9
I00
sg10
(lp5340
sg12
(lp5341
(S'TColumnAssessor'
p5342
S'columnAssessor'
p5343
S'column_assessor'
p5344
S'column quality assessor'
p5345
I0
I0
I00
Ntp5346
a(S'TStopIMClusteringByAssessor'
p5347
S'stopCriterion'
p5348
S'stop_criterion'
p5349
S'stop criterion'
p5350
I0
I0
I00
Ntp5351
asg29
(dp5352
sbsS'TDomainContingency'
p5353
(i__main__
ClassDefinition
p5354
(dp5355
g4
I1
sg5
I0
sg6
g5353
sg7
g2579
sg9
I00
sg10
(lp5356
sg12
(lp5357
(S'TDistribution'
p5358
S'classes'
p5359
g5359
S'distribution of class values'
p5360
I0
I0
I00
Ntp5361
a(S'bool'
p5362
S'classIsOuter'
p5363
S'class_is_outer'
p5364
S'tells whether the class is the outer variable'
p5365
I0
I0
I01
Ntp5366
asg29
(dp5367
sbsS'TEarthClassifier'
p5368
(i__main__
ClassDefinition
p5369
(dp5370
g4
I1
sg5
I0
sg6
g5368
sg7
S'TClassifierFD'
p5371
sg9
I00
sg10
(lp5372
sg12
(lp5373
(S'int'
p5374
S'num_preds'
p5375
g5375
S'Number of predictor variables'
p5376
I0
I0
I01
Ntp5377
a(S'int'
p5378
S'num_terms'
p5379
g5379
S'Number of used terms'
p5380
I0
I0
I01
Ntp5381
a(S'int'
p5382
S'max_terms'
p5383
g5383
S'Maximum number of terms'
p5384
I0
I0
I01
Ntp5385
a(S'int'
p5386
S'num_responses'
p5387
g5387
S'Number of response variables'
p5388
I0
I0
I01
Ntp5389
a(S'TBoolList'
p5390
S'best_set'
p5391
g5391
S'Used terms.'
p5392
I0
I0
I00
Ntp5393
a(S'TFloatListList'
p5394
S'dirs'
p5395
g5395
S'max_preds x num_preds matrix'
p5396
I0
I0
I00
Ntp5397
a(S'TFloatListList'
p5398
S'cuts'
p5399
g5399
S'max_preds x num_preds matrix of cuts'
p5400
I0
I0
I00
Ntp5401
a(S'TFloatList'
p5402
S'betas'
p5403
g5403
S'Term coefficients;'
p5404
I0
I0
I00
Ntp5405
ag901
ag791
ag796
asg29
(dp5406
sbsS'TValueList'
p5407
(i__main__
ClassDefinition
p5408
(dp5409
g4
I1
sg5
I0
sg6
g5407
sg7
g2579
sg9
I00
sg10
(lp5410
sg12
(lp5411
(S'TVariable'
p5412
S'variable'
p5413
g5413
S'the variable to which the list applies'
p5414
I0
I0
I00
Ntp5415
asg29
(dp5416
sbsS'TTreeExampleSplitter_UnknownsToCommon'
p5417
(i__main__
ClassDefinition
p5418
(dp5419
g4
I1
sg5
I0
sg6
g5417
sg7
S'TTreeExampleSplitter'
p5420
sg9
I00
sg10
(lp5421
sg12
(lp5422
sg29
(dp5423
sbsS'TDomainTransformerConstructor'
p5424
(i__main__
ClassDefinition
p5425
(dp5426
g4
I1
sg5
I0
sg6
g5424
sg7
S'TOrange'
p5427
sg9
I01
sg10
(lp5428
sg12
(lp5429
(S'bool'
p5430
S'preservesOrder'
p5431
S'preserves_order'
p5432
S'a flag telling that original attributes have corresponding attribute in the same order'
p5433
I01
I0
I01
Ntp5434
a(S'bool'
p5435
S'preservesAttributes'
p5436
S'preserves_attributes'
p5437
S'a flag telling whether each original has a corresponding new attribute'
p5438
I01
I0
I01
Ntp5439
asg29
(dp5440
sbsS'TIGConstructor'
p5441
(i__main__
ClassDefinition
p5442
(dp5443
g4
I1
sg5
I0
sg6
g5441
sg7
S'TOrange'
p5444
sg9
I01
sg10
(lp5445
sg12
(lp5446
sg29
(dp5447
sbsS'TTreeDescender_UnknownToNode'
p5448
(i__main__
ClassDefinition
p5449
(dp5450
g4
I1
sg5
I0
sg6
g5448
sg7
g2227
sg9
I0
sg10
(lp5451
sg12
(lp5452
sg29
(dp5453
sbsS'TMakeRandomIndices'
p5454
(i__main__
ClassDefinition
p5455
(dp5456
g4
I1
sg5
I0
sg6
g5454
sg7
S'TOrange'
p5457
sg9
I00
sg10
(lp5458
sg12
(lp5459
g282
ag286
ag291
asg29
(dp5460
S'Stratification'
p5461
(lp5462
(S'StratifiedIfPossible'
p5463
S'-1'
p5464
tp5465
a(S'NotStratified'
p5466
I0
tp5467
a(S'Stratified'
p5468
I1
tp5469
assbsS'TFilter_Python'
p5470
(i__main__
ClassDefinition
p5471
(dp5472
g4
I1
sg5
I0
sg6
g5470
sg7
S'TFilter'
p5473
sg9
I00
sg10
(lp5474
sg12
(lp5475
g259
ag263
asg29
(dp5476
sbsS'TExamplesDistanceConstructor_Maximal'
p5477
(i__main__
ClassDefinition
p5478
(dp5479
g4
I1
sg5
I0
sg6
g5477
sg7
S'TExamplesDistanceConstructor_Normalized'
p5480
sg9
I00
sg10
(lp5481
sg12
(lp5482
g96
ag101
ag106
asg29
(dp5483
sbsS'TExamplesDistanceConstructor_Python'
p5484
(i__main__
ClassDefinition
p5485
(dp5486
g4
I1
sg5
I0
sg6
g5484
sg7
S'TExamplesDistanceConstructor'
p5487
sg9
I00
sg10
(lp5488
sg12
(lp5489
g106
asg29
(dp5490
sbsS'TPythonVariable'
p5491
(i__main__
ClassDefinition
p5492
(dp5493
g4
I1
sg5
I0
sg6
g5491
sg7
S'TVariable'
p5494
sg9
I00
sg10
(lp5495
sg12
(lp5496
(S'bool'
p5497
S'usePickle'
p5498
S'use_pickle'
p5499
S'tells whether to use pickle for saving to/loading from files'
p5500
I0
I0
I01
Ntp5501
a(S'bool'
p5502
S'useSomeValue'
p5503
S'use_some_value'
p5504
S'tells whether the Variable will operate on Value or SomeValue (default)'
p5505
I0
I0
I01
Ntp5506
ag642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp5507
sbsS'TGaussianNoiseGenerator'
p5508
(i__main__
ClassDefinition
p5509
(dp5510
g4
I1
sg5
I0
sg6
g5508
sg7
S'TChangeExampleGenerator'
p5511
sg9
I00
sg10
(lp5512
sg12
(lp5513
(S'TIntFloatList'
p5514
S'deviations'
p5515
g5515
S"deviations for attributes' values"
p5516
I0
I0
I00
Ntp5517
a(S'TRandomGenerator'
p5518
S'randomGenerator'
p5519
S'random_generator'
p5520
S'random generator'
p5521
I0
I0
I00
Ntp5522
ag121
ag125
asg29
(dp5523
sbsS'TClustersFromDistributionsByAssessor'
p5524
(i__main__
ClassDefinition
p5525
(dp5526
g4
I1
sg5
I0
sg6
g5524
sg7
S'TClustersFromDistributions'
p5527
sg9
I00
sg10
(lp5528
sg12
(lp5529
(S'TDistributionAssessor'
p5530
S'distributionAssessor'
p5531
S'distribution_assessor'
p5532
S'column quality assessor'
p5533
I0
I0
I00
Ntp5534
a(S'TStopDistributionClustering'
p5535
S'stopCriterion'
p5536
S'stop_criterion'
p5537
S'stop criterion'
p5538
I0
I0
I00
Ntp5539
a(S'float'
p5540
S'minProfitProportion'
p5541
S'min_profit_proportion'
p5542
S'minimal merge profit'
p5543
I0
I0
I01
Ntp5544
asg29
(dp5545
sbsS'TExamplesDistance_Hamming'
p5546
(i__main__
ClassDefinition
p5547
(dp5548
g4
I1
sg5
I0
sg6
g5546
sg7
S'TExamplesDistance'
p5549
sg9
I00
sg10
(lp5550
sg12
(lp5551
(S'bool'
p5552
S'ignoreClass'
p5553
S'ignore_class'
p5554
S'if true (default), class value is ignored when computing distances'
p5555
I0
I0
I01
Ntp5556
a(S'bool'
p5557
S'ignoreUnknowns'
p5558
S'ignore_unknowns'
p5559
S'if true (default: false) unknown values are ignored in computation'
p5560
I0
I0
I01
Ntp5561
asg29
(dp5562
sbsS'TColumnAssessor_Kramer'
p5563
(i__main__
ClassDefinition
p5564
(dp5565
g4
I1
sg5
I0
sg6
g5563
sg7
S'TColumnAssessor'
p5566
sg9
I00
sg10
(lp5567
sg12
(lp5568
sg29
(dp5569
sbsS'TEVDistGetter_Python'
p5570
(i__main__
ClassDefinition
p5571
(dp5572
g4
I1
sg5
I0
sg6
g5570
sg7
S'TEVDistGetter'
p5573
sg9
I00
sg10
(lp5574
sg12
(lp5575
sg29
(dp5576
sbsS'TDiscretization'
p5577
(i__main__
ClassDefinition
p5578
(dp5579
g4
I1
sg5
I0
sg6
g5577
sg7
S'TOrange'
p5580
sg9
I01
sg10
(lp5581
sg12
(lp5582
sg29
(dp5583
sbsS'TIMByRows'
p5584
(i__main__
ClassDefinition
p5585
(dp5586
g4
I1
sg5
I0
sg6
g5584
sg7
S'TOrange'
p5587
sg9
I00
sg10
(lp5588
sg12
(lp5589
(S'int'
p5590
S'varType'
p5591
S'var_type'
p5592
S' class variable type'
p5593
I0
I0
I01
S'Variable_Type'
p5594
tp5595
asg29
(dp5596
sbsS'TAssessIMQuality'
p5597
(i__main__
ClassDefinition
p5598
(dp5599
g4
I1
sg5
I0
sg6
g5597
sg7
S'TOrange'
p5600
sg9
I00
sg10
(lp5601
sg12
(lp5602
(S'TColumnAssessor'
p5603
S'columnAssessor'
p5604
S'column_assessor'
p5605
S'column quality assessor'
p5606
I0
I0
I00
Ntp5607
asg29
(dp5608
sbsS'TRule'
p5609
(i__main__
ClassDefinition
p5610
(dp5611
g4
I1
sg5
I0
sg6
g5609
sg7
S'TOrange'
p5612
sg9
I00
sg10
(lp5613
sg12
(lp5614
(S'TFilter'
p5615
S'filter'
p5616
g5616
S'stored filter for this rule'
p5617
I0
I0
I00
Ntp5618
a(S'TFilter'
p5619
S'valuesFilter'
p5620
S'values_filter'
p5621
S'Filter_values representation of main filter (sometimes needed)'
p5622
I0
I0
I00
Ntp5623
a(S'TClassifier'
p5624
S'classifier'
p5625
g5625
S'classifies an example'
p5626
I0
I0
I00
Ntp5627
a(S'TLearner'
p5628
S'learner'
p5629
g5629
S'learns a classifier from data'
p5630
I0
I0
I00
Ntp5631
a(S'TRule'
p5632
S'parentRule'
p5633
S'parent_rule'
p5634
g1294
I0
I0
I00
Ntp5635
a(S'TDistribution'
p5636
S'baseDist'
p5637
S'base_dist'
p5638
S'initial distribution'
p5639
I0
I0
I00
Ntp5640
a(S'TDistribution'
p5641
S'classDistribution'
p5642
S'class_distribution'
p5643
S'distribution of classes covered by the rule'
p5644
I0
I0
I00
Ntp5645
a(S'TExampleTable'
p5646
S'examples'
p5647
g5647
S'covered examples'
p5648
I0
I0
I00
Ntp5649
a(S'int'
p5650
S'weightID'
p5651
S'weight_ID'
p5652
S'weight for the stored examples'
p5653
I0
I0
I01
Ntp5654
a(S'float'
p5655
S'quality'
p5656
g5656
S'some measure of rule quality'
p5657
I0
I0
I01
Ntp5658
a(S'int'
p5659
S'complexity'
p5660
g5660
g1294
I0
I0
I01
Ntp5661
a(S'float'
p5662
S'chi'
p5663
g5663
g1294
I0
I0
I01
Ntp5664
a(S'int'
p5665
S'requiredConditions'
p5666
S'required_conditions'
p5667
S'conditions that are mandatory in rule - rule attribute significance avoids these'
p5668
I0
I0
I01
Ntp5669
asg29
(dp5670
sbsS'TPreprocessor_addClassNoise'
p5671
(i__main__
ClassDefinition
p5672
(dp5673
g4
I1
sg5
I0
sg6
g5671
sg7
S'TPreprocessor'
p5674
sg9
I00
sg10
(lp5675
sg12
(lp5676
(S'float'
p5677
S'proportion'
p5678
g5678
S'proportion of changed class values'
p5679
I0
I0
I01
Ntp5680
a(S'TRandomGenerator'
p5681
S'randomGenerator'
p5682
S'random_generator'
p5683
S'random number generator'
p5684
I0
I0
I00
Ntp5685
asg29
(dp5686
sbsS'TFilter'
p5687
(i__main__
ClassDefinition
p5688
(dp5689
g4
I1
sg5
I0
sg6
g5687
sg7
S'TOrange'
p5690
sg9
I01
sg10
(lp5691
sg12
(lp5692
g259
ag263
asg29
(dp5693
sbsS'TRuleBeamCandidateSelector_TakeAll'
p5694
(i__main__
ClassDefinition
p5695
(dp5696
g4
I1
sg5
I0
sg6
g5694
sg7
S'TRuleBeamCandidateSelector'
p5697
sg9
I00
sg10
(lp5698
sg12
(lp5699
sg29
(dp5700
sbsS'TPreprocessor_addMissing'
p5701
(i__main__
ClassDefinition
p5702
(dp5703
g4
I1
sg5
I0
sg6
g5701
sg7
S'TPreprocessor'
p5704
sg9
I00
sg10
(lp5705
sg12
(lp5706
(S'TVariableFloatMap'
p5707
S'proportions'
p5708
g5708
S'proportion of removed values for individual values'
p5709
I0
I0
I00
Ntp5710
a(S'float'
p5711
S'defaultProportion'
p5712
S'default_proportion'
p5713
S'default proportion of removed values (for attributes not specified above)'
p5714
I0
I0
I01
Ntp5715
a(S'int'
p5716
S'specialType'
p5717
S'special_type'
p5718
S'special value type (1=DC, 2=DK)'
p5719
I0
I0
I01
Ntp5720
a(S'TRandomGenerator'
p5721
S'randomGenerator'
p5722
S'random_generator'
p5723
S'random number generator'
p5724
I0
I0
I00
Ntp5725
asg29
(dp5726
sbsS'TThresholdDiscretizer'
p5727
(i__main__
ClassDefinition
p5728
(dp5729
g4
I1
sg5
I0
sg6
g5727
sg7
S'TDiscretizer'
p5730
sg9
I00
sg10
(lp5731
sg12
(lp5732
(S'float'
p5733
S'threshold'
p5734
g5734
S'threshold'
p5735
I0
I0
I01
Ntp5736
ag318
asg29
(dp5737
sbsS'TClusteringTreeLearner'
p5738
(i__main__
ClassDefinition
p5739
(dp5740
g4
I1
sg5
I0
sg6
g5738
sg7
S'TMultiLearner'
p5741
sg9
I00
sg10
(lp5742
sg12
(lp5743
(S'float'
p5744
S'minMajority'
p5745
S'min_majority'
p5746
S'the minimal majority each class variable must exceed to stop building'
p5747
I0
I0
I01
Ntp5748
a(S'float'
p5749
S'minMSE'
p5750
S'min_MSE'
p5751
S'the minimal MSE each class variable must be lower than to stop building'
p5752
I0
I0
I01
Ntp5753
a(S'int'
p5754
S'minInstances'
p5755
S'min_instances'
p5756
S'the minimal number of examples for division to continue'
p5757
I0
I0
I01
Ntp5758
a(S'int'
p5759
S'maxDepth'
p5760
S'max_depth'
p5761
S'the maximal depth a tree can reach'
p5762
I0
I0
I01
Ntp5763
a(S'int'
p5764
S'method'
p5765
g5765
g1294
I0
I0
I01
Ntp5766
a(S'float'
p5767
S'skipProb'
p5768
S'skip_prob'
p5769
g1294
I0
I0
I01
Ntp5770
a(S'TRandomGenerator'
p5771
S'randomGenerator'
p5772
S'random_generator'
p5773
g1294
I0
I0
I00
Ntp5774
ag4077
ag4081
asg29
(dp5775
sbsS'TValueFilter_stringList'
p5776
(i__main__
ClassDefinition
p5777
(dp5778
g4
I1
sg5
I0
sg6
g5776
sg7
S'TValueFilter'
p5779
sg9
I00
sg10
(lp5780
sg12
(lp5781
(S'TStringList'
p5782
S'values'
p5783
g5783
S'accepted values'
p5784
I0
I0
I00
Ntp5785
a(S'bool'
p5786
S'caseSensitive'
p5787
S'case_sensitive'
p5788
S'if true (default), the comparison is case sensitive'
p5789
I0
I0
I01
Ntp5790
ag3306
ag3311
asg29
(dp5791
sbsS'TDomain'
p5792
(i__main__
ClassDefinition
p5793
(dp5794
g4
I1
sg5
I0
sg6
g5792
sg7
S'TOrange'
p5795
sg9
I00
sg10
(lp5796
sg12
(lp5797
(S'TVariable'
p5798
S'classVar'
p5799
S'class_var'
p5800
S'class variable'
p5801
I01
I0
I00
Ntp5802
a(S'TVarList'
p5803
S'attributes'
p5804
(g5804
S'features'
p5805
tp5806
S' list of attributes, excluding the class'
p5807
I01
I0
I00
Ntp5808
a(S'TVarList'
p5809
S'variables'
p5810
g5810
S'list of attributes, including the class at the end of the list'
p5811
I01
I0
I00
Ntp5812
a(S'TVarList'
p5813
S'classVars'
p5814
S'class_vars'
p5815
S'list of class variables, if multiple; else None'
p5816
I01
I0
I00
Ntp5817
a(S'int'
p5818
S'version'
p5819
g5819
S"unique version identifier; it's changed each time a domain is changed"
p5820
I01
I0
I01
Ntp5821
asg29
(dp5822
sbsS'TTreePruner_SameMajority'
p5823
(i__main__
ClassDefinition
p5824
(dp5825
g4
I1
sg5
I0
sg6
g5823
sg7
S'TTreePruner'
p5826
sg9
I00
sg10
(lp5827
sg12
(lp5828
sg29
(dp5829
sbsS'TDomainDiscretization'
p5830
(i__main__
ClassDefinition
p5831
(dp5832
g4
I1
sg5
I0
sg6
g5830
sg7
S'TOrange'
p5833
sg9
I00
sg10
(lp5834
sg12
(lp5835
(S'TDiscretization'
p5836
S'discretization'
p5837
g5837
S'discretization'
p5838
I0
I0
I00
Ntp5839
asg29
(dp5840
sbsS'TTreeDescender_Python'
p5841
(i__main__
ClassDefinition
p5842
(dp5843
g4
I1
sg5
I0
sg6
g5841
sg7
S'TTreeDescender'
p5844
sg9
I00
sg10
(lp5845
sg12
(lp5846
sg29
(dp5847
sbsS'TKernelFunc'
p5848
(i__main__
ClassDefinition
p5849
(dp5850
g4
I1
sg5
I0
sg6
g5848
sg7
S'TOrange'
p5851
sg9
I01
sg10
(lp5852
sg12
(lp5853
sg29
(dp5854
sbsS'TRuleClassifierConstructor_Python'
p5855
(i__main__
ClassDefinition
p5856
(dp5857
g4
I1
sg5
I0
sg6
g5855
sg7
S'TRuleClassifierConstructor'
p5858
sg9
I00
sg10
(lp5859
sg12
(lp5860
sg29
(dp5861
sbsS'THierarchicalCluster'
p5862
(i__main__
ClassDefinition
p5863
(dp5864
g4
I1
sg5
I0
sg6
g5862
sg7
S'TOrange'
p5865
sg9
I00
sg10
(lp5866
sg12
(lp5867
(S'THierarchicalClusterList'
p5868
S'branches'
p5869
g5869
S'subclusters'
p5870
I0
I0
I00
Ntp5871
a(S'float'
p5872
S'height'
p5873
g5873
S'height'
p5874
I0
I0
I01
Ntp5875
a(S'TIntList'
p5876
S'mapping'
p5877
g5877
S'indices to the list of all elements in the clustering'
p5878
I0
I0
I00
Ntp5879
a(S'int'
p5880
S'first'
p5881
g5881
S"the index into 'elements' to the first element of the cluster"
p5882
I0
I0
I01
Ntp5883
a(S'int'
p5884
S'last'
p5885
g5885
S"the index into 'elements' to the one after the last element of the cluster"
p5886
I0
I0
I01
Ntp5887
asg29
(dp5888
sbsS'TBasketFeeder'
p5889
(i__main__
ClassDefinition
p5890
(dp5891
g4
I1
sg5
I0
sg6
g5889
sg7
S'TOrange'
p5892
sg9
I00
sg10
(lp5893
sg12
(lp5894
(S'bool'
p5895
S'dontStore'
p5896
S'dont_store'
p5897
S'disables items storing'
p5898
I0
I0
I01
Ntp5899
a(S'bool'
p5900
S'dontCheckStored'
p5901
S'dont_check_stored'
p5902
S'disables items lookup in the global cache'
p5903
I0
I0
I01
Ntp5904
a(S'TDomain'
p5905
S'domain'
p5906
g5906
S'domain where the meta attributes are stored'
p5907
I0
I0
I00
Ntp5908
a(S'TDomain'
p5909
S'sourceDomain'
p5910
S'source_domain'
p5911
S'domain with items that can be reused'
p5912
I0
I0
I00
Ntp5913
asg29
(dp5914
sbsS'TSubsetsGenerator_minMaxSize_iterator'
p5915
(i__main__
ClassDefinition
p5916
(dp5917
g4
I1
sg5
I0
sg6
g5915
sg7
S'TSubsetsGenerator_iterator'
p5918
sg9
I00
sg10
(lp5919
sg12
(lp5920
(S'int'
p5921
g4439
g4439
g1294
I01
I0
I01
Ntp5922
a(S'int'
p5923
S'max'
p5924
g5924
S'maximal subset size'
p5925
I0
I0
I01
Ntp5926
a(S'bool'
p5927
S'moreToCome'
p5928
S'more_to_come'
p5929
g1294
I01
I0
I01
Ntp5930
ag192
asg29
(dp5931
sbsS'TPreprocessor_dropMissing'
p5932
(i__main__
ClassDefinition
p5933
(dp5934
g4
I1
sg5
I0
sg6
g5932
sg7
S'TPreprocessor'
p5935
sg9
I00
sg10
(lp5936
sg12
(lp5937
sg29
(dp5938
sbsS'TComputeDomainContingency'
p5939
(i__main__
ClassDefinition
p5940
(dp5941
g4
I1
sg5
I0
sg6
g5939
sg7
S'TOrange'
p5942
sg9
I00
sg10
(lp5943
sg12
(lp5944
g28
asg29
(dp5945
sbsS'TFixedDiscretization'
p5946
(i__main__
ClassDefinition
p5947
(dp5948
g4
I1
sg5
I0
sg6
g5946
sg7
S'TDiscretization'
p5949
sg9
I00
sg10
(lp5950
sg12
(lp5951
(S'TFloatList'
p5952
S'points'
p5953
g5953
S'cut-off points'
p5954
I0
I0
I00
Ntp5955
asg29
(dp5956
sbsS'TExampleClusters'
p5957
(i__main__
ClassDefinition
p5958
(dp5959
g4
I1
sg5
I0
sg6
g5957
sg7
S'TGeneralExampleClustering'
p5960
sg9
I00
sg10
(lp5961
sg12
(lp5962
(S'TExampleCluster'
p5963
S'root'
p5964
g5964
S'root of cluster hierarchy'
p5965
I0
I0
I00
Ntp5966
a(S'float'
p5967
S'quality'
p5968
g5968
S"'quality' of clustering"
p5969
I0
I0
I01
Ntp5970
asg29
(dp5971
sbsS'TRuleDataStoppingCriteria'
p5972
(i__main__
ClassDefinition
p5973
(dp5974
g4
I1
sg5
I0
sg6
g5972
sg7
S'TOrange'
p5975
sg9
I01
sg10
(lp5976
sg12
(lp5977
sg29
(dp5978
sbsS'TPreprocessor_filter'
p5979
(i__main__
ClassDefinition
p5980
(dp5981
g4
I1
sg5
I0
sg6
g5979
sg7
S'TPreprocessor'
p5982
sg9
I00
sg10
(lp5983
sg12
(lp5984
(S'TFilter'
p5985
S'filter'
p5986
g5986
S'filter'
p5987
I0
I0
I00
Ntp5988
asg29
(dp5989
sbsS'TMakeRandomIndices2'
p5990
(i__main__
ClassDefinition
p5991
(dp5992
g4
I1
sg5
I0
sg6
g5990
sg7
S'TMakeRandomIndices'
p5993
sg9
I00
sg10
(lp5994
sg12
(lp5995
(S'float'
p5996
S'p0'
p5997
g5997
S"a proportion or a number of 0's"
p5998
I0
I0
I01
Ntp5999
ag282
ag286
ag291
asg29
(dp6000
sbsS'TLookupLearner'
p6001
(i__main__
ClassDefinition
p6002
(dp6003
g4
I1
sg5
I0
sg6
g6001
sg7
S'TLearner'
p6004
sg9
I00
sg10
(lp6005
sg12
(lp6006
(S'TLearner'
p6007
S'learnerForUnknown'
p6008
S'learner_for_unknown'
p6009
S'a learner for classifying cases not found in the table'
p6010
I0
I0
I00
Ntp6011
a(S'bool'
p6012
S'allowFastLookups'
p6013
S'allow_fast_lookups'
p6014
S'if true, it constructs LookupClassifiers for <=3 attributes'
p6015
I0
I0
I01
Ntp6016
a(S'int'
p6017
S'unknownsHandling'
p6018
S'unknowns_handling'
p6019
S'0 omit examples with unknowns, 1 distribute them, 2 keep them in table'
p6020
I0
I0
I01
Ntp6021
ag47
asg29
(dp6022
sbsS'TImputeClassifier'
p6023
(i__main__
ClassDefinition
p6024
(dp6025
g4
I1
sg5
I0
sg6
g6023
sg7
S'TClassifier'
p6026
sg9
I00
sg10
(lp6027
sg12
(lp6028
(S'TClassifierFromVar'
p6029
S'classifierFromVar'
p6030
S'classifier_from_var'
p6031
S'ClassifierFromVar that is used to retrieve defined values'
p6032
I0
I0
I00
Ntp6033
a(S'TClassifier'
p6034
S'imputer'
p6035
g6035
S'classifier that is used to determine the missing values '
p6036
I0
I0
I00
Ntp6037
ag791
ag796
asg29
(dp6038
sbsS'TMeasureAttribute_chiSquare'
p6039
(i__main__
ClassDefinition
p6040
(dp6041
g4
I1
sg5
I0
sg6
g6039
sg7
S'TMeasureAttributeFromProbabilities'
p6042
sg9
I00
sg10
(lp6043
sg12
(lp6044
(S'bool'
p6045
S'computeProbabilities'
p6046
S'compute_probabilities'
p6047
g1294
I0
I0
I01
Ntp6048
ag446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp6049
sbsS'TDistribution'
p6050
(i__main__
ClassDefinition
p6051
(dp6052
g4
I1
sg5
I0
sg6
g6050
sg7
S'TSomeValue'
p6053
sg9
I01
sg10
(lp6054
sg12
(lp6055
g2191
ag2195
ag2199
ag2203
ag2207
ag2212
ag2217
ag2222
asg29
(dp6056
sbsS'TTreePruner_m'
p6057
(i__main__
ClassDefinition
p6058
(dp6059
g4
I1
sg5
I0
sg6
g6057
sg7
S'TTreePruner'
p6060
sg9
I00
sg10
(lp6061
sg12
(lp6062
(S'float'
p6063
g991
g991
S'm for m-estimate'
p6064
I0
I0
I01
Ntp6065
asg29
(dp6066
sbsS'TBiModalDiscretization'
p6067
(i__main__
ClassDefinition
p6068
(dp6069
g4
I1
sg5
I0
sg6
g6067
sg7
S'TDiscretization'
p6070
sg9
I00
sg10
(lp6071
sg12
(lp6072
(S'bool'
p6073
S'splitInTwo'
p6074
S'split_in_two'
p6075
S'if true (default), flanks are merged into a single interval'
p6076
I0
I0
I01
Ntp6077
asg29
(dp6078
sbsS'TRuleBeamRefiner_Python'
p6079
(i__main__
ClassDefinition
p6080
(dp6081
g4
I1
sg5
I0
sg6
g6079
sg7
S'TRuleBeamRefiner'
p6082
sg9
I00
sg10
(lp6083
sg12
(lp6084
sg29
(dp6085
sbsS'TClassifierFromVarFD'
p6086
(i__main__
ClassDefinition
p6087
(dp6088
g4
I1
sg5
I0
sg6
g6086
sg7
S'TClassifierFD'
p6089
sg9
I00
sg10
(lp6090
sg12
(lp6091
(S'int'
p6092
S'position'
p6093
g6093
S'position of the attribute in domain'
p6094
I0
I0
I01
Ntp6095
a(S'TTransformValue'
p6096
S'transformer'
p6097
g6097
S'transformer'
p6098
I0
I0
I00
Ntp6099
a(S'TDistribution'
p6100
S'distributionForUnknown'
p6101
S'distribution_for_unknown'
p6102
S'distribution for unknown value'
p6103
I0
I0
I00
Ntp6104
a(S'bool'
p6105
S'transformUnknowns'
p6106
S'transform_unknowns'
p6107
S'if false (default is true), unknowns stay unknown or are changed into distribution if given'
p6108
I0
I0
I01
Ntp6109
ag901
ag791
ag796
asg29
(dp6110
sbsS'TImputer_model'
p6111
(i__main__
ClassDefinition
p6112
(dp6113
g4
I1
sg5
I0
sg6
g6111
sg7
S'TImputer'
p6114
sg9
I00
sg10
(lp6115
sg12
(lp6116
(S'TClassifierList'
p6117
S'models'
p6118
g6118
S'classifiers'
p6119
I0
I0
I00
Ntp6120
asg29
(dp6121
sbsS'TFeatureByDistributions'
p6122
(i__main__
ClassDefinition
p6123
(dp6124
g4
I1
sg5
I0
sg6
g6122
sg7
S'TFeatureInducer'
p6125
sg9
I00
sg10
(lp6126
sg12
(lp6127
(S'TClustersFromDistributions'
p6128
S'clustersFromDistributions'
p6129
S'clusters_from_distributions'
p6130
S'clustering algorithm'
p6131
I0
I0
I00
Ntp6132
a(S'int'
p6133
S'completion'
p6134
g6134
S' decides how to determine the class for points not covered by any cluster'
p6135
I0
I0
I01
S'FeatureByDistributions_Completion'
p6136
tp6137
asg29
(dp6138
S'Completion'
p6139
(lp6140
(S'NoCompletion'
p6141
S'completion_no'
p6142
tp6143
a(S'CompletionByDefault'
p6144
S'completion_default'
p6145
tp6146
a(S'CompletionByBayes'
p6147
S'completion_bayes'
p6148
tp6149
assbsS'TPreprocessor_takeMissing'
p6150
(i__main__
ClassDefinition
p6151
(dp6152
g4
I1
sg5
I0
sg6
g6150
sg7
S'TPreprocessor'
p6153
sg9
I00
sg10
(lp6154
sg12
(lp6155
sg29
(dp6156
sbsS'TTreeDescender_UnknownToBranch'
p6157
(i__main__
ClassDefinition
p6158
(dp6159
g4
I1
sg5
I0
sg6
g6157
sg7
g2227
sg9
I0
sg10
(lp6160
sg12
(lp6161
sg29
(dp6162
sbsS'TTreeSplitConstructor_Attribute'
p6163
(i__main__
ClassDefinition
p6164
(dp6165
g4
I1
sg5
I0
sg6
g6163
sg7
S'TTreeSplitConstructor_Measure'
p6166
sg9
I00
sg10
(lp6167
sg12
(lp6168
g2388
ag2393
ag1707
asg29
(dp6169
sbsS'TCostMatrix'
p6170
(i__main__
ClassDefinition
p6171
(dp6172
g4
I1
sg5
I0
sg6
g6170
sg7
S'TOrange'
p6173
sg9
I00
sg10
(lp6174
sg12
(lp6175
(S'TVariable'
p6176
S'classVar'
p6177
S'class_var'
p6178
S'attribute to which the matrix applies'
p6179
I0
I0
I00
Ntp6180
a(S'int'
p6181
S'dimension'
p6182
g6182
S'dimension (should equal classVar.noOfValues())'
p6183
I01
I0
I01
Ntp6184
asg29
(dp6185
sbsS'TFilter_sameValue'
p6186
(i__main__
ClassDefinition
p6187
(dp6188
g4
I1
sg5
I0
sg6
g6186
sg7
S'TFilter'
p6189
sg9
I00
sg10
(lp6190
sg12
(lp6191
(S'int'
p6192
S'position'
p6193
g6193
S'position of the observed attribute'
p6194
I0
I0
I01
Ntp6195
a(S'TValue'
p6196
S'value'
p6197
g6197
S'value that the selected examples should have'
p6198
I0
I0
I01
Ntp6199
ag259
ag263
asg29
(dp6200
sbsS'TExamplesDistance_Euclidean'
p6201
(i__main__
ClassDefinition
p6202
(dp6203
g4
I1
sg5
I0
sg6
g6201
sg7
S'TExamplesDistance_Normalized'
p6204
sg9
I00
sg10
(lp6205
sg12
(lp6206
(S'TDomainDistributions'
p6207
S'distributions'
p6208
g6208
S'distributions (of discrete attributes only)'
p6209
I0
I0
I00
Ntp6210
a(S'TAttributedFloatList'
p6211
S'bothSpecialDist'
p6212
S'both_special_dist'
p6213
S'distances between discrete attributes if both values are unknown'
p6214
I0
I0
I00
Ntp6215
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp6216
sbsS'TIMConstructor'
p6217
(i__main__
ClassDefinition
p6218
(dp6219
g4
I1
sg5
I0
sg6
g6217
sg7
S'TOrange'
p6220
sg9
I01
sg10
(lp6221
sg12
(lp6222
g2627
asg29
(dp6223
sbsS'TConditionalProbabilityEstimatorConstructor_loess'
p6224
(i__main__
ClassDefinition
p6225
(dp6226
g4
I1
sg5
I0
sg6
g6224
sg7
S'TConditionalProbabilityEstimatorConstructor'
p6227
sg9
I00
sg10
(lp6228
sg12
(lp6229
(S'float'
p6230
S'windowProportion'
p6231
S'window_proportion'
p6232
S'The proportion of points in a window for LR'
p6233
I0
I0
I01
Ntp6234
a(S'int'
p6235
S'nPoints'
p6236
S'n_points'
p6237
S'The number of points on curve'
p6238
I0
I0
I01
Ntp6239
a(S'int'
p6240
S'distributionMethod'
p6241
S'distribution_method'
p6242
S" Meaning of the 'nPoints'"
p6243
I0
I0
I01
S'ConditionalProbabilityEstimatorConstructor_loess_DistributionMethod'
p6244
tp6245
asg29
(dp6246
S'DistributionMethod'
p6247
(lp6248
(S'Minimal'
p6249
S'DISTRIBUTE_MINIMAL'
p6250
tp6251
a(S'Factor'
p6252
S'DISTRIBUTE_FACTOR'
p6253
tp6254
a(S'Fixed'
p6255
S'DISTRIBUTE_FIXED'
p6256
tp6257
a(S'Uniform'
p6258
S'DISTRIBUTE_UNIFORM'
p6259
tp6260
a(S'Maximal'
p6261
S'DISTRIBUTE_MAXIMAL'
p6262
tp6263
assbsS'TTreeSplitConstructor_Threshold'
p6264
(i__main__
ClassDefinition
p6265
(dp6266
g4
I1
sg5
I0
sg6
g6264
sg7
S'TTreeSplitConstructor_Measure'
p6267
sg9
I00
sg10
(lp6268
sg12
(lp6269
g2388
ag2393
ag1707
asg29
(dp6270
sbsS'TDistanceMap'
p6271
(i__main__
ClassDefinition
p6272
(dp6273
g4
I1
sg5
I0
sg6
g6271
sg7
S'TOrange'
p6274
sg9
I00
sg10
(lp6275
sg12
(lp6276
(S'int'
p6277
S'dim'
p6278
g6278
S'bitmap dimension (in cells)'
p6279
I01
I0
I01
Ntp6280
a(S'int'
p6281
S'matrixType'
p6282
S'matrix_type'
p6283
S'0 lower, 1 upper, 2 symmetric'
p6284
I0
I0
I01
Ntp6285
a(S'TIntList'
p6286
S'elementIndices'
p6287
S'element_indices'
p6288
S'indices to elements (one for row + one at the end)'
p6289
I01
I0
I00
Ntp6290
asg29
(dp6291
sbsS'TExampleForMissing'
p6292
(i__main__
ClassDefinition
p6293
(dp6294
g4
I1
sg5
I0
sg6
g6292
sg7
S'TExample'
p6295
sg9
I00
sg10
(lp6296
sg12
(lp6297
(S'TEFMDataDescription'
p6298
S'dataDescription'
p6299
S'data_description'
p6300
S'data description'
p6301
I0
I0
I00
Ntp6302
ag2795
ag2798
asg29
(dp6303
sbsS'TCostLearner'
p6304
(i__main__
ClassDefinition
p6305
(dp6306
g4
I1
sg5
I0
sg6
g6304
sg7
S'TMajorityLearner'
p6307
sg9
I00
sg10
(lp6308
sg12
(lp6309
(S'TCostMatrix'
p6310
S'cost'
p6311
g6311
S'cost matrix'
p6312
I0
I0
I00
Ntp6313
ag3738
ag3743
ag47
asg29
(dp6314
sbsS'TPreprocessor_drop'
p6315
(i__main__
ClassDefinition
p6316
(dp6317
g4
I1
sg5
I0
sg6
g6315
sg7
S'TPreprocessor'
p6318
sg9
I00
sg10
(lp6319
sg12
(lp6320
(S'TVariableFilterMap'
p6321
S'values'
p6322
g6322
S'variable-filter pairs'
p6323
I0
I0
I00
Ntp6324
a(S'bool'
p6325
S'conjunction'
p6326
g6326
S'decides whether to take conjunction or disjunction of values'
p6327
I0
I0
I01
Ntp6328
asg29
(dp6329
sbsS'TPreprocessor_addNoise'
p6330
(i__main__
ClassDefinition
p6331
(dp6332
g4
I1
sg5
I0
sg6
g6330
sg7
S'TPreprocessor'
p6333
sg9
I00
sg10
(lp6334
sg12
(lp6335
(S'TVariableFloatMap'
p6336
S'proportions'
p6337
g6337
S'proportion of changed values for individual attributes'
p6338
I0
I0
I00
Ntp6339
a(S'float'
p6340
S'defaultProportion'
p6341
S'default_proportion'
p6342
S'default proportion of changed values (for attributes not specified above)'
p6343
I0
I0
I01
Ntp6344
a(S'TRandomGenerator'
p6345
S'randomGenerator'
p6346
S'random_generator'
p6347
S'random number generator'
p6348
I0
I0
I00
Ntp6349
asg29
(dp6350
sbsS'TColumnAssessor_mf'
p6351
(i__main__
ClassDefinition
p6352
(dp6353
g4
I1
sg5
I0
sg6
g6351
sg7
S'TColumnAssessor'
p6354
sg9
I00
sg10
(lp6355
sg12
(lp6356
(S'float'
p6357
g991
g991
S'm for m-estimate'
p6358
I0
I0
I01
Ntp6359
asg29
(dp6360
sbsS'TSubsetsGenerator'
p6361
(i__main__
ClassDefinition
p6362
(dp6363
g4
I1
sg5
I0
sg6
g6361
sg7
S'TOrange'
p6364
sg9
I01
sg10
(lp6365
sg12
(lp6366
g2360
asg29
(dp6367
sbsS'TPreprocessor_addCensorWeight'
p6368
(i__main__
ClassDefinition
p6369
(dp6370
g4
I1
sg5
I0
sg6
g6368
sg7
S'TPreprocessor'
p6371
sg9
I00
sg10
(lp6372
sg12
(lp6373
(S'TVariable'
p6374
S'outcomeVar'
p6375
S'outcome_var'
p6376
S'outcome variable'
p6377
I0
I0
I00
Ntp6378
a(S'TVariable'
p6379
S'timeVar'
p6380
S'time_var'
p6381
S'time variable'
p6382
I0
I0
I00
Ntp6383
a(S'TValue'
p6384
S'eventValue'
p6385
S'event_value'
p6386
S'event (fail) value'
p6387
I0
I0
I01
Ntp6388
a(S'int'
p6389
S'method'
p6390
g6390
S' weighting method'
p6391
I0
I0
I01
S'Preprocessor_addCensorWeight_Method'
p6392
tp6393
a(S'float'
p6394
S'maxTime'
p6395
S'max_time'
p6396
S'maximal time'
p6397
I0
I0
I01
Ntp6398
a(S'bool'
p6399
S'addComplementary'
p6400
S'add_complementary'
p6401
S'if true (default is false), complementary examples are added for censored examples'
p6402
I0
I0
I01
Ntp6403
asg29
(dp6404
S'Method'
p6405
(lp6406
(S'Linear'
p6407
S'TPreprocessor_addCensorWeight::linear'
p6408
tp6409
a(S'KM'
p6410
S'TPreprocessor_addCensorWeight::km'
p6411
tp6412
a(S'Bayes'
p6413
S'TPreprocessor_addCensorWeight::bayes'
p6414
tp6415
assbsS'TTreeStopCriteria_common'
p6416
(i__main__
ClassDefinition
p6417
(dp6418
g4
I1
sg5
I0
sg6
g6416
sg7
S'TTreeStopCriteria'
p6419
sg9
I00
sg10
(lp6420
sg12
(lp6421
(S'float'
p6422
S'maxMajority'
p6423
S'max_majority'
p6424
S'a maximal proportion of majority class for division to continue'
p6425
I0
I0
I01
Ntp6426
a(S'float'
p6427
S'minInstances'
p6428
S'min_instances'
p6429
S'a minimal number of examples for division to continue'
p6430
I0
I0
I01
Ntp6431
asg29
(dp6432
sbsS'TGaussianDistribution'
p6433
(i__main__
ClassDefinition
p6434
(dp6435
g4
I1
sg5
I0
sg6
g6433
sg7
S'TDistribution'
p6436
sg9
I00
sg10
(lp6437
sg12
(lp6438
(S'float'
p6439
S'mean'
p6440
g6440
S'mu'
p6441
I0
I0
I01
Ntp6442
a(S'float'
p6443
S'sigma'
p6444
g6444
S'sigma'
p6445
I0
I0
I01
Ntp6446
ag2191
ag2195
ag2199
ag2203
ag2207
ag2212
ag2217
ag2222
asg29
(dp6447
sbsS'TProbabilityEstimator'
p6448
(i__main__
ClassDefinition
p6449
(dp6450
g4
I1
sg5
I0
sg6
g6448
sg7
S'TOrange'
p6451
sg9
I01
sg10
(lp6452
sg12
(lp6453
g714
ag719
asg29
(dp6454
sbsS'TPreprocessor'
p6455
(i__main__
ClassDefinition
p6456
(dp6457
g4
I1
sg5
I0
sg6
g6455
sg7
S'TOrange'
p6458
sg9
I01
sg10
(lp6459
sg12
(lp6460
sg29
(dp6461
sbsS'TExampleGenerator'
p6462
(i__main__
ClassDefinition
p6463
(dp6464
g4
I1
sg5
I0
sg6
g6462
sg7
S'TOrange'
p6465
sg9
I01
sg10
(lp6466
sg12
(lp6467
g121
ag125
asg29
(dp6468
sbsS'TGeneralExampleClustering'
p6469
(i__main__
ClassDefinition
p6470
(dp6471
g4
I1
sg5
I0
sg6
g6469
sg7
S'TOrange'
p6472
sg9
I01
sg10
(lp6473
sg12
(lp6474
sg29
(dp6475
sbs.